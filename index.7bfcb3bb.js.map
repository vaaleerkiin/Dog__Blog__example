{"mappings":"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","sources":["src/js/burger-menu.js","src/js/translate.js","node_modules/src/lg-events.ts","node_modules/src/lg-settings.ts","node_modules/src/lgQuery.ts","node_modules/src/lg-utils.ts","node_modules/src/lightgallery.ts","node_modules/src/index.ts","src/plugins/autoplay/lg-autoplay.min.js","src/plugins/thumbnail/lg-thumbnail.min.js","src/js/source/DynamicMainGallaryEl.json","src/js/main-gallary.js"],"sourcesContent":["const refs = {\r\n  openMenuBtn: document.querySelector('[data-menu-open]'),\r\n  MenuBtnaboutMe: document.querySelector('[data-menu-aboutMe]'),\r\n  MenuBtnSoc: document.querySelector('[data-menu-soc]'),\r\n  MenuBtnContact: document.querySelector('[data-menu-contact]'),\r\n  menu: document.querySelector('[data-menu]'),\r\n};\r\n\r\nrefs.openMenuBtn.addEventListener('click', toggleModal);\r\nrefs.MenuBtnaboutMe.addEventListener('click', toggleModal);\r\nrefs.MenuBtnSoc.addEventListener('click', toggleModal);\r\nrefs.MenuBtnContact.addEventListener('click', toggleModal);\r\n\r\nfunction toggleModal() {\r\n  document.body.classList.toggle('menu-open');\r\n  refs.menu.classList.toggle('is-hidden-menu');\r\n}\r\n","const LangArr = {\r\n  lng__logo: { ua: 'Щоденник Пті брабансона', en: `Brabanson's Dog Diary` },\r\n  lng__aboutMe__nav: { ua: 'Про мене', en: 'About Me' },\r\n  lng__news__nav: { ua: 'Новини', en: 'News' },\r\n  lng__contact__nav: { ua: 'Контаки', en: 'Contacts' },\r\n  lng__aboutMe__menu: { ua: 'Про мене', en: 'About Me' },\r\n  lng__news__menu: { ua: 'Новини', en: 'News' },\r\n  lng__contact__menu: { ua: 'Контаки', en: 'Contacts' },\r\n  lng__heroTitle: {\r\n    ua: 'Пті брабансон: блог собаки-компаньйона',\r\n    en: 'Brabanson: Companion Dog Blog',\r\n  },\r\n  lng__heroText: {\r\n    ua: 'Вітаємо на блозі нашої улюбленої собаки-компаньйона! Ми раді поділитися з вами нашими пригодами, враженнями та щоденним життям у сприятливому суспільстві з нашою веселою і доброю собачкою. Слідкуйте за нами та дізнавайтеся більше про нашу дружню команду!',\r\n    en: 'Welcome to the blog of our beloved companion dog! We are happy to share with you our adventures, impressions, and daily life in a friendly society with our cheerful and good dog. Follow us and learn more about our friendly team!',\r\n  },\r\n  lng__inform__title: { ua: 'Про мене', en: 'About Me' },\r\n};\r\n\r\nconst refs = {\r\n  navBtnEn: document.querySelector('#nav__en'),\r\n  navBtnUa: document.querySelector('#nav__ua'),\r\n  menuBtnEn: document.querySelector('#menu__en'),\r\n  menuBtnUa: document.querySelector('#menu__ua'),\r\n  allLang: ['en', 'ua'],\r\n};\r\n\r\nrefs.navBtnEn.addEventListener('click', () => changeURLLang('en'));\r\nrefs.navBtnUa.addEventListener('click', () => changeURLLang('ua'));\r\nrefs.menuBtnEn.addEventListener('click', () => changeURLLang('en'));\r\nrefs.menuBtnUa.addEventListener('click', () => changeURLLang('ua'));\r\n\r\nfunction changeURLLang(lang) {\r\n  console.log(lang);\r\n  location.href = window.location.pathname + '#' + lang;\r\n  location.reload();\r\n}\r\nfunction changeWebLang() {\r\n  let hash = window.location.hash;\r\n  hash = hash.substring(1);\r\n  8;\r\n  if (!refs.allLang.includes(hash)) {\r\n    location.href = window.location.pathname + '#ua';\r\n    location.reload();\r\n  }\r\n  for (const key in LangArr) {\r\n    document.querySelector(`.${key}`).innerHTML = LangArr[key][hash];\r\n  }\r\n}\r\nchangeWebLang();\r\n","import { LightGallery } from './lightgallery';\nimport { VideoSource } from './plugins/video/types';\n\n/**\n * List of lightGallery events\n * All events should be documented here\n * Below interfaces are used to build the website documentations\n * */\nexport const lGEvents: {\n    [key: string]: string;\n} = {\n    afterAppendSlide: 'lgAfterAppendSlide',\n    init: 'lgInit',\n    hasVideo: 'lgHasVideo',\n    containerResize: 'lgContainerResize',\n    updateSlides: 'lgUpdateSlides',\n    afterAppendSubHtml: 'lgAfterAppendSubHtml',\n    beforeOpen: 'lgBeforeOpen',\n    afterOpen: 'lgAfterOpen',\n    slideItemLoad: 'lgSlideItemLoad',\n    beforeSlide: 'lgBeforeSlide',\n    afterSlide: 'lgAfterSlide',\n    posterClick: 'lgPosterClick',\n    dragStart: 'lgDragStart',\n    dragMove: 'lgDragMove',\n    dragEnd: 'lgDragEnd',\n    beforeNextSlide: 'lgBeforeNextSlide',\n    beforePrevSlide: 'lgBeforePrevSlide',\n    beforeClose: 'lgBeforeClose',\n    afterClose: 'lgAfterClose',\n    rotateLeft: 'lgRotateLeft',\n    rotateRight: 'lgRotateRight',\n    flipHorizontal: 'lgFlipHorizontal',\n    flipVertical: 'lgFlipVertical',\n    autoplay: 'lgAutoplay',\n    autoplayStart: 'lgAutoplayStart',\n    autoplayStop: 'lgAutoplayStop',\n};\n\n// Follow the below format for the event documentation\n// @method is the method name when event is used with Angular/React components\n\n/**\n * Fired only once when lightGallery is initialized\n * @name lgInit\n * @method onInit\n * @example\n *   const lg = document.getElementById('custom-events-demo');\n *   // Perform any action on lightGallery initialization.\n *   // Init event returns the plugin instance that can be used to call any lightGalley public method\n *   let pluginInstance = null;\n *   lg.addEventListener('lgInit', (event) => {\n *      pluginInstance = event.detail.instance;\n *   });\n *   lightGallery(lg);\n * @see <a href=\"/docs/methods\">Methods<a>\n */\nexport interface InitDetail {\n    /**\n     * lightGallery plugin instance\n     */\n    instance: LightGallery;\n}\n\n/**\n * Fired when the slide content has been inserted into it's slide container.\n * @name lgAfterAppendSlide\n * @method onAfterAppendSlide\n */\nexport interface AfterAppendSlideEventDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired immediately before opening the gallery\n * @name lgBeforeOpen\n * @method onBeforeOpen\n */\nexport interface BeforeOpenDetail {}\n\n/**\n * Fired immediately after opening the gallery\n * @name lgAfterOpen\n * @method onAfterOpen\n */\nexport interface AfterOpenDetail {}\n\n/**\n * Fired once the media inside the slide has been completely loaded .\n * @name lgSlideItemLoad\n * @method onSlideItemLoad\n */\nexport interface SlideItemLoadDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * For the first slide, lightGallery adds some delay for displaying the loaded slide item.\n     * This delay is required for the transition effect when the slide item is displayed\n     * Respect the delay when you use this event\n     */\n    delay: number;\n\n    // Will be true for the first slide\n    isFirstSlide: boolean;\n}\n\n/**\n * Fired immediately before each slide transition.\n * @name lgBeforeSlide\n * @method onBeforeSlide\n * @example\n *   const lg = document.getElementById('custom-events-demo');\n *   // Perform any action before each slide transition\n *   lg.addEventListener('lgBeforeSlide', (event) => {\n *       const { index, prevIndex } = event.detail;\n *       alert(index, prevIndex);\n *   });\n *   lightGallery(lg);\n */\nexport interface BeforeSlideDetail {\n    /**\n     * Index of the previous slide\n     */\n    prevIndex: number;\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n    /**\n     * true if slide function called via thumbnail click\n     */\n    fromThumb: boolean;\n}\n\n/**\n * Fired immediately after each slide transition.\n * @name lgAfterSlide\n * @method onAfterSlide\n */\nexport interface AfterSlideDetail {\n    /**\n     * Index of the previous slide\n     */\n    prevIndex: number;\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n    /**\n     * true if slide function called via thumbnail click\n     */\n    fromThumb: boolean;\n}\n\n/**\n * Fired when the video poster is clicked.\n * @name lgPosterClick\n * @method onPosterClick\n */\nexport interface PosterClickDetail {}\n\n/**\n * Fired when the drag event to move to different slide starts.\n * @name lgDragStart\n * @method onDragStart\n */\nexport interface DragStartDetail {}\n\n/**\n * Fired periodically during the drag operation.\n * @name lgDragMove\n * @method onDragMove\n */\nexport interface DragMoveDetail {}\n\n/**\n * Fired when the user has finished the drag operation\n * @name lgDragEnd\n * @method onDragEnd\n */\nexport interface DragEndDetail {}\n\n/**\n * Fired immediately before the start of the close process.\n * @name lgBeforeClose\n * @method onBeforeClose\n */\nexport interface BeforeCloseDetail {}\n\n/**\n * Fired immediately once lightGallery is closed.\n * @name lgAfterClose\n * @method onAfterClose\n */\nexport interface AfterCloseDetail {\n    /**\n     * lightGallery plugin instance\n     */\n    instance: LightGallery;\n}\n\n/**\n * Fired immediately before each \"next\" slide transition\n * @name lgBeforeNextSlide\n * @method onBeforeNextSlide\n */\nexport interface BeforeNextSlideDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n}\n\n/**\n * Fired immediately before each \"prev\" slide transition\n * @name lgBeforePrevSlide\n * @method onBeforePrevSlide\n */\nexport interface BeforePrevSlideDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n}\n\n/**\n * Fired when the sub-html content (ex : title/ description) has been appended into the slide.\n * @name lgAfterAppendSubHtml\n * @method onAfterAppendSubHtml\n */\nexport interface AfterAppendSubHtmlDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the lightGallery container has been resized.\n * @name lgContainerResize\n * @method onContainerResize\n */\nexport interface ContainerResizeDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when lightGallery detects video slide\n * @name lgHasVideo\n * @method onHasVideo\n */\nexport interface HasVideoDetail {\n    /**\n     * Index of the slide,\n     */\n    index: number;\n    /**\n     * Video source\n     */\n    src: string;\n    /**\n     * HTML5 video source if available\n     * <p>\n       HTML5 video source = source: {\n            src: string;\n            type: string;\n        }[];\n        attributes: HTMLVideoElement;\n     * </p>\n     */\n    html5Video: VideoSource;\n    /**\n     * True if video has poster\n     */\n    hasPoster: boolean;\n}\n\n/**\n * Fired when the image is rotated in anticlockwise direction\n * @name lgRotateLeft\n * @method onRotateLeft\n */\nexport interface RotateLeftDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is rotated in clockwise direction\n * @name lgRotateRight\n * @method onRotateRight\n */\nexport interface RotateRightDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is flipped horizontally\n * @name lgFlipHorizontal\n * @method onFlipHorizontal\n */\nexport interface FlipHorizontalDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is flipped vertically\n * @name lgFlipVertical\n * @method onFlipVertical\n */\nexport interface FlipVerticalDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n","import { GalleryItem } from './lg-utils';\nimport { LgQuery } from './lgQuery';\nimport { LightGallery } from './lightgallery';\nimport { AutoplaySettings } from './plugins/autoplay/lg-autoplay-settings';\nimport { CommentSettings } from './plugins/comment/lg-comment-settings';\nimport { FullscreenSettings } from './plugins/fullscreen/lg-fullscreen-settings';\nimport { HashSettings } from './plugins/hash/lg-hash-settings';\nimport { PagerSettings } from './plugins/pager/lg-pager-settings';\nimport { RotateSettings } from './plugins/rotate/lg-rotate-settings';\nimport { ShareSettings } from './plugins/share/lg-share-settings';\nimport { ThumbnailsSettings } from './plugins/thumbnail/lg-thumbnail-settings';\nimport { VideoSettings } from './plugins/video/lg-video-settings';\nimport { ZoomSettings } from './plugins/zoom/lg-zoom-settings';\n\ntype LightGalleryCoreMobileSettings = Exclude<\n    LightGalleryCoreSettings,\n    'mobileSettings'\n>;\n\n// @todo use separate mobile settings for plugins\nexport interface MobileSettings\n    extends LightGalleryCoreMobileSettings,\n        Partial<ZoomSettings>,\n        Partial<ThumbnailsSettings>,\n        Partial<VideoSettings>,\n        Partial<AutoplaySettings>,\n        Partial<CommentSettings>,\n        Partial<FullscreenSettings>,\n        Partial<HashSettings>,\n        Partial<PagerSettings>,\n        Partial<RotateSettings>,\n        Partial<ShareSettings> {}\n\nexport interface LightGalleryCoreStrings {\n    closeGallery: string;\n    toggleMaximize: string;\n    previousSlide: string;\n    nextSlide: string;\n    download: string;\n    playVideo: string;\n}\n\nexport type LightGalleryAllSettings = LightGalleryCoreSettings &\n    ZoomSettings &\n    ThumbnailsSettings &\n    VideoSettings &\n    AutoplaySettings &\n    CommentSettings &\n    FullscreenSettings &\n    HashSettings &\n    PagerSettings &\n    RotateSettings &\n    ShareSettings;\n\nexport type LightGallerySettings = Partial<LightGalleryAllSettings>;\n\nexport interface LightGalleryCoreSettings {\n    /**\n     * Type of transition between images.\n     */\n    mode:\n        | 'lg-slide'\n        | 'lg-fade'\n        | 'lg-zoom-in'\n        | 'lg-zoom-in-big'\n        | 'lg-zoom-out'\n        | 'lg-zoom-out-big'\n        | 'lg-zoom-out-in'\n        | 'lg-zoom-in-out'\n        | 'lg-soft-zoom'\n        | 'lg-scale-up'\n        | 'lg-slide-circular'\n        | 'lg-slide-circular-vertical'\n        | 'lg-slide-vertical'\n        | 'lg-slide-vertical-growth'\n        | 'lg-slide-skew-only'\n        | 'lg-slide-skew-only-rev'\n        | 'lg-slide-skew-only-y'\n        | 'lg-slide-skew-only-y-rev'\n        | 'lg-slide-skew'\n        | 'lg-slide-skew-rev'\n        | 'lg-slide-skew-cross'\n        | 'lg-slide-skew-cross-rev'\n        | 'lg-slide-skew-ver'\n        | 'lg-slide-skew-ver-rev'\n        | 'lg-slide-skew-ver-cross'\n        | 'lg-slide-skew-ver-cross-rev'\n        | 'lg-lollipop'\n        | 'lg-lollipop-rev'\n        | 'lg-rotate'\n        | 'lg-rotate-rev'\n        | 'lg-tube';\n\n    /**\n     * Slide animation CSS easing property\n     */\n    easing: string;\n\n    /**\n     *Transition duration (in ms).\n     */\n    speed: number;\n\n    /**\n     * If you are using lightGallery for commercial projects, you need to purchase a commercial license\n     * to get the license key. For projects that are compatible with GPLv3 license,\n     * please contact us for getting a license key at <a href=\"mailto:contact@lightgalleryjs.com\">contact@lightgalleryjs.com</a>.\n     * If you want to test lightGallery before purchasing a commercial license, you can\n     * use `0000-0000-000-0000` as a temporary license key\n     */\n\n    licenseKey: string;\n\n    /**\n     * Height of the gallery.\n     * example '100%' , '300px'\n     */\n    height: string;\n\n    /**\n     * Width of the gallery.\n     * example '100%' , '300px'\n     */\n    width: string;\n\n    /**\n     * Add custom class for gallery container\n     * This can be used to set different style for different galleries\n     */\n    addClass: string;\n\n    /**\n     * Start animation class for the gallery.\n     * @description\n     * <ul>\n     * <li>startClass will be empty zoomFromOrigin is true.</li>\n     * <li>This can be used to change the starting effect when the image is loaded</li>\n     * <li>This is also applied when navigating to new slides</li>\n     * </ul>\n     */\n    startClass: string;\n\n    /**\n     * Enable zoom from origin effect.\n     * @description You need to know the original image size upfront and provide it via data-lg-size attribute as <code> data-lg-size=\"1920-1280</code>\"\n     *\n     * If you don't know, the size of a few images in the list, you can skip the data-lg-size attribute for the particular slides,\n     * lightGallery will show the default animation if data-lg-size is not available\n     *\n     * If you are using responsive images,\n     * you can pass a comma separated list of sizes combined with a max-width (up to what size the particular image should be used)\n     *\n     * example -\n     * <code> data-lg-size=\"240-160-375, 400-267-480, 1600-1067\"\n     * data-responsive=\"img-240.jpg 375, img-400.jpg 480\"\n     * data-src=\"img-1600.jpg\" </code>\n     *\n     * In the above example, upto 375 width img.240.jpg and lg-size 240-160 will be used.\n     * Similarly, upto 480 pixel width size 400-267 and img-400.jpg will be used\n     * And above 480, lg-size 1600-1067 and img-1600.jpg will be used\n     *\n     * <ul>\n     * <li>At the moment, zoomFromOrigin options is supported only for image slides.</li>\n     * <li>Will be false if dynamic option is enabled or galleryID found in the URL.</li>\n     * <li>startClass will be empty if zoomFromOrigin is true to avoid css conflicts.</li>\n     * </ul>\n     */\n    zoomFromOrigin: boolean;\n\n    /**\n     * Zoom from image animation duration\n     */\n    startAnimationDuration: number;\n\n    /**\n     * Backdrop transition duration.\n     * Note - Do not change the value of backdrop via css.\n     */\n    backdropDuration: number;\n\n    /**\n     * Configure where the gallery should be appended.\n     * Useful to create inline galleries and more\n     * It is an empty string in the default settings and later assigned to document.body to avoid accessing document for SSR\n     */\n    container: HTMLElement | '';\n\n    /**\n     * Delay for hiding gallery controls in ms.\n     * Pass <code>0</code> if you don't want to hide the controls\n     */\n    hideBarsDelay: number;\n\n    /**\n     * Delay in hiding controls for the first time when gallery is opened\n     */\n    showBarsAfter: number;\n\n    /**\n     * Delay slide transitions.\n     * @description This is useful if you want to do any action in the current slide before moving to next slide.\n     * <section>\n     * For example, fading out the captions before going to next slide.\n     * <code>.lg-slide-progress</code> class name is added to the current slide immediately after calling the slide method.\n     * But transition begins only after the delay\n     * </section>\n     */\n    slideDelay: number;\n\n    /**\n     * Support legacy browsers\n     * @description Currently this is used only for adding support to srcset attribute via picturefill library\n     * If true lightGallery will show warning message to include picturefill library\n     */\n    supportLegacyBrowser: boolean;\n\n    /**\n     * If true, toolbar, captions and thumbnails will not overlap with media element\n     * This will not effect thumbnails if animateThumb is false\n     * Also, toggle thumbnails button is not displayed if allowMediaOverlap is false\n     * <section>\n     * Note - Changing the position of the media on every slide transition creates a flickering effect.\n     * Therefore, the height of the caption is calculated dynamically, only once based on the first slide caption.\n     * </section>\n     * <section>\n     * if you have dynamic captions for each media,\n     * you can provide an appropriate height for the captions via allowMediaOverlap option\n     * </section>\n     */\n    allowMediaOverlap: boolean;\n\n    /**\n     * Video max size.\n     * @description This can be over-written by passing specific size via data-lg-size attribute\n     * Recommended video resolution and & aspect ratios <a href=\"https://support.google.com/youtube/answer/6375112\">https://support.google.com/youtube/answer/6375112</a>\n     */\n    videoMaxSize: string;\n\n    /**\n     * Automatically load poster image for YouTube videos\n     */\n    loadYouTubePoster: boolean;\n\n    /**\n     * Height of the caption for calculating allowMediaOverlap positions\n     * Note - this is only used to find the position of media item if allowMediaOverlap is true.\n     * Not for setting height of the captions\n     * Set 0 if you want to calculate the height of captions dynamically\n     */\n    defaultCaptionHeight: number;\n\n    /**\n     * aria-labelledby attribute fot gallery\n     */\n    ariaLabelledby: string;\n\n    /**\n     * aria-describedby attribute for gallery\n     */\n    ariaDescribedby: string;\n\n    /**\n     * Hide scrollbar when gallery is opened\n     * @version V2.5.0\n     */\n    hideScrollbar: boolean;\n\n    /**\n     * Reset to previous scrollPosition when lightGallery is closed\n     * @description By default, lightGallery doesn't hide the scrollbar for a smooth opening transition.\n     * If a user changes the scroll position, lightGallery resets it to the previous value\n     * @version V2.5.0\n     */\n    resetScrollPosition: boolean;\n\n    /**\n     * If false user won't be abel to close the gallery at all\n     * This is useful for creating inline galleries.\n     */\n    closable: boolean;\n\n    /**\n     * allows vertical drag/swipe to close gallery\n     * <code>false</code> if option <code>closable</code> is <code>false</code>\n     */\n    swipeToClose: boolean;\n    /**\n     * allows clicks on black area to close gallery.\n     */\n    closeOnTap: boolean;\n\n    /**\n     * If false, close button won't be displayed.\n     * Useful for creating inline galleries.\n     */\n    showCloseIcon: boolean;\n\n    /**\n     * Show maximize icon.\n     * Useful for creating inline galleries.\n     */\n    showMaximizeIcon: boolean;\n\n    /**\n     * If false, will disable the ability to loop back to the beginning of the gallery from the last slide.\n     */\n    loop: boolean;\n\n    /**\n     * Whether the LightGallery could be closed by pressing the \"Esc\" key.\n     */\n    escKey: boolean;\n\n    /**\n     * Enable keyboard navigation\n     */\n    keyPress: boolean;\n\n    /**\n     * Trap focus within the lightGallery\n     * @version V2.5.0\n     */\n    trapFocus: boolean;\n\n    /**\n     * If false, prev/next buttons will not be displayed.\n     */\n    controls: boolean;\n\n    /**\n     * Enable slideEnd animation\n     */\n    slideEndAnimation: boolean;\n\n    /**\n     * If true, prev/next button will be hidden on first/last image.\n     * @description Note - this option will be ignored if <code>loop</code> or <code>slideEndAnimation</code> is set to true\n     */\n    hideControlOnEnd: boolean;\n\n    /**\n     * ability to navigate to next/prev slides on mousewheel\n     */\n    mousewheel: boolean;\n\n    /**\n     * Option to get captions from alt or title tags.\n     */\n    getCaptionFromTitleOrAlt: boolean;\n\n    /**\n     * control where the sub-html should be appended.\n     * If you choose '.lg-outer', you are responsible for placing the div at the right position.\n     * '.lg-outer' is useful if you want show custom HTML outside the normal gallery\n     */\n    appendSubHtmlTo: '.lg-sub-html' | '.lg-item' | '.lg-outer';\n\n    /**\n     * Set to true if the selector in \"data-sub-html\" should use the current item as its origin.\n     */\n    subHtmlSelectorRelative: boolean;\n\n    /**\n     * number of preload slides\n     * @description will exicute only after the current slide is fully loaded.\n     * for example, if you click on 4th image and if preload = 1 then 3rd slide and 5th\n     * slide will be loaded in the background after the 4th slide is fully loaded..\n     * if preload is 2 then 2nd 3rd 5th 6th slides will be preloaded.\n     */\n    preload: number;\n\n    /**\n     * Control how many slide items should be kept in dom at a time\n     * @description To improve performance by reducing number of gallery items in the dom,\n     * lightGallery keeps only the lowest possible number of slides in the dom at a time.\n     * This has a minimum value of 3\n     */\n    numberOfSlideItemsInDom: number;\n\n    /**\n     * Custom selector property instead of direct children.\n     * @description Based on your markup structure, you can specify custom selectors to fetch media data for the gallery\n     * Pass \"this\" to select same element\n     * You can also pass HTMLCollection directly\n     * Example - '.my-selector' | '#my-selector' | this | document.querySelectorAll('.my-selector')\n     */\n    selector: string | HTMLCollection[];\n\n    /**\n     * By default selector element relative to the current gallery.\n     * Instead of that you can tell lightGallery to select element relative to another element.\n     * Example - '.my-selector-container' | '#my-selector-container'\n     * In the code this become selector =  document.querySelector(this.s.selectWithin ).querySelectorAll(this.s.selector);\n     */\n    selectWithin: string;\n\n    /**\n     * Custom html for next control\n     */\n    nextHtml: string;\n\n    /**\n     * Custom html for prev control\n     */\n    prevHtml: string;\n\n    /**\n     * specify which slide should load initially\n     */\n    index: number;\n\n    /**\n     * Set width for iframe.\n     */\n    iframeWidth: string;\n\n    /**\n     * Set height for iframe.\n     */\n    iframeHeight: string;\n\n    /**\n     * Set max width for iframe.\n     */\n    iframeMaxWidth: string;\n\n    /**\n     * Set max height for iframe.\n     */\n    iframeMaxHeight: string;\n\n    /**\n     * Enable download button.\n     * @description By default download url will be taken from data-src/href attribute but it supports only for modern browsers.\n     * If you want you can provide another url for download via data-download-url.\n     * pass false in data-download-url if you want to hide download button for the particular slide.\n     */\n    download: boolean;\n\n    /**\n     * Whether to show total number of images and index number of currently displayed image.\n     */\n    counter: boolean;\n\n    /**\n     * Where the counter should be appended\n     */\n    appendCounterTo: string;\n\n    /**\n     * By setting the swipeThreshold (in px) you can set how far the user must swipe for the next/prev image.\n     */\n    swipeThreshold: number;\n\n    /**\n     * Enables swipe support for touch devices\n     */\n    enableSwipe: boolean;\n\n    /**\n     * Enables desktop mouse drag support\n     */\n    enableDrag: boolean;\n\n    /**\n     * LightGallery can be instantiated and launched programmatically by setting this option to true and populating dynamicEl option (see below) with the definitions of images.\n     */\n    dynamic: boolean;\n\n    /**\n     * An array of objects (src, iframe, subHtml, thumb, poster, responsive, srcset sizes) representing gallery elements.\n     */\n    dynamicEl: GalleryItem[];\n\n    /**\n     * Fetch custom properties from the selector\n     * @description this is useful for plugin development\n     * By default lightGallery fetches and store all the props selectors to\n     * reduce frequent dom interaction for fetching props every time.\n     *\n     * If you need any addition data to be fetched and stored in the galleryItems variable,\n     * you can do this just by passing the prop names via extraProps\n     * @example\n     * HTML:\n     * <div id=\"lightGallery\">\n     *     <a href=\"a.jpg\" data-custom-prop=\"abc\"><img src=\"thumb.jpg\" /></a>\n     *     <a href=\"a.jpg\" data-custom-prop=\"xyz\"><img src=\"thumb.jpg\" /></a>\n     * </div>\n     * JS:\n     * lightGallery(document.getElementById('lightGallery'), {\n     *     extraProps: ['customProp']\n     * })\n     * // Note - If you are using dynamic mode, you can pass any custom prop in the galleryItem\n     * lightGallery(document.getElementById('lightGallery'), {\n     *     dynamic: true,\n     *     dynamicEl: [{\n     *         src: 'img/img1.jpg',\n     *         customProp:'abc',\n     *     }]\n     * })\n     *\n     */\n    extraProps: string[];\n\n    /**\n     * Option to fetch different thumbnail image other than first image\n     * @description If you want to use external image for thumbnail,\n     * add the path of that image inside \"data-\" attribute\n     * and set value of this option to the name of your custom attribute.\n     *\n     * @example\n     * <div id=\"lightGallery\">\n     *     <a href=\"a.jpg\" data-external-thumb-image=\"images/externalThumb.jpg\" ><img src=\"thumb.jpg\" /></a>\n     * </div>\n     *\n     * lightGallery(document.getElementById('lightGallery'), {\n     *     exThumbImage: 'data-external-thumb-image'\n     * })\n     */\n    exThumbImage: string;\n\n    /**\n     * Function to detect mobile devices\n     */\n    isMobile?: () => boolean;\n\n    /**\n     * Separate settings for mobile devices\n     * @description Note - this is applied only at the time of loading\n     * by default controls and close buttons are disabled on mobile devices.\n     * use this options if you want to enable them or change any other settings for mobile devices\n     * Note - mobileSettings does not merge default values, You need to provide all mobileSettings including default values\n     */\n    mobileSettings: Partial<MobileSettings>;\n\n    /**\n     * Aria label strings for lightGallery core modules.\n     * @description This can be useful if you want to localize the lightGallery strings to other languages.\n     * Use your own service to translate the strings and pass it via settings.strings\n     * You can find dedicated strings option for all lightGallery modules in their respective documentation.\n     */\n    strings: LightGalleryCoreStrings;\n\n    plugins: (new (instance: LightGallery, $LG: LgQuery) => any)[];\n}\n\nexport const lightGalleryCoreSettings: LightGalleryCoreSettings = {\n    mode: 'lg-slide',\n    easing: 'ease',\n    speed: 400,\n    licenseKey: '0000-0000-000-0000',\n    height: '100%',\n    width: '100%',\n    addClass: '',\n    startClass: 'lg-start-zoom',\n    backdropDuration: 300,\n    container: '',\n    startAnimationDuration: 400,\n    zoomFromOrigin: true,\n    hideBarsDelay: 0,\n    showBarsAfter: 10000,\n    slideDelay: 0,\n    supportLegacyBrowser: true,\n    allowMediaOverlap: false,\n    videoMaxSize: '1280-720',\n    loadYouTubePoster: true,\n    defaultCaptionHeight: 0,\n    ariaLabelledby: '',\n    ariaDescribedby: '',\n    resetScrollPosition: true,\n    hideScrollbar: false,\n    closable: true,\n    swipeToClose: true,\n    closeOnTap: true,\n    showCloseIcon: true,\n    showMaximizeIcon: false,\n    loop: true,\n    escKey: true,\n    keyPress: true,\n    trapFocus: true,\n    controls: true,\n    slideEndAnimation: true,\n    hideControlOnEnd: false,\n    mousewheel: false,\n    getCaptionFromTitleOrAlt: true,\n    appendSubHtmlTo: '.lg-sub-html',\n    subHtmlSelectorRelative: false,\n    preload: 2,\n    numberOfSlideItemsInDom: 10,\n    selector: '',\n    selectWithin: '',\n    nextHtml: '',\n    prevHtml: '',\n    index: 0,\n    iframeWidth: '100%',\n    iframeHeight: '100%',\n    iframeMaxWidth: '100%',\n    iframeMaxHeight: '100%',\n    download: true,\n    counter: true,\n    appendCounterTo: '.lg-toolbar',\n    swipeThreshold: 50,\n    enableSwipe: true,\n    enableDrag: true,\n    dynamic: false,\n    dynamicEl: [],\n    extraProps: [],\n    exThumbImage: '',\n    isMobile: undefined,\n    mobileSettings: {\n        controls: false,\n        showCloseIcon: false,\n        download: false,\n    } as MobileSettings,\n    plugins: [],\n    strings: {\n        closeGallery: 'Close gallery',\n        toggleMaximize: 'Toggle maximize',\n        previousSlide: 'Previous slide',\n        nextSlide: 'Next slide',\n        download: 'Download',\n        playVideo: 'Play video',\n    } as LightGalleryCoreStrings,\n};\n","interface Offset {\n    left: number;\n    top: number;\n}\n\nfunction initLgPolyfills() {\n    (function () {\n        if (typeof window.CustomEvent === 'function') return false;\n\n        function CustomEvent(event: string, params: any) {\n            params = params || {\n                bubbles: false,\n                cancelable: false,\n                detail: null,\n            };\n            const evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(\n                event,\n                params.bubbles,\n                params.cancelable,\n                params.detail,\n            );\n            return evt;\n        }\n\n        window.CustomEvent = CustomEvent as any;\n    })();\n    (function () {\n        if (!Element.prototype.matches) {\n            Element.prototype.matches =\n                (Element.prototype as any).msMatchesSelector ||\n                Element.prototype.webkitMatchesSelector;\n        }\n    })();\n}\n\nexport type LgQuery = (selector: any) => lgQuery;\nexport class lgQuery {\n    static eventListeners: { [key: string]: any[] } = {};\n    static generateUUID(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n            /[xy]/g,\n            function (c) {\n                const r = (Math.random() * 16) | 0,\n                    v = c == 'x' ? r : (r & 0x3) | 0x8;\n                return v.toString(16);\n            },\n        );\n    }\n\n    private selector: any;\n    private firstElement: any;\n    private cssVenderPrefixes: string[] = [\n        'TransitionDuration',\n        'TransitionTimingFunction',\n        'Transform',\n        'Transition',\n    ];\n    constructor(selector: string | Element) {\n        this.selector = this._getSelector(selector);\n        this.firstElement = this._getFirstEl();\n        return this;\n    }\n\n    private _getSelector(\n        selector: string | Element,\n        context: Element | Document = document,\n    ): Element | null | NodeListOf<Element> {\n        if (typeof selector !== 'string') {\n            return selector;\n        }\n        context = context || document;\n        const fl = selector.substring(0, 1);\n        if (fl === '#') {\n            return context.querySelector(selector);\n        } else {\n            return context.querySelectorAll(selector);\n        }\n    }\n\n    private _each(\n        func: (\n            elements: Element | NodeListOf<Element> | null,\n            index: number,\n        ) => void,\n    ): this {\n        if (!this.selector) {\n            return this;\n        }\n        if (this.selector.length !== undefined) {\n            [].forEach.call(this.selector, func);\n        } else {\n            func(this.selector, 0);\n        }\n        return this;\n    }\n\n    private _setCssVendorPrefix(\n        el: any,\n        cssProperty: string,\n        value?: string | number,\n    ): void {\n        // prettier-ignore\n        const property = cssProperty.replace(/-([a-z])/gi, function (\n            s,\n            group1,\n        ) {\n            return group1.toUpperCase();\n        });\n        if (this.cssVenderPrefixes.indexOf(property) !== -1) {\n            el.style[\n                property.charAt(0).toLowerCase() + property.slice(1)\n            ] = value;\n            el.style['webkit' + property] = value;\n            el.style['moz' + property] = value;\n            el.style['ms' + property] = value;\n            el.style['o' + property] = value;\n        } else {\n            el.style[property] = value;\n        }\n    }\n\n    private _getFirstEl() {\n        if (this.selector && this.selector.length !== undefined) {\n            return this.selector[0];\n        } else {\n            return this.selector;\n        }\n    }\n\n    private isEventMatched(event: string, eventName: string): boolean {\n        const eventNamespace = eventName.split('.');\n        return event\n            .split('.')\n            .filter((e) => e)\n            .every((e) => {\n                return eventNamespace.indexOf(e) !== -1;\n            });\n    }\n\n    attr(attr: string): string;\n    attr(attr: string, value: string | number | boolean): this;\n    attr(attr: string, value?: string | number | boolean): string | this {\n        if (value === undefined) {\n            if (!this.firstElement) {\n                return '';\n            }\n            return this.firstElement.getAttribute(attr);\n        }\n        this._each((el: any) => {\n            el.setAttribute(attr, value);\n        });\n        return this;\n    }\n\n    find(selector: any): lgQuery {\n        return $LG(this._getSelector(selector, this.selector));\n    }\n\n    first(): lgQuery {\n        if (this.selector && this.selector.length !== undefined) {\n            return $LG(this.selector[0]);\n        } else {\n            return $LG(this.selector);\n        }\n    }\n\n    eq(index: number): lgQuery {\n        return $LG(this.selector[index]);\n    }\n\n    parent(): lgQuery {\n        return $LG(this.selector.parentElement);\n    }\n\n    get(): HTMLElement {\n        return this._getFirstEl();\n    }\n\n    removeAttr(attributes: string): this {\n        const attrs = attributes.split(' ');\n        this._each((el: any) => {\n            attrs.forEach((attr: string) => el.removeAttribute(attr));\n        });\n        return this;\n    }\n\n    wrap(className: string): this {\n        if (!this.firstElement) {\n            return this;\n        }\n        const wrapper = document.createElement('div');\n        wrapper.className = className;\n        this.firstElement.parentNode.insertBefore(wrapper, this.firstElement);\n        this.firstElement.parentNode.removeChild(this.firstElement);\n        wrapper.appendChild(this.firstElement);\n        return this;\n    }\n\n    addClass(classNames = ''): this {\n        this._each((el: any) => {\n            // IE doesn't support multiple arguments\n            classNames.split(' ').forEach((className) => {\n                if (className) {\n                    el.classList.add(className);\n                }\n            });\n        });\n        return this;\n    }\n\n    removeClass(classNames: string): this {\n        this._each((el: any) => {\n            // IE doesn't support multiple arguments\n            classNames.split(' ').forEach((className) => {\n                if (className) {\n                    el.classList.remove(className);\n                }\n            });\n        });\n        return this;\n    }\n\n    hasClass(className: string): boolean {\n        if (!this.firstElement) {\n            return false;\n        }\n        return this.firstElement.classList.contains(className);\n    }\n    hasAttribute(attribute: string): boolean {\n        if (!this.firstElement) {\n            return false;\n        }\n        return this.firstElement.hasAttribute(attribute);\n    }\n    toggleClass(className: string): this {\n        if (!this.firstElement) {\n            return this;\n        }\n        if (this.hasClass(className)) {\n            this.removeClass(className);\n        } else {\n            this.addClass(className);\n        }\n        return this;\n    }\n\n    css(property: string, value?: string | number): this {\n        this._each((el: any) => {\n            this._setCssVendorPrefix(el, property, value);\n        });\n        return this;\n    }\n    // Need to pass separate namespaces for separate elements\n    on(events: string, listener: (e: any) => void): this {\n        if (!this.selector) {\n            return this;\n        }\n        events.split(' ').forEach((event: string) => {\n            if (!Array.isArray(lgQuery.eventListeners[event])) {\n                lgQuery.eventListeners[event] = [];\n            }\n            lgQuery.eventListeners[event].push(listener);\n            this.selector.addEventListener(event.split('.')[0], listener);\n        });\n\n        return this;\n    }\n    // @todo - test this\n    once(event: string, listener: (e: any) => void): this {\n        this.on(event, () => {\n            this.off(event);\n            listener(event);\n        });\n        return this;\n    }\n    off(event: string): this {\n        if (!this.selector) {\n            return this;\n        }\n        Object.keys(lgQuery.eventListeners).forEach((eventName) => {\n            if (this.isEventMatched(event, eventName)) {\n                lgQuery.eventListeners[eventName].forEach((listener) => {\n                    this.selector.removeEventListener(\n                        eventName.split('.')[0],\n                        listener,\n                    );\n                });\n                lgQuery.eventListeners[eventName] = [];\n            }\n        });\n\n        return this;\n    }\n    trigger<Detail>(event: string, detail?: Detail): this {\n        if (!this.firstElement) {\n            return this;\n        }\n\n        const customEvent = new CustomEvent(event.split('.')[0], {\n            detail: detail || null,\n        });\n        this.firstElement.dispatchEvent(customEvent);\n        return this;\n    }\n\n    // Does not support IE\n    load(url: string): this {\n        fetch(url)\n            .then((res) => res.text())\n            .then((html) => {\n                this.selector.innerHTML = html;\n            });\n        return this;\n    }\n\n    html(): string;\n    html(html: string): this;\n    html(html?: string): string | this {\n        if (html === undefined) {\n            if (!this.firstElement) {\n                return '';\n            }\n            return this.firstElement.innerHTML;\n        }\n        this._each((el: any) => {\n            el.innerHTML = html;\n        });\n        return this;\n    }\n    append(html: string | HTMLElement): this {\n        this._each((el: any) => {\n            if (typeof html === 'string') {\n                el.insertAdjacentHTML('beforeend', html);\n            } else {\n                el.appendChild(html);\n            }\n        });\n        return this;\n    }\n    prepend(html: string): this {\n        this._each((el: any) => {\n            el.insertAdjacentHTML('afterbegin', html);\n        });\n        return this;\n    }\n    remove(): this {\n        this._each((el: any) => {\n            el.parentNode.removeChild(el);\n        });\n        return this;\n    }\n    empty(): this {\n        this._each((el: any) => {\n            el.innerHTML = '';\n        });\n        return this;\n    }\n    // Supports only window\n    scrollTop(): number;\n    scrollTop(scrollTop: number): this;\n    scrollTop(scrollTop?: number): number | this {\n        if (scrollTop !== undefined) {\n            document.body.scrollTop = scrollTop;\n            document.documentElement.scrollTop = scrollTop;\n            return this;\n        } else {\n            return (\n                window.pageYOffset ||\n                document.documentElement.scrollTop ||\n                document.body.scrollTop ||\n                0\n            );\n        }\n    }\n    // Supports only window\n    scrollLeft(): number;\n    scrollLeft(scrollLeft?: number): this;\n    scrollLeft(scrollLeft?: number): number | this {\n        if (scrollLeft !== undefined) {\n            document.body.scrollLeft = scrollLeft;\n            document.documentElement.scrollLeft = scrollLeft;\n            return this;\n        } else {\n            return (\n                window.pageXOffset ||\n                document.documentElement.scrollLeft ||\n                document.body.scrollLeft ||\n                0\n            );\n        }\n    }\n    offset(): Offset {\n        if (!this.firstElement) {\n            return {\n                left: 0,\n                top: 0,\n            };\n        }\n        const rect = this.firstElement.getBoundingClientRect();\n        const bodyMarginLeft = $LG('body').style().marginLeft;\n\n        // Minus body margin - https://stackoverflow.com/questions/30711548/is-getboundingclientrect-left-returning-a-wrong-value\n        return {\n            left: rect.left - parseFloat(bodyMarginLeft) + this.scrollLeft(),\n            top: rect.top + this.scrollTop(),\n        };\n    }\n    style(): CSSStyleDeclaration {\n        if (!this.firstElement) {\n            return {} as CSSStyleDeclaration;\n        }\n        return (\n            this.firstElement.currentStyle ||\n            window.getComputedStyle(this.firstElement)\n        );\n    }\n    // Width without padding and border even if box-sizing is used.\n    width(): number {\n        const style = this.style();\n        return (\n            this.firstElement.clientWidth -\n            parseFloat(style.paddingLeft) -\n            parseFloat(style.paddingRight)\n        );\n    }\n    // Height without padding and border even if box-sizing is used.\n    height(): number {\n        const style = this.style();\n        return (\n            this.firstElement.clientHeight -\n            parseFloat(style.paddingTop) -\n            parseFloat(style.paddingBottom)\n        );\n    }\n}\n\nexport function $LG(selector: any): lgQuery {\n    initLgPolyfills();\n    return new lgQuery(selector);\n}\n","import { $LG, lgQuery } from './lgQuery';\nimport { VideoSource } from './plugins/video/types';\nimport { VideoInfo } from './types';\n\nexport interface ImageSize {\n    width: number;\n    height: number;\n}\n\nexport interface ImageSources {\n    media?: string;\n    srcset: string;\n    sizes?: string;\n    type?: string;\n}\n\nexport interface GalleryItem {\n    /**\n     * url of the media\n     * @data-attr data-src\n     */\n    src?: string;\n\n    /**\n     * Source attributes for the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source#attributes\">picture</a> element\n     * @data-attr data-sources\n     */\n    sources?: ImageSources[];\n\n    /**\n     * Thumbnail url\n     * @description By default lightGallery uses the image inside gallery selector as thumbnail.\n     * But, If you want to use external image for thumbnail,\n     * pass the thumbnail url via any data attribute and\n     * pass the attribute name via exThumbImage option\n     * @example\n     * <div id=\"lightGallery\">\n     *     <a href=\"a.jpg\" data-external-thumb-image=\"images/externalThumb.jpg\" ><img src=\"thumb.jpg\" /></a>\n     * </div>\n     *\n     * lightGallery(document.getElementById('lightGallery'), {\n     *     exThumbImage: 'data-external-thumb-image'\n     * })\n     * @data-attr data-*\n     */\n    thumb?: string;\n\n    /**\n     * alt attribute for the image\n     * @data-attr alt\n     */\n    alt?: string;\n\n    /**\n     * Title attribute for the video\n     * @data-attr title\n     */\n    title?: string;\n\n    /**\n     * Title for iframe\n     * @data-attr data-iframe-title\n     */\n    iframeTitle?: string;\n\n    /**\n     * Caption for the slide\n     * @description You can either pass the HTML markup or the ID or class name of the element which contains the captions\n     * @data-attr data-sub-html\n     */\n    subHtml?: string;\n\n    /**\n     * url of the file which contain the sub html.\n     * @description Note - Does not support Internet Explorer browser\n     * @data-attr data-sub-html-url\n     */\n    subHtmlUrl?: string;\n\n    /**\n     * Video source\n     * @data-attr data-video\n     */\n    video?: VideoSource;\n\n    /**\n     * Poster url\n     * @data-attr data-poster\n     */\n    poster?: string;\n\n    /**\n     * Custom slide name to use in the url when hash plugin is enabled\n     * @data-attr data-slide-name\n     */\n    slideName?: string;\n\n    /**\n     * List of images and viewport's max width separated by comma.\n     * @description Ex?: img/1-375.jpg 375, img/1-480.jpg 480, img/1-757.jpg 757.\n     * @data-attr data-responsive\n     */\n    responsive?: string;\n\n    /**\n     * srcset attribute values for the main image\n     * @data-attr data-srcset\n     */\n    srcset?: string;\n\n    /**\n     * srcset sizes attribute for the main image\n     * @data-attr data-sizes\n     */\n    sizes?: string;\n\n    /**\n     * Set true is you want to open your url in an iframe\n     * @data-attr data-iframe\n     */\n    iframe?: boolean;\n\n    /**\n     * Download url for your image/video.\n     * @description Pass false if you want to disable the download button.\n     * @data-attr data-download-url\n     */\n    downloadUrl?: string | boolean;\n\n    /**\n     * Name of the file after it is downloaded.\n     * @description The HTML value of the download attribute.\n     * There are no restrictions on allowed values, and the browser will automatically\n     * detect the correct file extension and add it to the file (.img, .pdf, .txt, .html, etc.).\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download\">More info</a>\n     * @data-attr data-download\n     */\n    download?: string | boolean;\n\n    /**\n     * Actual size of the image in px.\n     * @description This is used in zoom plugin to see the actual size of the image when double taped on the image.\n     * @data-attr data-width\n     */\n    width?: string;\n\n    /**\n     * Facebook share URL.\n     * @description Specify only if you want to provide separate share URL for the specific slide. By default, current browser URL is taken.\n     * @data-attr data-facebook-share-url\n     */\n    facebookShareUrl?: string;\n\n    /**\n     * Tweet text\n     * @data-attr data-tweet-text\n     */\n    tweetText?: string;\n\n    /**\n     * Twitter share URL.\n     * @description Specify only if you want to provide separate share URL for the specific slide. By default, current browser URL will be taken.\n     * @data-attr data-twitter-share-url\n     */\n    twitterShareUrl?: string;\n\n    /**\n     * Pinterest share URL.\n     * @description Specify only if you want to provide separate share URL for the specific slide. By default, current browser URL will be taken.\n     * Note?: Pinterest requires absolute URL\n     * @data-attr data-pinterest-share-url\n     */\n    pinterestShareUrl?: string;\n\n    /**\n     * Description for Pinterest post.\n     * @data-attr data-pinterest-text\n     */\n    pinterestText?: string;\n\n    /**\n     * Facebook comments body html\n     * @description Please refer <a href=\"https://developers.facebook.com/docs/plugins/comments/#comments-plugin\">facebook official documentation</a> for generating the HTML markup\n     * @example\n     * <div\n     *      class=\"fb-comments\"\n     *      data-href=\"https://www.lightgalleryjs.com/demos/comment-box/#facebook-comments-demo\"\n     *      data-width=\"400\"\n     *      data-numposts=\"5\">\n     * </div>\n     * @data-attr data-fb-html\n     */\n    fbHtml?: string;\n\n    /**\n     * Disqus page identifier\n     * @description Please refer official <a href=\"https://help.disqus.com/en/articles/1717084-javascript-configuration-variables\">disqus documentation</a> for more info\n     * @data-attr data-disqus-identifier\n     */\n    disqusIdentifier?: string;\n\n    /**\n     * Disqus page url\n     * @description Please refer official <a href=\"https://help.disqus.com/en/articles/1717084-javascript-configuration-variables\">disqus documentation</a> for more info\n     * @data-attr data-disqus-url\n     */\n    disqusUrl?: string;\n\n    __slideVideoInfo?: VideoInfo;\n    [key: string]: any;\n}\n\nconst defaultDynamicOptions = [\n    'src',\n    'sources',\n    'subHtml',\n    'subHtmlUrl',\n    'html',\n    'video',\n    'poster',\n    'slideName',\n    'responsive',\n    'srcset',\n    'sizes',\n    'iframe',\n    'downloadUrl',\n    'download',\n    'width',\n    'facebookShareUrl',\n    'tweetText',\n    'iframeTitle',\n    'twitterShareUrl',\n    'pinterestShareUrl',\n    'pinterestText',\n    'fbHtml',\n    'disqusIdentifier',\n    'disqusUrl',\n];\n\n// Convert html data-attribute to camalcase\nexport function convertToData(attr: string): string {\n    // FInd a way for lgsize\n    if (attr === 'href') {\n        return 'src';\n    }\n    attr = attr.replace('data-', '');\n    attr = attr.charAt(0).toLowerCase() + attr.slice(1);\n    attr = attr.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n\n    return attr;\n}\n\nconst utils = {\n    /**\n     * get possible width and height from the lgSize attribute. Used for ZoomFromOrigin option\n     */\n    getSize(\n        el: HTMLElement,\n        container: lgQuery,\n        spacing = 0,\n        defaultLgSize?: string,\n    ): ImageSize | undefined {\n        const LGel = $LG(el);\n        let lgSize = LGel.attr('data-lg-size') || defaultLgSize;\n\n        if (!lgSize) {\n            return;\n        }\n\n        const isResponsiveSizes = lgSize.split(',');\n        // if at-least two viewport sizes are available\n        if (isResponsiveSizes[1]) {\n            const wWidth = window.innerWidth;\n            for (let i = 0; i < isResponsiveSizes.length; i++) {\n                const size = isResponsiveSizes[i];\n                const responsiveWidth = parseInt(size.split('-')[2], 10);\n                if (responsiveWidth > wWidth) {\n                    lgSize = size;\n                    break;\n                }\n\n                // take last item as last option\n                if (i === isResponsiveSizes.length - 1) {\n                    lgSize = size;\n                }\n            }\n        }\n\n        const size = lgSize.split('-');\n\n        const width = parseInt(size[0], 10);\n        const height = parseInt(size[1], 10);\n\n        const cWidth = container.width();\n        const cHeight = container.height() - spacing;\n\n        const maxWidth = Math.min(cWidth, width);\n        const maxHeight = Math.min(cHeight, height);\n\n        const ratio = Math.min(maxWidth / width, maxHeight / height);\n\n        return { width: width * ratio, height: height * ratio };\n    },\n\n    /**\n     * @desc Get transform value based on the imageSize. Used for ZoomFromOrigin option\n     * @param {jQuery Element}\n     * @returns {String} Transform CSS string\n     */\n    getTransform(\n        el: HTMLElement,\n        container: lgQuery,\n        top: number,\n        bottom: number,\n        imageSize?: ImageSize,\n    ): string | undefined {\n        if (!imageSize) {\n            return;\n        }\n        const LGel = $LG(el).find('img').first();\n        if (!LGel.get()) {\n            return;\n        }\n\n        const containerRect = container.get().getBoundingClientRect();\n\n        const wWidth = containerRect.width;\n\n        // using innerWidth to include mobile safari bottom bar\n        const wHeight = container.height() - (top + bottom);\n\n        const elWidth = LGel.width();\n        const elHeight = LGel.height();\n\n        const elStyle = LGel.style();\n        let x =\n            (wWidth - elWidth) / 2 -\n            LGel.offset().left +\n            (parseFloat(elStyle.paddingLeft) || 0) +\n            (parseFloat(elStyle.borderLeft) || 0) +\n            $LG(window).scrollLeft() +\n            containerRect.left;\n        let y =\n            (wHeight - elHeight) / 2 -\n            LGel.offset().top +\n            (parseFloat(elStyle.paddingTop) || 0) +\n            (parseFloat(elStyle.borderTop) || 0) +\n            $LG(window).scrollTop() +\n            top;\n\n        const scX = elWidth / imageSize.width;\n        const scY = elHeight / imageSize.height;\n\n        const transform =\n            'translate3d(' +\n            (x *= -1) +\n            'px, ' +\n            (y *= -1) +\n            'px, 0) scale3d(' +\n            scX +\n            ', ' +\n            scY +\n            ', 1)';\n        return transform;\n    },\n\n    getIframeMarkup(\n        iframeWidth: string,\n        iframeHeight: string,\n        iframeMaxWidth: string,\n        iframeMaxHeight: string,\n        src?: string,\n        iframeTitle?: string,\n    ): string {\n        const title = iframeTitle ? 'title=\"' + iframeTitle + '\"' : '';\n        return `<div class=\"lg-video-cont lg-has-iframe\" style=\"width:${iframeWidth}; max-width:${iframeMaxWidth}; height: ${iframeHeight}; max-height:${iframeMaxHeight}\">\n                    <iframe class=\"lg-object\" frameborder=\"0\" ${title} src=\"${src}\"  allowfullscreen=\"true\"></iframe>\n                </div>`;\n    },\n\n    getImgMarkup(\n        index: number,\n        src: string,\n        altAttr: string,\n        srcset?: string,\n        sizes?: string,\n        sources?: ImageSources[],\n    ): string {\n        const srcsetAttr = srcset ? `srcset=\"${srcset}\"` : '';\n        const sizesAttr = sizes ? `sizes=\"${sizes}\"` : '';\n        const imgMarkup = `<img ${altAttr} ${srcsetAttr}  ${sizesAttr} class=\"lg-object lg-image\" data-index=\"${index}\" src=\"${src}\" />`;\n        let sourceTag = '';\n        if (sources) {\n            const sourceObj =\n                typeof sources === 'string' ? JSON.parse(sources) : sources;\n\n            sourceTag = sourceObj.map((source: any) => {\n                let attrs = '';\n                Object.keys(source).forEach((key) => {\n                    // Do not remove the first space as it is required to separate the attributes\n                    attrs += ` ${key}=\"${source[key]}\"`;\n                });\n                return `<source ${attrs}></source>`;\n            });\n        }\n        return `${sourceTag}${imgMarkup}`;\n    },\n\n    // Get src from responsive src\n    getResponsiveSrc(srcItms: string[]): string {\n        const rsWidth = [];\n        const rsSrc = [];\n        let src = '';\n        for (let i = 0; i < srcItms.length; i++) {\n            const _src = srcItms[i].split(' ');\n\n            // Manage empty space\n            if (_src[0] === '') {\n                _src.splice(0, 1);\n            }\n\n            rsSrc.push(_src[0]);\n            rsWidth.push(_src[1]);\n        }\n\n        const wWidth = window.innerWidth;\n        for (let j = 0; j < rsWidth.length; j++) {\n            if (parseInt(rsWidth[j], 10) > wWidth) {\n                src = rsSrc[j];\n                break;\n            }\n        }\n        return src;\n    },\n\n    isImageLoaded(img: HTMLImageElement): boolean {\n        if (!img) return false;\n        // During the onload event, IE correctly identifies any images that\n        // weren’t downloaded as not complete. Others should too. Gecko-based\n        // browsers act like NS4 in that they report this incorrectly.\n        if (!img.complete) {\n            return false;\n        }\n\n        // However, they do have two very useful properties: naturalWidth and\n        // naturalHeight. These give the true size of the image. If it failed\n        // to load, either of these should be zero.\n        if (img.naturalWidth === 0) {\n            return false;\n        }\n\n        // No other way of checking: assume it’s ok.\n        return true;\n    },\n\n    getVideoPosterMarkup(\n        _poster: string,\n        dummyImg: string,\n        videoContStyle: string,\n        playVideoString: string,\n        _isVideo?: VideoInfo,\n    ): string {\n        let videoClass = '';\n        if (_isVideo && _isVideo.youtube) {\n            videoClass = 'lg-has-youtube';\n        } else if (_isVideo && _isVideo.vimeo) {\n            videoClass = 'lg-has-vimeo';\n        } else {\n            videoClass = 'lg-has-html5';\n        }\n\n        return `<div class=\"lg-video-cont ${videoClass}\" style=\"${videoContStyle}\">\n                <div class=\"lg-video-play-button\">\n                <svg\n                    viewBox=\"0 0 20 20\"\n                    preserveAspectRatio=\"xMidYMid\"\n                    focusable=\"false\"\n                    aria-labelledby=\"${playVideoString}\"\n                    role=\"img\"\n                    class=\"lg-video-play-icon\"\n                >\n                    <title>${playVideoString}</title>\n                    <polygon class=\"lg-video-play-icon-inner\" points=\"1,0 20,10 1,20\"></polygon>\n                </svg>\n                <svg class=\"lg-video-play-icon-bg\" viewBox=\"0 0 50 50\" focusable=\"false\">\n                    <circle cx=\"50%\" cy=\"50%\" r=\"20\"></circle></svg>\n                <svg class=\"lg-video-play-icon-circle\" viewBox=\"0 0 50 50\" focusable=\"false\">\n                    <circle cx=\"50%\" cy=\"50%\" r=\"20\"></circle>\n                </svg>\n            </div>\n            ${dummyImg || ''}\n            <img class=\"lg-object lg-video-poster\" src=\"${_poster}\" />\n        </div>`;\n    },\n\n    getFocusableElements(container: HTMLElement): NodeListOf<Element> {\n        const elements = container.querySelectorAll(\n            'a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])',\n        );\n        const visibleElements = [].filter.call(elements, (element) => {\n            const style = window.getComputedStyle(element);\n            return style.display !== 'none' && style.visibility !== 'hidden';\n        });\n        return (visibleElements as unknown) as NodeListOf<Element>;\n    },\n\n    /**\n     * @desc Create dynamic elements array from gallery items when dynamic option is false\n     * It helps to avoid frequent DOM interaction\n     * and avoid multiple checks for dynamic elments\n     *\n     * @returns {Array} dynamicEl\n     */\n    getDynamicOptions(\n        items: any,\n        extraProps: string[],\n        getCaptionFromTitleOrAlt: boolean,\n        exThumbImage: string,\n    ): GalleryItem[] {\n        const dynamicElements: GalleryItem[] = [];\n        const availableDynamicOptions = [\n            ...defaultDynamicOptions,\n            ...extraProps,\n        ];\n        [].forEach.call(items, (item: HTMLElement) => {\n            const dynamicEl: GalleryItem = {} as GalleryItem;\n            for (let i = 0; i < item.attributes.length; i++) {\n                const attr = item.attributes[i];\n                if (attr.specified) {\n                    const dynamicAttr = convertToData(attr.name);\n                    let label = '';\n                    if (availableDynamicOptions.indexOf(dynamicAttr) > -1) {\n                        label = dynamicAttr;\n                    }\n                    if (label) {\n                        (dynamicEl as any)[label] = attr.value;\n                    }\n                }\n            }\n            const currentItem = $LG(item);\n            const alt = currentItem.find('img').first().attr('alt');\n            const title = currentItem.attr('title');\n\n            const thumb = exThumbImage\n                ? currentItem.attr(exThumbImage)\n                : currentItem.find('img').first().attr('src');\n            dynamicEl.thumb = thumb;\n\n            if (getCaptionFromTitleOrAlt && !dynamicEl.subHtml) {\n                dynamicEl.subHtml = title || alt || '';\n            }\n            dynamicEl.alt = alt || title || '';\n            dynamicElements.push(dynamicEl);\n        });\n        return dynamicElements;\n    },\n    isMobile(): boolean {\n        return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    },\n    /**\n     * @desc Check the given src is video\n     * @param {String} src\n     * @return {Object} video type\n     * Ex:{ youtube  :  [\"//www.youtube.com/watch?v=c0asJgSyxcY\", \"c0asJgSyxcY\"] }\n     *\n     * @todo - this information can be moved to dynamicEl to avoid frequent calls\n     */\n\n    isVideo(\n        src: string,\n        isHTML5VIdeo: boolean,\n        index: number,\n    ): VideoInfo | undefined {\n        if (!src) {\n            if (isHTML5VIdeo) {\n                return {\n                    html5: true,\n                };\n            } else {\n                console.error(\n                    'lightGallery :- data-src is not provided on slide item ' +\n                        (index + 1) +\n                        '. Please make sure the selector property is properly configured. More info - https://www.lightgalleryjs.com/demos/html-markup/',\n                );\n                return;\n            }\n        }\n\n        const youtube = src.match(\n            /\\/\\/(?:www\\.)?youtu(?:\\.be|be\\.com|be-nocookie\\.com)\\/(?:watch\\?v=|embed\\/)?([a-z0-9\\-\\_\\%]+)([\\&|?][\\S]*)*/i,\n        );\n        const vimeo = src.match(\n            /\\/\\/(?:www\\.)?(?:player\\.)?vimeo.com\\/(?:video\\/)?([0-9a-z\\-_]+)(.*)?/i,\n        );\n        const wistia = src.match(\n            /https?:\\/\\/(.+)?(wistia\\.com|wi\\.st)\\/(medias|embed)\\/([0-9a-z\\-_]+)(.*)/,\n        );\n\n        if (youtube) {\n            return {\n                youtube,\n            };\n        } else if (vimeo) {\n            return {\n                vimeo,\n            };\n        } else if (wistia) {\n            return {\n                wistia,\n            };\n        }\n    },\n};\n\nexport default utils;\n","import {\n    AfterAppendSlideEventDetail,\n    AfterAppendSubHtmlDetail,\n    BeforeSlideDetail,\n    lGEvents,\n    SlideItemLoadDetail,\n} from './lg-events';\nimport {\n    LightGalleryAllSettings,\n    lightGalleryCoreSettings,\n    LightGallerySettings,\n} from './lg-settings';\nimport utils, { GalleryItem, ImageSize } from './lg-utils';\nimport { $LG, lgQuery } from './lgQuery';\nimport {\n    Coords,\n    MediaContainerPosition,\n    SlideDirection,\n    VideoInfo,\n} from './types';\n\ndeclare let picturefill: any;\n\n// @ref - https://stackoverflow.com/questions/3971841/how-to-resize-images-proportionally-keeping-the-aspect-ratio\n// @ref - https://2ality.com/2017/04/setting-up-multi-platform-packages.html\n\n// Unique id for each gallery\nlet lgId = 0;\n\nexport class LightGallery {\n    public settings!: LightGalleryAllSettings;\n    public galleryItems!: GalleryItem[];\n\n    // Current gallery item\n    public lgId!: number;\n\n    public el!: HTMLElement;\n    public LGel!: lgQuery;\n    public lgOpened = false;\n\n    public index = 0;\n\n    // lightGallery modules\n    public plugins: any[] = [];\n\n    // false when lightGallery load first slide content;\n    public lGalleryOn = false;\n\n    // True when a slide animation is in progress\n    public lgBusy = false;\n\n    // Type of touch action - {swipe, zoomSwipe, pinch}\n    public touchAction?: 'swipe' | 'zoomSwipe' | 'pinch';\n\n    // Direction of swipe/drag - {horizontal, vertical}\n    public swipeDirection?: 'horizontal' | 'vertical';\n\n    // Timeout function for hiding controls;\n    public hideBarTimeout: any;\n\n    public currentItemsInDom: string[] = [];\n\n    public outer!: lgQuery;\n\n    public items: any;\n\n    public $backdrop!: lgQuery;\n    public $lgComponents!: lgQuery;\n\n    public $container!: lgQuery;\n\n    public $inner!: lgQuery;\n    public $content!: lgQuery;\n    public $toolbar!: lgQuery;\n\n    // Scroll top value before lightGallery is opened\n    public prevScrollTop = 0;\n\n    public bodyPaddingRight = 0;\n\n    private zoomFromOrigin!: boolean;\n\n    private currentImageSize?: ImageSize;\n\n    private isDummyImageRemoved = false;\n\n    private dragOrSwipeEnabled = false;\n\n    public mediaContainerPosition = {\n        top: 0,\n        bottom: 0,\n    };\n\n    constructor(element: HTMLElement, options?: LightGallerySettings) {\n        if (!element) {\n            return this;\n        }\n        lgId++;\n        this.lgId = lgId;\n\n        this.el = element;\n        this.LGel = $LG(element);\n\n        this.generateSettings(options);\n\n        this.buildModules();\n\n        // When using dynamic mode, ensure dynamicEl is an array\n        if (\n            this.settings.dynamic &&\n            this.settings.dynamicEl !== undefined &&\n            !Array.isArray(this.settings.dynamicEl)\n        ) {\n            throw 'When using dynamic mode, you must also define dynamicEl as an Array.';\n        }\n\n        this.galleryItems = this.getItems();\n        this.normalizeSettings();\n\n        // Gallery items\n\n        this.init();\n\n        this.validateLicense();\n\n        return this;\n    }\n\n    private generateSettings(options?: LightGallerySettings) {\n        // lightGallery settings\n        this.settings = {\n            ...lightGalleryCoreSettings,\n            ...options,\n        } as LightGalleryAllSettings;\n        if (\n            this.settings.isMobile &&\n            typeof this.settings.isMobile === 'function'\n                ? this.settings.isMobile()\n                : utils.isMobile()\n        ) {\n            const mobileSettings = {\n                ...this.settings.mobileSettings,\n                ...this.settings.mobileSettings,\n            };\n            this.settings = { ...this.settings, ...mobileSettings };\n        }\n    }\n\n    private normalizeSettings() {\n        if (this.settings.slideEndAnimation) {\n            this.settings.hideControlOnEnd = false;\n        }\n        if (!this.settings.closable) {\n            this.settings.swipeToClose = false;\n        }\n\n        // And reset it on close to get the correct value next time\n        this.zoomFromOrigin = this.settings.zoomFromOrigin;\n\n        // At the moment, Zoom from image doesn't support dynamic options\n        // @todo add zoomFromOrigin support for dynamic images\n        if (this.settings.dynamic) {\n            this.zoomFromOrigin = false;\n        }\n\n        if (!this.settings.container) {\n            this.settings.container = document.body;\n        }\n\n        // settings.preload should not be grater than $item.length\n        this.settings.preload = Math.min(\n            this.settings.preload,\n            this.galleryItems.length,\n        );\n    }\n\n    init(): void {\n        this.addSlideVideoInfo(this.galleryItems);\n\n        this.buildStructure();\n\n        this.LGel.trigger(lGEvents.init, {\n            instance: this,\n        });\n\n        if (this.settings.keyPress) {\n            this.keyPress();\n        }\n\n        setTimeout(() => {\n            this.enableDrag();\n            this.enableSwipe();\n            this.triggerPosterClick();\n        }, 50);\n\n        this.arrow();\n        if (this.settings.mousewheel) {\n            this.mousewheel();\n        }\n\n        if (!this.settings.dynamic) {\n            this.openGalleryOnItemClick();\n        }\n    }\n\n    openGalleryOnItemClick(): void {\n        // Using for loop instead of using bubbling as the items can be any html element.\n        for (let index = 0; index < this.items.length; index++) {\n            const element = this.items[index];\n            const $element = $LG(element);\n            // Using different namespace for click because click event should not unbind if selector is same object('this')\n            // @todo manage all event listners - should have namespace that represent element\n            const uuid = lgQuery.generateUUID();\n            $element\n                .attr('data-lg-id', uuid)\n                .on(`click.lgcustom-item-${uuid}`, (e) => {\n                    e.preventDefault();\n                    const currentItemIndex = this.settings.index || index;\n                    this.openGallery(currentItemIndex, element);\n                });\n        }\n    }\n\n    /**\n     * Module constructor\n     * Modules are build incrementally.\n     * Gallery should be opened only once all the modules are initialized.\n     * use moduleBuildTimeout to make sure this\n     */\n    buildModules(): void {\n        this.settings.plugins.forEach((plugin) => {\n            this.plugins.push(new plugin(this, $LG));\n        });\n    }\n\n    validateLicense(): void {\n        if (!this.settings.licenseKey) {\n            console.error('Please provide a valid license key');\n        } else if (this.settings.licenseKey === '0000-0000-000-0000') {\n            console.warn(\n                `lightGallery: ${this.settings.licenseKey} license key is not valid for production use`,\n            );\n        }\n    }\n\n    getSlideItem(index: number): lgQuery {\n        return $LG(this.getSlideItemId(index));\n    }\n\n    getSlideItemId(index: number): string {\n        return `#lg-item-${this.lgId}-${index}`;\n    }\n\n    getIdName(id: string): string {\n        return `${id}-${this.lgId}`;\n    }\n    getElementById(id: string): lgQuery {\n        return $LG(`#${this.getIdName(id)}`);\n    }\n\n    manageSingleSlideClassName(): void {\n        if (this.galleryItems.length < 2) {\n            this.outer.addClass('lg-single-item');\n        } else {\n            this.outer.removeClass('lg-single-item');\n        }\n    }\n\n    buildStructure(): void {\n        const container = this.$container && this.$container.get();\n        if (container) {\n            return;\n        }\n        let controls = '';\n        let subHtmlCont = '';\n\n        // Create controls\n        if (this.settings.controls) {\n            controls = `<button type=\"button\" id=\"${this.getIdName(\n                'lg-prev',\n            )}\" aria-label=\"${\n                this.settings.strings['previousSlide']\n            }\" class=\"lg-prev lg-icon\"> ${this.settings.prevHtml} </button>\n                <button type=\"button\" id=\"${this.getIdName(\n                    'lg-next',\n                )}\" aria-label=\"${\n                this.settings.strings['nextSlide']\n            }\" class=\"lg-next lg-icon\"> ${this.settings.nextHtml} </button>`;\n        }\n\n        if (this.settings.appendSubHtmlTo !== '.lg-item') {\n            subHtmlCont =\n                '<div class=\"lg-sub-html\" role=\"status\" aria-live=\"polite\"></div>';\n        }\n\n        let addClasses = '';\n\n        if (this.settings.allowMediaOverlap) {\n            // Do not remove space before last single quote\n            addClasses += 'lg-media-overlap ';\n        }\n\n        const ariaLabelledby = this.settings.ariaLabelledby\n            ? 'aria-labelledby=\"' + this.settings.ariaLabelledby + '\"'\n            : '';\n        const ariaDescribedby = this.settings.ariaDescribedby\n            ? 'aria-describedby=\"' + this.settings.ariaDescribedby + '\"'\n            : '';\n\n        const containerClassName = `lg-container ${this.settings.addClass} ${\n            document.body !== this.settings.container ? 'lg-inline' : ''\n        }`;\n        const closeIcon =\n            this.settings.closable && this.settings.showCloseIcon\n                ? `<button type=\"button\" aria-label=\"${\n                      this.settings.strings['closeGallery']\n                  }\" id=\"${this.getIdName(\n                      'lg-close',\n                  )}\" class=\"lg-close lg-icon\"></button>`\n                : '';\n        const maximizeIcon = this.settings.showMaximizeIcon\n            ? `<button type=\"button\" aria-label=\"${\n                  this.settings.strings['toggleMaximize']\n              }\" id=\"${this.getIdName(\n                  'lg-maximize',\n              )}\" class=\"lg-maximize lg-icon\"></button>`\n            : '';\n        const template = `\n        <div class=\"${containerClassName}\" id=\"${this.getIdName(\n            'lg-container',\n        )}\" tabindex=\"-1\" aria-modal=\"true\" ${ariaLabelledby} ${ariaDescribedby} role=\"dialog\"\n        >\n            <div id=\"${this.getIdName(\n                'lg-backdrop',\n            )}\" class=\"lg-backdrop\"></div>\n\n            <div id=\"${this.getIdName(\n                'lg-outer',\n            )}\" class=\"lg-outer lg-use-css3 lg-css3 lg-hide-items ${addClasses} \">\n\n              <div id=\"${this.getIdName('lg-content')}\" class=\"lg-content\">\n                <div id=\"${this.getIdName('lg-inner')}\" class=\"lg-inner\">\n                </div>\n                ${controls}\n              </div>\n                <div id=\"${this.getIdName(\n                    'lg-toolbar',\n                )}\" class=\"lg-toolbar lg-group\">\n                    ${maximizeIcon}\n                    ${closeIcon}\n                    </div>\n                    ${\n                        this.settings.appendSubHtmlTo === '.lg-outer'\n                            ? subHtmlCont\n                            : ''\n                    }\n                <div id=\"${this.getIdName(\n                    'lg-components',\n                )}\" class=\"lg-components\">\n                    ${\n                        this.settings.appendSubHtmlTo === '.lg-sub-html'\n                            ? subHtmlCont\n                            : ''\n                    }\n                </div>\n            </div>\n        </div>\n        `;\n\n        $LG(this.settings.container).append(template);\n\n        if (document.body !== this.settings.container) {\n            $LG(this.settings.container).css('position', 'relative');\n        }\n\n        this.outer = this.getElementById('lg-outer');\n        this.$lgComponents = this.getElementById('lg-components');\n        this.$backdrop = this.getElementById('lg-backdrop');\n        this.$container = this.getElementById('lg-container');\n        this.$inner = this.getElementById('lg-inner');\n        this.$content = this.getElementById('lg-content');\n        this.$toolbar = this.getElementById('lg-toolbar');\n\n        this.$backdrop.css(\n            'transition-duration',\n            this.settings.backdropDuration + 'ms',\n        );\n\n        let outerClassNames = `${this.settings.mode} `;\n\n        this.manageSingleSlideClassName();\n\n        if (this.settings.enableDrag) {\n            outerClassNames += 'lg-grab ';\n        }\n\n        this.outer.addClass(outerClassNames);\n\n        this.$inner.css('transition-timing-function', this.settings.easing);\n        this.$inner.css('transition-duration', this.settings.speed + 'ms');\n\n        if (this.settings.download) {\n            this.$toolbar.append(\n                `<a id=\"${this.getIdName(\n                    'lg-download',\n                )}\" target=\"_blank\" rel=\"noopener\" aria-label=\"${\n                    this.settings.strings['download']\n                }\" download class=\"lg-download lg-icon\"></a>`,\n            );\n        }\n\n        this.counter();\n\n        $LG(window).on(\n            `resize.lg.global${this.lgId} orientationchange.lg.global${this.lgId}`,\n            () => {\n                this.refreshOnResize();\n            },\n        );\n\n        this.hideBars();\n\n        this.manageCloseGallery();\n        this.toggleMaximize();\n\n        this.initModules();\n    }\n\n    refreshOnResize(): void {\n        if (this.lgOpened) {\n            const currentGalleryItem = this.galleryItems[this.index];\n            const { __slideVideoInfo } = currentGalleryItem;\n\n            this.mediaContainerPosition = this.getMediaContainerPosition();\n            const { top, bottom } = this.mediaContainerPosition;\n            this.currentImageSize = utils.getSize(\n                this.items[this.index],\n                this.outer,\n                top + bottom,\n                __slideVideoInfo && this.settings.videoMaxSize,\n            );\n            if (__slideVideoInfo) {\n                this.resizeVideoSlide(this.index, this.currentImageSize);\n            }\n            if (this.zoomFromOrigin && !this.isDummyImageRemoved) {\n                const imgStyle = this.getDummyImgStyles(this.currentImageSize);\n                this.outer\n                    .find('.lg-current .lg-dummy-img')\n                    .first()\n                    .attr('style', imgStyle);\n            }\n            this.LGel.trigger(lGEvents.containerResize);\n        }\n    }\n\n    resizeVideoSlide(index: number, imageSize?: ImageSize): void {\n        const lgVideoStyle = this.getVideoContStyle(imageSize);\n        const currentSlide = this.getSlideItem(index);\n        currentSlide.find('.lg-video-cont').attr('style', lgVideoStyle);\n    }\n\n    /**\n     * Update slides dynamically.\n     * Add, edit or delete slides dynamically when lightGallery is opened.\n     * Modify the current gallery items and pass it via updateSlides method\n     * @note\n     * - Do not mutate existing lightGallery items directly.\n     * - Always pass new list of gallery items\n     * - You need to take care of thumbnails outside the gallery if any\n     * - user this method only if you want to update slides when the gallery is opened. Otherwise, use `refresh()` method.\n     * @param items Gallery items\n     * @param index After the update operation, which slide gallery should navigate to\n     * @category lGPublicMethods\n     * @example\n     * const plugin = lightGallery();\n     *\n     * // Adding slides dynamically\n     * let galleryItems = [\n     * // Access existing lightGallery items\n     * // galleryItems are automatically generated internally from the gallery HTML markup\n     * // or directly from galleryItems when dynamic gallery is used\n     *   ...plugin.galleryItems,\n     *     ...[\n     *       {\n     *         src: 'img/img-1.png',\n     *           thumb: 'img/thumb1.png',\n     *         },\n     *     ],\n     *   ];\n     *   plugin.updateSlides(\n     *     galleryItems,\n     *     plugin.index,\n     *   );\n     *\n     *\n     * // Remove slides dynamically\n     * galleryItems = JSON.parse(\n     *   JSON.stringify(updateSlideInstance.galleryItems),\n     * );\n     * galleryItems.shift();\n     * updateSlideInstance.updateSlides(galleryItems, 1);\n     * @see <a href=\"/demos/update-slides/\">Demo</a>\n     */\n    updateSlides(items: GalleryItem[], index: number): void {\n        if (this.index > items.length - 1) {\n            this.index = items.length - 1;\n        }\n        if (items.length === 1) {\n            this.index = 0;\n        }\n        if (!items.length) {\n            this.closeGallery();\n            return;\n        }\n        const currentSrc = this.galleryItems[index].src;\n        this.galleryItems = items;\n        this.updateControls();\n        this.$inner.empty();\n        this.currentItemsInDom = [];\n\n        let _index = 0;\n        // Find the current index based on source value of the slide\n        this.galleryItems.some((galleryItem, itemIndex) => {\n            if (galleryItem.src === currentSrc) {\n                _index = itemIndex;\n                return true;\n            }\n            return false;\n        });\n\n        this.currentItemsInDom = this.organizeSlideItems(_index, -1);\n        this.loadContent(_index, true);\n        this.getSlideItem(_index).addClass('lg-current');\n\n        this.index = _index;\n        this.updateCurrentCounter(_index);\n        this.LGel.trigger(lGEvents.updateSlides);\n    }\n\n    // Get gallery items based on multiple conditions\n    getItems(): GalleryItem[] {\n        // Gallery items\n        this.items = [];\n        if (!this.settings.dynamic) {\n            if (this.settings.selector === 'this') {\n                this.items.push(this.el);\n            } else if (this.settings.selector) {\n                if (typeof this.settings.selector === 'string') {\n                    if (this.settings.selectWithin) {\n                        const selectWithin = $LG(this.settings.selectWithin);\n                        this.items = selectWithin\n                            .find(this.settings.selector)\n                            .get();\n                    } else {\n                        this.items = this.el.querySelectorAll(\n                            this.settings.selector,\n                        );\n                    }\n                } else {\n                    this.items = this.settings.selector;\n                }\n            } else {\n                this.items = this.el.children;\n            }\n            return utils.getDynamicOptions(\n                this.items,\n                this.settings.extraProps,\n                this.settings.getCaptionFromTitleOrAlt,\n                this.settings.exThumbImage,\n            );\n        } else {\n            return this.settings.dynamicEl || [];\n        }\n    }\n\n    shouldHideScrollbar(): boolean {\n        return (\n            this.settings.hideScrollbar &&\n            document.body === this.settings.container\n        );\n    }\n\n    hideScrollbar(): void {\n        if (!this.shouldHideScrollbar()) {\n            return;\n        }\n        this.bodyPaddingRight = parseFloat($LG('body').style().paddingRight);\n        const bodyRect = document.documentElement.getBoundingClientRect();\n        const scrollbarWidth = window.innerWidth - bodyRect.width;\n\n        $LG(document.body).css(\n            'padding-right',\n            scrollbarWidth + this.bodyPaddingRight + 'px',\n        );\n        $LG(document.body).addClass('lg-overlay-open');\n    }\n\n    resetScrollBar(): void {\n        if (!this.shouldHideScrollbar()) {\n            return;\n        }\n        $LG(document.body).css('padding-right', this.bodyPaddingRight + 'px');\n        $LG(document.body).removeClass('lg-overlay-open');\n    }\n\n    /**\n     * Open lightGallery.\n     * Open gallery with specific slide by passing index of the slide as parameter.\n     * @category lGPublicMethods\n     * @param {Number} index  - index of the slide\n     * @param {HTMLElement} element - Which image lightGallery should zoom from\n     *\n     * @example\n     * const $dynamicGallery = document.getElementById('dynamic-gallery-demo');\n     * const dynamicGallery = lightGallery($dynamicGallery, {\n     *     dynamic: true,\n     *     dynamicEl: [\n     *         {\n     *              src: 'img/1.jpg',\n     *              thumb: 'img/thumb-1.jpg',\n     *              subHtml: '<h4>Image 1 title</h4><p>Image 1 descriptions.</p>',\n     *         },\n     *         ...\n     *     ],\n     * });\n     * $dynamicGallery.addEventListener('click', function () {\n     *     // Starts with third item.(Optional).\n     *     // This is useful if you want use dynamic mode with\n     *     // custom thumbnails (thumbnails outside gallery),\n     *     dynamicGallery.openGallery(2);\n     * });\n     *\n     */\n    openGallery(index = this.settings.index, element?: HTMLElement): void {\n        // prevent accidental double execution\n        if (this.lgOpened) return;\n        this.lgOpened = true;\n        this.outer.removeClass('lg-hide-items');\n\n        this.hideScrollbar();\n\n        // Add display block, but still has opacity 0\n        this.$container.addClass('lg-show');\n\n        const itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(\n            index,\n            index,\n        );\n        this.currentItemsInDom = itemsToBeInsertedToDom;\n\n        let items = '';\n        itemsToBeInsertedToDom.forEach((item) => {\n            items = items + `<div id=\"${item}\" class=\"lg-item\"></div>`;\n        });\n\n        this.$inner.append(items);\n        this.addHtml(index);\n        let transform: string | undefined = '';\n        this.mediaContainerPosition = this.getMediaContainerPosition();\n        const { top, bottom } = this.mediaContainerPosition;\n        if (!this.settings.allowMediaOverlap) {\n            this.setMediaContainerPosition(top, bottom);\n        }\n        const { __slideVideoInfo } = this.galleryItems[index];\n        if (this.zoomFromOrigin && element) {\n            this.currentImageSize = utils.getSize(\n                element,\n                this.outer,\n                top + bottom,\n                __slideVideoInfo && this.settings.videoMaxSize,\n            );\n            transform = utils.getTransform(\n                element,\n                this.outer,\n                top,\n                bottom,\n                this.currentImageSize,\n            );\n        }\n        if (!this.zoomFromOrigin || !transform) {\n            this.outer.addClass(this.settings.startClass);\n            this.getSlideItem(index).removeClass('lg-complete');\n        }\n        const timeout = this.settings.zoomFromOrigin\n            ? 100\n            : this.settings.backdropDuration;\n        setTimeout(() => {\n            this.outer.addClass('lg-components-open');\n        }, timeout);\n        this.index = index;\n        this.LGel.trigger(lGEvents.beforeOpen);\n\n        // add class lg-current to remove initial transition\n        this.getSlideItem(index).addClass('lg-current');\n\n        this.lGalleryOn = false;\n        // Store the current scroll top value to scroll back after closing the gallery..\n        this.prevScrollTop = $LG(window).scrollTop();\n\n        setTimeout(() => {\n            // Need to check both zoomFromOrigin and transform values as we need to set set the\n            // default opening animation if user missed to add the lg-size attribute\n\n            if (this.zoomFromOrigin && transform) {\n                const currentSlide = this.getSlideItem(index);\n                currentSlide.css('transform', transform);\n                setTimeout(() => {\n                    currentSlide\n                        .addClass('lg-start-progress lg-start-end-progress')\n                        .css(\n                            'transition-duration',\n                            this.settings.startAnimationDuration + 'ms',\n                        );\n                    this.outer.addClass('lg-zoom-from-image');\n                });\n                setTimeout(() => {\n                    currentSlide.css('transform', 'translate3d(0, 0, 0)');\n                }, 100);\n            }\n\n            setTimeout(() => {\n                this.$backdrop.addClass('in');\n                this.$container.addClass('lg-show-in');\n            }, 10);\n\n            setTimeout(() => {\n                if (\n                    this.settings.trapFocus &&\n                    document.body === this.settings.container\n                ) {\n                    this.trapFocus();\n                }\n            }, this.settings.backdropDuration + 50);\n\n            // lg-visible class resets gallery opacity to 1\n            if (!this.zoomFromOrigin || !transform) {\n                setTimeout(() => {\n                    this.outer.addClass('lg-visible');\n                }, this.settings.backdropDuration);\n            }\n\n            // initiate slide function\n            this.slide(index, false, false, false);\n\n            this.LGel.trigger(lGEvents.afterOpen);\n        });\n\n        if (document.body === this.settings.container) {\n            $LG('html').addClass('lg-on');\n        }\n    }\n\n    /**\n     * Note - Changing the position of the media on every slide transition creates a flickering effect.\n     * Therefore, The height of the caption is calculated dynamically, only once based on the first slide caption.\n     * if you have dynamic captions for each media,\n     * you can provide an appropriate height for the captions via allowMediaOverlap option\n     */\n    public getMediaContainerPosition(): MediaContainerPosition {\n        if (this.settings.allowMediaOverlap) {\n            return {\n                top: 0,\n                bottom: 0,\n            };\n        }\n        const top = this.$toolbar.get().clientHeight || 0;\n        const subHtml = this.outer.find('.lg-components .lg-sub-html').get();\n        const captionHeight =\n            this.settings.defaultCaptionHeight ||\n            (subHtml && subHtml.clientHeight) ||\n            0;\n        const thumbContainer = this.outer.find('.lg-thumb-outer').get();\n        const thumbHeight = thumbContainer ? thumbContainer.clientHeight : 0;\n        const bottom = thumbHeight + captionHeight;\n        return {\n            top,\n            bottom,\n        };\n    }\n\n    private setMediaContainerPosition(top = 0, bottom = 0): void {\n        this.$content.css('top', top + 'px').css('bottom', bottom + 'px');\n    }\n\n    hideBars(): void {\n        // Hide controllers if mouse doesn't move for some period\n        setTimeout(() => {\n            this.outer.removeClass('lg-hide-items');\n            if (this.settings.hideBarsDelay > 0) {\n                this.outer.on('mousemove.lg click.lg touchstart.lg', () => {\n                    this.outer.removeClass('lg-hide-items');\n\n                    clearTimeout(this.hideBarTimeout);\n\n                    // Timeout will be cleared on each slide movement also\n                    this.hideBarTimeout = setTimeout(() => {\n                        this.outer.addClass('lg-hide-items');\n                    }, this.settings.hideBarsDelay);\n                });\n                this.outer.trigger('mousemove.lg');\n            }\n        }, this.settings.showBarsAfter);\n    }\n\n    initPictureFill($img: lgQuery): void {\n        if (this.settings.supportLegacyBrowser) {\n            try {\n                picturefill({\n                    elements: [$img.get()],\n                });\n            } catch (e) {\n                console.warn(\n                    'lightGallery :- If you want srcset or picture tag to be supported for older browser please include picturefil javascript library in your document.',\n                );\n            }\n        }\n    }\n\n    /**\n     *  @desc Create image counter\n     *  Ex: 1/10\n     */\n    counter(): void {\n        if (this.settings.counter) {\n            const counterHtml = `<div class=\"lg-counter\" role=\"status\" aria-live=\"polite\">\n                <span id=\"${this.getIdName(\n                    'lg-counter-current',\n                )}\" class=\"lg-counter-current\">${this.index + 1} </span> /\n                <span id=\"${this.getIdName(\n                    'lg-counter-all',\n                )}\" class=\"lg-counter-all\">${\n                this.galleryItems.length\n            } </span></div>`;\n            this.outer.find(this.settings.appendCounterTo).append(counterHtml);\n        }\n    }\n\n    /**\n     *  @desc add sub-html into the slide\n     *  @param {Number} index - index of the slide\n     */\n    addHtml(index: number): void {\n        let subHtml;\n        let subHtmlUrl;\n        if (this.galleryItems[index].subHtmlUrl) {\n            subHtmlUrl = this.galleryItems[index].subHtmlUrl;\n        } else {\n            subHtml = this.galleryItems[index].subHtml;\n        }\n\n        if (!subHtmlUrl) {\n            if (subHtml) {\n                // get first letter of sub-html\n                // if first letter starts with . or # get the html form the jQuery object\n                const fL = subHtml.substring(0, 1);\n                if (fL === '.' || fL === '#') {\n                    if (\n                        this.settings.subHtmlSelectorRelative &&\n                        !this.settings.dynamic\n                    ) {\n                        subHtml = $LG(this.items)\n                            .eq(index)\n                            .find(subHtml)\n                            .first()\n                            .html();\n                    } else {\n                        subHtml = $LG(subHtml).first().html();\n                    }\n                }\n            } else {\n                subHtml = '';\n            }\n        }\n\n        if (this.settings.appendSubHtmlTo !== '.lg-item') {\n            if (subHtmlUrl) {\n                this.outer.find('.lg-sub-html').load(subHtmlUrl);\n            } else {\n                this.outer.find('.lg-sub-html').html(subHtml as string);\n            }\n        } else {\n            const currentSlide = $LG(this.getSlideItemId(index));\n            if (subHtmlUrl) {\n                currentSlide.load(subHtmlUrl);\n            } else {\n                currentSlide.append(\n                    `<div class=\"lg-sub-html\">${subHtml}</div>`,\n                );\n            }\n        }\n\n        // Add lg-empty-html class if title doesn't exist\n        if (typeof subHtml !== 'undefined' && subHtml !== null) {\n            if (subHtml === '') {\n                this.outer\n                    .find(this.settings.appendSubHtmlTo)\n                    .addClass('lg-empty-html');\n            } else {\n                this.outer\n                    .find(this.settings.appendSubHtmlTo)\n                    .removeClass('lg-empty-html');\n            }\n        }\n\n        this.LGel.trigger<AfterAppendSubHtmlDetail>(\n            lGEvents.afterAppendSubHtml,\n            {\n                index,\n            },\n        );\n    }\n\n    /**\n     *  @desc Preload slides\n     *  @param {Number} index - index of the slide\n     * @todo preload not working for the first slide, Also, should work for the first and last slide as well\n     */\n    preload(index: number): void {\n        for (let i = 1; i <= this.settings.preload; i++) {\n            if (i >= this.galleryItems.length - index) {\n                break;\n            }\n\n            this.loadContent(index + i, false);\n        }\n\n        for (let j = 1; j <= this.settings.preload; j++) {\n            if (index - j < 0) {\n                break;\n            }\n\n            this.loadContent(index - j, false);\n        }\n    }\n\n    getDummyImgStyles(imageSize?: ImageSize): string {\n        if (!imageSize) return '';\n        return `width:${imageSize.width}px;\n                margin-left: -${imageSize.width / 2}px;\n                margin-top: -${imageSize.height / 2}px;\n                height:${imageSize.height}px`;\n    }\n    getVideoContStyle(imageSize?: ImageSize): string {\n        if (!imageSize) return '';\n        return `width:${imageSize.width}px;\n                height:${imageSize.height}px`;\n    }\n\n    getDummyImageContent(\n        $currentSlide: lgQuery,\n        index: number,\n        alt: string,\n    ): string {\n        let $currentItem;\n        if (!this.settings.dynamic) {\n            $currentItem = $LG(this.items).eq(index);\n        }\n        if ($currentItem) {\n            let _dummyImgSrc;\n            if (!this.settings.exThumbImage) {\n                _dummyImgSrc = $currentItem.find('img').first().attr('src');\n            } else {\n                _dummyImgSrc = $currentItem.attr(this.settings.exThumbImage);\n            }\n            if (!_dummyImgSrc) return '';\n            const imgStyle = this.getDummyImgStyles(this.currentImageSize);\n            const dummyImgContent = `<img ${alt} style=\"${imgStyle}\" class=\"lg-dummy-img\" src=\"${_dummyImgSrc}\" />`;\n\n            $currentSlide.addClass('lg-first-slide');\n            this.outer.addClass('lg-first-slide-loading');\n\n            return dummyImgContent;\n        }\n        return '';\n    }\n\n    setImgMarkup(src: string, $currentSlide: lgQuery, index: number): void {\n        const currentGalleryItem = this.galleryItems[index];\n        const { alt, srcset, sizes, sources } = currentGalleryItem;\n\n        // Use the thumbnail as dummy image which will be resized to actual image size and\n        // displayed on top of actual image\n        let imgContent = '';\n        const altAttr = alt ? 'alt=\"' + alt + '\"' : '';\n\n        if (this.isFirstSlideWithZoomAnimation()) {\n            imgContent = this.getDummyImageContent(\n                $currentSlide,\n                index,\n                altAttr,\n            );\n        } else {\n            imgContent = utils.getImgMarkup(\n                index,\n                src,\n                altAttr,\n                srcset,\n                sizes,\n                sources,\n            );\n        }\n        const imgMarkup = `<picture class=\"lg-img-wrap\"> ${imgContent}</picture>`;\n        $currentSlide.prepend(imgMarkup);\n    }\n\n    onSlideObjectLoad(\n        $slide: lgQuery,\n        isHTML5VideoWithoutPoster: boolean,\n        onLoad: () => void,\n        onError: () => void,\n    ): void {\n        const mediaObject = $slide.find('.lg-object').first();\n        if (\n            utils.isImageLoaded(mediaObject.get() as HTMLImageElement) ||\n            isHTML5VideoWithoutPoster\n        ) {\n            onLoad();\n        } else {\n            mediaObject.on('load.lg error.lg', () => {\n                onLoad && onLoad();\n            });\n            mediaObject.on('error.lg', () => {\n                onError && onError();\n            });\n        }\n    }\n\n    /**\n     *\n     * @param $el Current slide item\n     * @param index\n     * @param delay Delay is 0 except first time\n     * @param speed Speed is same as delay, except it is 0 if gallery is opened via hash plugin\n     * @param isFirstSlide\n     */\n    onLgObjectLoad(\n        currentSlide: lgQuery,\n        index: number,\n        delay: number,\n        speed: number,\n        isFirstSlide: boolean,\n        isHTML5VideoWithoutPoster: boolean,\n    ): void {\n        this.onSlideObjectLoad(\n            currentSlide,\n            isHTML5VideoWithoutPoster,\n            () => {\n                this.triggerSlideItemLoad(\n                    currentSlide,\n                    index,\n                    delay,\n                    speed,\n                    isFirstSlide,\n                );\n            },\n            () => {\n                currentSlide.addClass('lg-complete lg-complete_');\n                currentSlide.html(\n                    '<span class=\"lg-error-msg\">Oops... Failed to load content...</span>',\n                );\n            },\n        );\n    }\n\n    triggerSlideItemLoad(\n        $currentSlide: lgQuery,\n        index: number,\n        delay: number,\n        speed: number,\n        isFirstSlide: boolean,\n    ): void {\n        const currentGalleryItem = this.galleryItems[index];\n\n        // Adding delay for video slides without poster for better performance and user experience\n        // Videos should start playing once once the gallery is completely loaded\n        const _speed =\n            isFirstSlide &&\n            this.getSlideType(currentGalleryItem) === 'video' &&\n            !currentGalleryItem.poster\n                ? speed\n                : 0;\n        setTimeout(() => {\n            $currentSlide.addClass('lg-complete lg-complete_');\n            this.LGel.trigger<SlideItemLoadDetail>(lGEvents.slideItemLoad, {\n                index,\n                delay: delay || 0,\n                isFirstSlide,\n            });\n        }, _speed);\n    }\n\n    isFirstSlideWithZoomAnimation(): boolean {\n        return !!(\n            !this.lGalleryOn &&\n            this.zoomFromOrigin &&\n            this.currentImageSize\n        );\n    }\n\n    // Add video slideInfo\n    addSlideVideoInfo(items: GalleryItem[]): void {\n        items.forEach((element, index) => {\n            element.__slideVideoInfo = utils.isVideo(\n                element.src as string,\n                !!element.video,\n                index,\n            );\n            if (\n                element.__slideVideoInfo &&\n                this.settings.loadYouTubePoster &&\n                !element.poster &&\n                element.__slideVideoInfo.youtube\n            ) {\n                element.poster = `//img.youtube.com/vi/${element.__slideVideoInfo.youtube[1]}/maxresdefault.jpg`;\n            }\n        });\n    }\n\n    /**\n     *  Load slide content into slide.\n     *  This is used to load content into slides that is not visible too\n     *  @param {Number} index - index of the slide.\n     *  @param {Boolean} rec - if true call loadcontent() function again.\n     */\n    loadContent(index: number, rec: boolean): void {\n        const currentGalleryItem = this.galleryItems[index];\n        const $currentSlide = $LG(this.getSlideItemId(index));\n\n        const { poster, srcset, sizes, sources } = currentGalleryItem;\n        let { src } = currentGalleryItem;\n\n        const video = currentGalleryItem.video;\n\n        const _html5Video =\n            video && typeof video === 'string' ? JSON.parse(video) : video;\n\n        if (currentGalleryItem.responsive) {\n            const srcDyItms = currentGalleryItem.responsive.split(',');\n            src = utils.getResponsiveSrc(srcDyItms) || src;\n        }\n\n        const videoInfo = currentGalleryItem.__slideVideoInfo;\n        let lgVideoStyle = '';\n\n        const iframe = !!currentGalleryItem.iframe;\n\n        const isFirstSlide = !this.lGalleryOn;\n\n        // delay for adding complete class. it is 0 except first time.\n        let delay = 0;\n        if (isFirstSlide) {\n            if (this.zoomFromOrigin && this.currentImageSize) {\n                delay = this.settings.startAnimationDuration + 10;\n            } else {\n                delay = this.settings.backdropDuration + 10;\n            }\n        }\n\n        if (!$currentSlide.hasClass('lg-loaded')) {\n            if (videoInfo) {\n                const { top, bottom } = this.mediaContainerPosition;\n                const videoSize = utils.getSize(\n                    this.items[index],\n                    this.outer,\n                    top + bottom,\n                    videoInfo && this.settings.videoMaxSize,\n                );\n                lgVideoStyle = this.getVideoContStyle(videoSize);\n            }\n            if (iframe) {\n                const markup = utils.getIframeMarkup(\n                    this.settings.iframeWidth,\n                    this.settings.iframeHeight,\n                    this.settings.iframeMaxWidth,\n                    this.settings.iframeMaxHeight,\n                    src,\n                    currentGalleryItem.iframeTitle,\n                );\n                $currentSlide.prepend(markup);\n            } else if (poster) {\n                let dummyImg = '';\n                const hasStartAnimation =\n                    isFirstSlide &&\n                    this.zoomFromOrigin &&\n                    this.currentImageSize;\n                if (hasStartAnimation) {\n                    dummyImg = this.getDummyImageContent(\n                        $currentSlide,\n                        index,\n                        '',\n                    );\n                }\n\n                const markup = utils.getVideoPosterMarkup(\n                    poster,\n                    dummyImg || '',\n                    lgVideoStyle,\n                    this.settings.strings['playVideo'],\n                    videoInfo,\n                );\n                $currentSlide.prepend(markup);\n            } else if (videoInfo) {\n                const markup = `<div class=\"lg-video-cont \" style=\"${lgVideoStyle}\"></div>`;\n                $currentSlide.prepend(markup);\n            } else {\n                this.setImgMarkup(src as string, $currentSlide, index);\n                if (srcset || sources) {\n                    const $img = $currentSlide.find('.lg-object');\n                    this.initPictureFill($img);\n                }\n            }\n            if (poster || videoInfo) {\n                this.LGel.trigger(lGEvents.hasVideo, {\n                    index,\n                    src: src,\n                    html5Video: _html5Video,\n                    hasPoster: !!poster,\n                });\n            }\n\n            this.LGel.trigger<AfterAppendSlideEventDetail>(\n                lGEvents.afterAppendSlide,\n                { index },\n            );\n\n            if (\n                this.lGalleryOn &&\n                this.settings.appendSubHtmlTo === '.lg-item'\n            ) {\n                this.addHtml(index);\n            }\n        }\n\n        // For first time add some delay for displaying the start animation.\n        let _speed = 0;\n\n        // Do not change the delay value because it is required for zoom plugin.\n        // If gallery opened from direct url (hash) speed value should be 0\n        if (delay && !$LG(document.body).hasClass('lg-from-hash')) {\n            _speed = delay;\n        }\n\n        // Only for first slide and zoomFromOrigin is enabled\n        if (this.isFirstSlideWithZoomAnimation()) {\n            setTimeout(() => {\n                $currentSlide\n                    .removeClass('lg-start-end-progress lg-start-progress')\n                    .removeAttr('style');\n            }, this.settings.startAnimationDuration + 100);\n            if (!$currentSlide.hasClass('lg-loaded')) {\n                setTimeout(() => {\n                    if (this.getSlideType(currentGalleryItem) === 'image') {\n                        const { alt } = currentGalleryItem;\n                        const altAttr = alt ? 'alt=\"' + alt + '\"' : '';\n\n                        $currentSlide\n                            .find('.lg-img-wrap')\n                            .append(\n                                utils.getImgMarkup(\n                                    index,\n                                    src as string,\n                                    altAttr,\n                                    srcset,\n                                    sizes,\n                                    currentGalleryItem.sources,\n                                ),\n                            );\n                        if (srcset || sources) {\n                            const $img = $currentSlide.find('.lg-object');\n                            this.initPictureFill($img);\n                        }\n                    }\n                    if (\n                        this.getSlideType(currentGalleryItem) === 'image' ||\n                        (this.getSlideType(currentGalleryItem) === 'video' &&\n                            poster)\n                    ) {\n                        this.onLgObjectLoad(\n                            $currentSlide,\n                            index,\n                            delay,\n                            _speed,\n                            true,\n                            false,\n                        );\n\n                        // load remaining slides once the slide is completely loaded\n                        this.onSlideObjectLoad(\n                            $currentSlide,\n                            !!(videoInfo && videoInfo.html5 && !poster),\n                            () => {\n                                this.loadContentOnFirstSlideLoad(\n                                    index,\n                                    $currentSlide,\n                                    _speed,\n                                );\n                            },\n                            () => {\n                                this.loadContentOnFirstSlideLoad(\n                                    index,\n                                    $currentSlide,\n                                    _speed,\n                                );\n                            },\n                        );\n                    }\n                }, this.settings.startAnimationDuration + 100);\n            }\n        }\n\n        // SLide content has been added to dom\n        $currentSlide.addClass('lg-loaded');\n\n        if (\n            !this.isFirstSlideWithZoomAnimation() ||\n            (this.getSlideType(currentGalleryItem) === 'video' && !poster)\n        ) {\n            this.onLgObjectLoad(\n                $currentSlide,\n                index,\n                delay,\n                _speed,\n                isFirstSlide,\n                !!(videoInfo && videoInfo.html5 && !poster),\n            );\n        }\n\n        // When gallery is opened once content is loaded (second time) need to add lg-complete class for css styling\n        if (\n            (!this.zoomFromOrigin || !this.currentImageSize) &&\n            $currentSlide.hasClass('lg-complete_') &&\n            !this.lGalleryOn\n        ) {\n            setTimeout(() => {\n                $currentSlide.addClass('lg-complete');\n            }, this.settings.backdropDuration);\n        }\n\n        // Content loaded\n        // Need to set lGalleryOn before calling preload function\n        this.lGalleryOn = true;\n\n        if (rec === true) {\n            if (!$currentSlide.hasClass('lg-complete_')) {\n                $currentSlide\n                    .find('.lg-object')\n                    .first()\n                    .on('load.lg error.lg', () => {\n                        this.preload(index);\n                    });\n            } else {\n                this.preload(index);\n            }\n        }\n    }\n\n    /**\n     * @desc Remove dummy image content and load next slides\n     * Called only for the first time if zoomFromOrigin animation is enabled\n     * @param index\n     * @param $currentSlide\n     * @param speed\n     */\n    loadContentOnFirstSlideLoad(\n        index: number,\n        $currentSlide: lgQuery,\n        speed: number,\n    ): void {\n        setTimeout(() => {\n            $currentSlide.find('.lg-dummy-img').remove();\n            $currentSlide.removeClass('lg-first-slide');\n            this.outer.removeClass('lg-first-slide-loading');\n            this.isDummyImageRemoved = true;\n            this.preload(index);\n        }, speed + 300);\n    }\n\n    getItemsToBeInsertedToDom(\n        index: number,\n        prevIndex: number,\n        numberOfItems = 0,\n    ): string[] {\n        const itemsToBeInsertedToDom: string[] = [];\n        // Minimum 2 items should be there\n        let possibleNumberOfItems = Math.max(numberOfItems, 3);\n        possibleNumberOfItems = Math.min(\n            possibleNumberOfItems,\n            this.galleryItems.length,\n        );\n        const prevIndexItem = `lg-item-${this.lgId}-${prevIndex}`;\n        if (this.galleryItems.length <= 3) {\n            this.galleryItems.forEach((_element, index) => {\n                itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${index}`);\n            });\n            return itemsToBeInsertedToDom;\n        }\n\n        if (index < (this.galleryItems.length - 1) / 2) {\n            for (\n                let idx = index;\n                idx > index - possibleNumberOfItems / 2 && idx >= 0;\n                idx--\n            ) {\n                itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${idx}`);\n            }\n            const numberOfExistingItems = itemsToBeInsertedToDom.length;\n            for (\n                let idx = 0;\n                idx < possibleNumberOfItems - numberOfExistingItems;\n                idx++\n            ) {\n                itemsToBeInsertedToDom.push(\n                    `lg-item-${this.lgId}-${index + idx + 1}`,\n                );\n            }\n        } else {\n            for (\n                let idx = index;\n                idx <= this.galleryItems.length - 1 &&\n                idx < index + possibleNumberOfItems / 2;\n                idx++\n            ) {\n                itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${idx}`);\n            }\n            const numberOfExistingItems = itemsToBeInsertedToDom.length;\n            for (\n                let idx = 0;\n                idx < possibleNumberOfItems - numberOfExistingItems;\n                idx++\n            ) {\n                itemsToBeInsertedToDom.push(\n                    `lg-item-${this.lgId}-${index - idx - 1}`,\n                );\n            }\n        }\n        if (this.settings.loop) {\n            if (index === this.galleryItems.length - 1) {\n                itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${0}`);\n            } else if (index === 0) {\n                itemsToBeInsertedToDom.push(\n                    `lg-item-${this.lgId}-${this.galleryItems.length - 1}`,\n                );\n            }\n        }\n        if (itemsToBeInsertedToDom.indexOf(prevIndexItem) === -1) {\n            itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${prevIndex}`);\n        }\n\n        return itemsToBeInsertedToDom;\n    }\n\n    organizeSlideItems(index: number, prevIndex: number): string[] {\n        const itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(\n            index,\n            prevIndex,\n            this.settings.numberOfSlideItemsInDom,\n        );\n\n        itemsToBeInsertedToDom.forEach((item) => {\n            if (this.currentItemsInDom.indexOf(item) === -1) {\n                this.$inner.append(`<div id=\"${item}\" class=\"lg-item\"></div>`);\n            }\n        });\n\n        this.currentItemsInDom.forEach((item) => {\n            if (itemsToBeInsertedToDom.indexOf(item) === -1) {\n                $LG(`#${item}`).remove();\n            }\n        });\n        return itemsToBeInsertedToDom;\n    }\n\n    /**\n     * Get previous index of the slide\n     */\n    getPreviousSlideIndex(): number {\n        let prevIndex = 0;\n        try {\n            const currentItemId = this.outer\n                .find('.lg-current')\n                .first()\n                .attr('id');\n            prevIndex = parseInt(currentItemId.split('-')[3]) || 0;\n        } catch (error) {\n            prevIndex = 0;\n        }\n        return prevIndex;\n    }\n\n    setDownloadValue(index: number): void {\n        if (this.settings.download) {\n            const currentGalleryItem = this.galleryItems[index];\n            const hideDownloadBtn =\n                currentGalleryItem.downloadUrl === false ||\n                currentGalleryItem.downloadUrl === 'false';\n            if (hideDownloadBtn) {\n                this.outer.addClass('lg-hide-download');\n            } else {\n                const $download = this.getElementById('lg-download');\n                this.outer.removeClass('lg-hide-download');\n                $download.attr(\n                    'href',\n                    currentGalleryItem.downloadUrl ||\n                        (currentGalleryItem.src as string),\n                );\n                if (currentGalleryItem.download) {\n                    $download.attr('download', currentGalleryItem.download);\n                }\n            }\n        }\n    }\n\n    makeSlideAnimation(\n        direction: 'next' | 'prev',\n        currentSlideItem: lgQuery,\n        previousSlideItem: lgQuery,\n    ): void {\n        if (this.lGalleryOn) {\n            previousSlideItem.addClass('lg-slide-progress');\n        }\n        setTimeout(\n            () => {\n                // remove all transitions\n                this.outer.addClass('lg-no-trans');\n\n                this.outer\n                    .find('.lg-item')\n                    .removeClass('lg-prev-slide lg-next-slide');\n\n                if (direction === 'prev') {\n                    //prevslide\n                    currentSlideItem.addClass('lg-prev-slide');\n                    previousSlideItem.addClass('lg-next-slide');\n                } else {\n                    // next slide\n                    currentSlideItem.addClass('lg-next-slide');\n                    previousSlideItem.addClass('lg-prev-slide');\n                }\n\n                // give 50 ms for browser to add/remove class\n                setTimeout(() => {\n                    this.outer.find('.lg-item').removeClass('lg-current');\n\n                    currentSlideItem.addClass('lg-current');\n\n                    // reset all transitions\n                    this.outer.removeClass('lg-no-trans');\n                }, 50);\n            },\n            this.lGalleryOn ? this.settings.slideDelay : 0,\n        );\n    }\n\n    /**\n     * Goto a specific slide.\n     * @param {Number} index - index of the slide\n     * @param {Boolean} fromTouch - true if slide function called via touch event or mouse drag\n     * @param {Boolean} fromThumb - true if slide function called via thumbnail click\n     * @param {String} direction - Direction of the slide(next/prev)\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  // to go to 3rd slide\n     *  plugin.slide(2);\n     *\n     */\n    slide(\n        index: number,\n        fromTouch?: boolean,\n        fromThumb?: boolean,\n        direction?: SlideDirection | false,\n    ): void {\n        const prevIndex = this.getPreviousSlideIndex();\n        this.currentItemsInDom = this.organizeSlideItems(index, prevIndex);\n\n        // Prevent multiple call, Required for hsh plugin\n        if (this.lGalleryOn && prevIndex === index) {\n            return;\n        }\n\n        const numberOfGalleryItems = this.galleryItems.length;\n\n        if (!this.lgBusy) {\n            if (this.settings.counter) {\n                this.updateCurrentCounter(index);\n            }\n\n            const currentSlideItem = this.getSlideItem(index);\n            const previousSlideItem = this.getSlideItem(prevIndex);\n\n            const currentGalleryItem = this.galleryItems[index];\n            const videoInfo = currentGalleryItem.__slideVideoInfo;\n\n            this.outer.attr(\n                'data-lg-slide-type',\n                this.getSlideType(currentGalleryItem),\n            );\n            this.setDownloadValue(index);\n\n            if (videoInfo) {\n                const { top, bottom } = this.mediaContainerPosition;\n                const videoSize = utils.getSize(\n                    this.items[index],\n                    this.outer,\n                    top + bottom,\n                    videoInfo && this.settings.videoMaxSize,\n                );\n                this.resizeVideoSlide(index, videoSize);\n            }\n\n            this.LGel.trigger<BeforeSlideDetail>(lGEvents.beforeSlide, {\n                prevIndex,\n                index,\n                fromTouch: !!fromTouch,\n                fromThumb: !!fromThumb,\n            });\n\n            this.lgBusy = true;\n\n            clearTimeout(this.hideBarTimeout);\n\n            this.arrowDisable(index);\n\n            if (!direction) {\n                if (index < prevIndex) {\n                    direction = 'prev';\n                } else if (index > prevIndex) {\n                    direction = 'next';\n                }\n            }\n\n            if (!fromTouch) {\n                this.makeSlideAnimation(\n                    direction as SlideDirection,\n                    currentSlideItem,\n                    previousSlideItem,\n                );\n            } else {\n                this.outer\n                    .find('.lg-item')\n                    .removeClass('lg-prev-slide lg-current lg-next-slide');\n                let touchPrev;\n                let touchNext;\n                if (numberOfGalleryItems > 2) {\n                    touchPrev = index - 1;\n                    touchNext = index + 1;\n\n                    if (index === 0 && prevIndex === numberOfGalleryItems - 1) {\n                        // next slide\n                        touchNext = 0;\n                        touchPrev = numberOfGalleryItems - 1;\n                    } else if (\n                        index === numberOfGalleryItems - 1 &&\n                        prevIndex === 0\n                    ) {\n                        // prev slide\n                        touchNext = 0;\n                        touchPrev = numberOfGalleryItems - 1;\n                    }\n                } else {\n                    touchPrev = 0;\n                    touchNext = 1;\n                }\n\n                if (direction === 'prev') {\n                    this.getSlideItem(touchNext).addClass('lg-next-slide');\n                } else {\n                    this.getSlideItem(touchPrev).addClass('lg-prev-slide');\n                }\n\n                currentSlideItem.addClass('lg-current');\n            }\n\n            // Do not put load content in set timeout as it needs to load immediately when the gallery is opened\n            if (!this.lGalleryOn) {\n                this.loadContent(index, true);\n            } else {\n                setTimeout(() => {\n                    this.loadContent(index, true);\n                    // Add title if this.settings.appendSubHtmlTo === lg-sub-html\n                    if (this.settings.appendSubHtmlTo !== '.lg-item') {\n                        this.addHtml(index);\n                    }\n                }, this.settings.speed + 50 + (fromTouch ? 0 : this.settings.slideDelay));\n            }\n\n            setTimeout(() => {\n                this.lgBusy = false;\n                previousSlideItem.removeClass('lg-slide-progress');\n                this.LGel.trigger(lGEvents.afterSlide, {\n                    prevIndex: prevIndex,\n                    index,\n                    fromTouch,\n                    fromThumb,\n                });\n            }, (this.lGalleryOn ? this.settings.speed + 100 : 100) + (fromTouch ? 0 : this.settings.slideDelay));\n        }\n\n        this.index = index;\n    }\n\n    updateCurrentCounter(index: number): void {\n        this.getElementById('lg-counter-current').html(index + 1 + '');\n    }\n\n    updateCounterTotal(): void {\n        this.getElementById('lg-counter-all').html(\n            this.galleryItems.length + '',\n        );\n    }\n\n    getSlideType(item: GalleryItem): 'video' | 'iframe' | 'image' {\n        if (item.__slideVideoInfo) {\n            return 'video';\n        } else if (item.iframe) {\n            return 'iframe';\n        } else {\n            return 'image';\n        }\n    }\n\n    touchMove(startCoords: Coords, endCoords: Coords, e?: TouchEvent): void {\n        const distanceX = endCoords.pageX - startCoords.pageX;\n        const distanceY = endCoords.pageY - startCoords.pageY;\n        let allowSwipe = false;\n\n        if (this.swipeDirection) {\n            allowSwipe = true;\n        } else {\n            if (Math.abs(distanceX) > 15) {\n                this.swipeDirection = 'horizontal';\n                allowSwipe = true;\n            } else if (Math.abs(distanceY) > 15) {\n                this.swipeDirection = 'vertical';\n                allowSwipe = true;\n            }\n        }\n\n        if (!allowSwipe) {\n            return;\n        }\n\n        const $currentSlide = this.getSlideItem(this.index);\n\n        if (this.swipeDirection === 'horizontal') {\n            e?.preventDefault();\n            // reset opacity and transition duration\n            this.outer.addClass('lg-dragging');\n\n            // move current slide\n            this.setTranslate($currentSlide, distanceX, 0);\n\n            // move next and prev slide with current slide\n            const width = $currentSlide.get().offsetWidth;\n            const slideWidthAmount = (width * 15) / 100;\n            const gutter = slideWidthAmount - Math.abs((distanceX * 10) / 100);\n            this.setTranslate(\n                this.outer.find('.lg-prev-slide').first(),\n                -width + distanceX - gutter,\n                0,\n            );\n\n            this.setTranslate(\n                this.outer.find('.lg-next-slide').first(),\n                width + distanceX + gutter,\n                0,\n            );\n        } else if (this.swipeDirection === 'vertical') {\n            if (this.settings.swipeToClose) {\n                e?.preventDefault();\n                this.$container.addClass('lg-dragging-vertical');\n\n                const opacity = 1 - Math.abs(distanceY) / window.innerHeight;\n                this.$backdrop.css('opacity', opacity);\n\n                const scale = 1 - Math.abs(distanceY) / (window.innerWidth * 2);\n                this.setTranslate($currentSlide, 0, distanceY, scale, scale);\n                if (Math.abs(distanceY) > 100) {\n                    this.outer\n                        .addClass('lg-hide-items')\n                        .removeClass('lg-components-open');\n                }\n            }\n        }\n    }\n\n    touchEnd(endCoords: Coords, startCoords: Coords, event: TouchEvent): void {\n        let distance;\n\n        // keep slide animation for any mode while dragg/swipe\n        if (this.settings.mode !== 'lg-slide') {\n            this.outer.addClass('lg-slide');\n        }\n\n        // set transition duration\n        setTimeout(() => {\n            this.$container.removeClass('lg-dragging-vertical');\n            this.outer\n                .removeClass('lg-dragging lg-hide-items')\n                .addClass('lg-components-open');\n\n            let triggerClick = true;\n\n            if (this.swipeDirection === 'horizontal') {\n                distance = endCoords.pageX - startCoords.pageX;\n                const distanceAbs = Math.abs(\n                    endCoords.pageX - startCoords.pageX,\n                );\n                if (\n                    distance < 0 &&\n                    distanceAbs > this.settings.swipeThreshold\n                ) {\n                    this.goToNextSlide(true);\n                    triggerClick = false;\n                } else if (\n                    distance > 0 &&\n                    distanceAbs > this.settings.swipeThreshold\n                ) {\n                    this.goToPrevSlide(true);\n                    triggerClick = false;\n                }\n            } else if (this.swipeDirection === 'vertical') {\n                distance = Math.abs(endCoords.pageY - startCoords.pageY);\n                if (\n                    this.settings.closable &&\n                    this.settings.swipeToClose &&\n                    distance > 100\n                ) {\n                    this.closeGallery();\n                    return;\n                } else {\n                    this.$backdrop.css('opacity', 1);\n                }\n            }\n            this.outer.find('.lg-item').removeAttr('style');\n\n            if (\n                triggerClick &&\n                Math.abs(endCoords.pageX - startCoords.pageX) < 5\n            ) {\n                // Trigger click if distance is less than 5 pix\n                const target = $LG(event.target);\n                if (this.isPosterElement(target)) {\n                    this.LGel.trigger(lGEvents.posterClick);\n                }\n            }\n\n            this.swipeDirection = undefined;\n        });\n\n        // remove slide class once drag/swipe is completed if mode is not slide\n        setTimeout(() => {\n            if (\n                !this.outer.hasClass('lg-dragging') &&\n                this.settings.mode !== 'lg-slide'\n            ) {\n                this.outer.removeClass('lg-slide');\n            }\n        }, this.settings.speed + 100);\n    }\n\n    enableSwipe(): void {\n        let startCoords: Coords = {} as Coords;\n        let endCoords: Coords = {} as Coords;\n        let isMoved = false;\n        let isSwiping = false;\n\n        if (this.settings.enableSwipe) {\n            this.$inner.on('touchstart.lg', (e) => {\n                this.dragOrSwipeEnabled = true;\n                const $item = this.getSlideItem(this.index);\n                if (\n                    ($LG(e.target).hasClass('lg-item') ||\n                        $item.get().contains(e.target)) &&\n                    !this.outer.hasClass('lg-zoomed') &&\n                    !this.lgBusy &&\n                    e.touches.length === 1\n                ) {\n                    isSwiping = true;\n                    this.touchAction = 'swipe';\n                    this.manageSwipeClass();\n                    startCoords = {\n                        pageX: e.touches[0].pageX,\n                        pageY: e.touches[0].pageY,\n                    };\n                }\n            });\n\n            this.$inner.on('touchmove.lg', (e) => {\n                if (\n                    isSwiping &&\n                    this.touchAction === 'swipe' &&\n                    e.touches.length === 1\n                ) {\n                    endCoords = {\n                        pageX: e.touches[0].pageX,\n                        pageY: e.touches[0].pageY,\n                    };\n                    this.touchMove(startCoords, endCoords, e);\n                    isMoved = true;\n                }\n            });\n\n            this.$inner.on('touchend.lg', (event: TouchEvent) => {\n                if (this.touchAction === 'swipe') {\n                    if (isMoved) {\n                        isMoved = false;\n                        this.touchEnd(endCoords, startCoords, event);\n                    } else if (isSwiping) {\n                        const target = $LG(event.target);\n                        if (this.isPosterElement(target)) {\n                            this.LGel.trigger(lGEvents.posterClick);\n                        }\n                    }\n                    this.touchAction = undefined;\n                    isSwiping = false;\n                }\n            });\n        }\n    }\n\n    enableDrag(): void {\n        let startCoords: Coords = {} as Coords;\n        let endCoords: Coords = {} as Coords;\n        let isDraging = false;\n        let isMoved = false;\n        if (this.settings.enableDrag) {\n            this.outer.on('mousedown.lg', (e) => {\n                this.dragOrSwipeEnabled = true;\n                const $item = this.getSlideItem(this.index);\n                if (\n                    $LG(e.target).hasClass('lg-item') ||\n                    $item.get().contains(e.target)\n                ) {\n                    if (!this.outer.hasClass('lg-zoomed') && !this.lgBusy) {\n                        e.preventDefault();\n                        if (!this.lgBusy) {\n                            this.manageSwipeClass();\n                            startCoords = {\n                                pageX: e.pageX,\n                                pageY: e.pageY,\n                            };\n                            isDraging = true;\n\n                            // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\n                            this.outer.get().scrollLeft += 1;\n                            this.outer.get().scrollLeft -= 1;\n\n                            // *\n\n                            this.outer\n                                .removeClass('lg-grab')\n                                .addClass('lg-grabbing');\n\n                            this.LGel.trigger(lGEvents.dragStart);\n                        }\n                    }\n                }\n            });\n\n            $LG(window).on(`mousemove.lg.global${this.lgId}`, (e) => {\n                if (isDraging && this.lgOpened) {\n                    isMoved = true;\n                    endCoords = {\n                        pageX: e.pageX,\n                        pageY: e.pageY,\n                    };\n                    this.touchMove(startCoords, endCoords);\n                    this.LGel.trigger(lGEvents.dragMove);\n                }\n            });\n\n            $LG(window).on(`mouseup.lg.global${this.lgId}`, (event) => {\n                if (!this.lgOpened) {\n                    return;\n                }\n                const target = $LG(event.target);\n                if (isMoved) {\n                    isMoved = false;\n                    this.touchEnd(endCoords, startCoords, event);\n                    this.LGel.trigger(lGEvents.dragEnd);\n                } else if (this.isPosterElement(target)) {\n                    this.LGel.trigger(lGEvents.posterClick);\n                }\n\n                // Prevent execution on click\n                if (isDraging) {\n                    isDraging = false;\n                    this.outer.removeClass('lg-grabbing').addClass('lg-grab');\n                }\n            });\n        }\n    }\n\n    triggerPosterClick(): void {\n        this.$inner.on('click.lg', (event) => {\n            if (\n                !this.dragOrSwipeEnabled &&\n                this.isPosterElement($LG(event.target))\n            ) {\n                this.LGel.trigger(lGEvents.posterClick);\n            }\n        });\n    }\n\n    manageSwipeClass(): void {\n        let _touchNext = this.index + 1;\n        let _touchPrev = this.index - 1;\n        if (this.settings.loop && this.galleryItems.length > 2) {\n            if (this.index === 0) {\n                _touchPrev = this.galleryItems.length - 1;\n            } else if (this.index === this.galleryItems.length - 1) {\n                _touchNext = 0;\n            }\n        }\n\n        this.outer.find('.lg-item').removeClass('lg-next-slide lg-prev-slide');\n        if (_touchPrev > -1) {\n            this.getSlideItem(_touchPrev).addClass('lg-prev-slide');\n        }\n\n        this.getSlideItem(_touchNext).addClass('lg-next-slide');\n    }\n\n    /**\n     * Go to next slide\n     * @param {Boolean} fromTouch - true if slide function called via touch event\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  plugin.goToNextSlide();\n     * @see <a href=\"/demos/methods/\">Demo</a>\n     */\n    goToNextSlide(fromTouch?: boolean): void {\n        let _loop = this.settings.loop;\n        if (fromTouch && this.galleryItems.length < 3) {\n            _loop = false;\n        }\n\n        if (!this.lgBusy) {\n            if (this.index + 1 < this.galleryItems.length) {\n                this.index++;\n                this.LGel.trigger(lGEvents.beforeNextSlide, {\n                    index: this.index,\n                });\n                this.slide(this.index, !!fromTouch, false, 'next');\n            } else {\n                if (_loop) {\n                    this.index = 0;\n                    this.LGel.trigger(lGEvents.beforeNextSlide, {\n                        index: this.index,\n                    });\n                    this.slide(this.index, !!fromTouch, false, 'next');\n                } else if (this.settings.slideEndAnimation && !fromTouch) {\n                    this.outer.addClass('lg-right-end');\n                    setTimeout(() => {\n                        this.outer.removeClass('lg-right-end');\n                    }, 400);\n                }\n            }\n        }\n    }\n\n    /**\n     * Go to previous slides\n     * @param {Boolean} fromTouch - true if slide function called via touch event\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery({});\n     *  plugin.goToPrevSlide();\n     * @see <a href=\"/demos/methods/\">Demo</a>\n     *\n     */\n    goToPrevSlide(fromTouch?: boolean): void {\n        let _loop = this.settings.loop;\n        if (fromTouch && this.galleryItems.length < 3) {\n            _loop = false;\n        }\n\n        if (!this.lgBusy) {\n            if (this.index > 0) {\n                this.index--;\n                this.LGel.trigger(lGEvents.beforePrevSlide, {\n                    index: this.index,\n                    fromTouch,\n                });\n                this.slide(this.index, !!fromTouch, false, 'prev');\n            } else {\n                if (_loop) {\n                    this.index = this.galleryItems.length - 1;\n                    this.LGel.trigger(lGEvents.beforePrevSlide, {\n                        index: this.index,\n                        fromTouch,\n                    });\n                    this.slide(this.index, !!fromTouch, false, 'prev');\n                } else if (this.settings.slideEndAnimation && !fromTouch) {\n                    this.outer.addClass('lg-left-end');\n                    setTimeout(() => {\n                        this.outer.removeClass('lg-left-end');\n                    }, 400);\n                }\n            }\n        }\n    }\n\n    keyPress(): void {\n        $LG(window).on(`keydown.lg.global${this.lgId}`, (e) => {\n            if (\n                this.lgOpened &&\n                this.settings.escKey === true &&\n                e.keyCode === 27\n            ) {\n                e.preventDefault();\n                if (\n                    this.settings.allowMediaOverlap &&\n                    this.outer.hasClass('lg-can-toggle') &&\n                    this.outer.hasClass('lg-components-open')\n                ) {\n                    this.outer.removeClass('lg-components-open');\n                } else {\n                    this.closeGallery();\n                }\n            }\n            if (this.lgOpened && this.galleryItems.length > 1) {\n                if (e.keyCode === 37) {\n                    e.preventDefault();\n                    this.goToPrevSlide();\n                }\n\n                if (e.keyCode === 39) {\n                    e.preventDefault();\n                    this.goToNextSlide();\n                }\n            }\n        });\n    }\n\n    arrow(): void {\n        this.getElementById('lg-prev').on('click.lg', () => {\n            this.goToPrevSlide();\n        });\n        this.getElementById('lg-next').on('click.lg', () => {\n            this.goToNextSlide();\n        });\n    }\n\n    arrowDisable(index: number): void {\n        // Disable arrows if settings.hideControlOnEnd is true\n        if (!this.settings.loop && this.settings.hideControlOnEnd) {\n            const $prev = this.getElementById('lg-prev');\n            const $next = this.getElementById('lg-next');\n            if (index + 1 === this.galleryItems.length) {\n                $next.attr('disabled', 'disabled').addClass('disabled');\n            } else {\n                $next.removeAttr('disabled').removeClass('disabled');\n            }\n\n            if (index === 0) {\n                $prev.attr('disabled', 'disabled').addClass('disabled');\n            } else {\n                $prev.removeAttr('disabled').removeClass('disabled');\n            }\n        }\n    }\n\n    setTranslate(\n        $el: lgQuery,\n        xValue: number,\n        yValue: number,\n        scaleX = 1,\n        scaleY = 1,\n    ): void {\n        $el.css(\n            'transform',\n            'translate3d(' +\n                xValue +\n                'px, ' +\n                yValue +\n                'px, 0px) scale3d(' +\n                scaleX +\n                ', ' +\n                scaleY +\n                ', 1)',\n        );\n    }\n\n    mousewheel(): void {\n        let lastCall = 0;\n        this.outer.on('wheel.lg', (e) => {\n            if (!e.deltaY || this.galleryItems.length < 2) {\n                return;\n            }\n            e.preventDefault();\n            const now = new Date().getTime();\n            if (now - lastCall < 1000) {\n                return;\n            }\n            lastCall = now;\n            if (e.deltaY > 0) {\n                this.goToNextSlide();\n            } else if (e.deltaY < 0) {\n                this.goToPrevSlide();\n            }\n        });\n    }\n\n    isSlideElement(target: lgQuery): boolean {\n        return (\n            target.hasClass('lg-outer') ||\n            target.hasClass('lg-item') ||\n            target.hasClass('lg-img-wrap')\n        );\n    }\n\n    isPosterElement(target: lgQuery): boolean {\n        const playButton = this.getSlideItem(this.index)\n            .find('.lg-video-play-button')\n            .get();\n        return (\n            target.hasClass('lg-video-poster') ||\n            target.hasClass('lg-video-play-button') ||\n            (playButton && playButton.contains(target.get()))\n        );\n    }\n\n    /**\n     * Maximize minimize inline gallery.\n     * @category lGPublicMethods\n     */\n    toggleMaximize(): void {\n        this.getElementById('lg-maximize').on('click.lg', () => {\n            this.$container.toggleClass('lg-inline');\n            this.refreshOnResize();\n        });\n    }\n\n    invalidateItems(): void {\n        for (let index = 0; index < this.items.length; index++) {\n            const element = this.items[index];\n            const $element = $LG(element);\n            $element.off(`click.lgcustom-item-${$element.attr('data-lg-id')}`);\n        }\n    }\n\n    trapFocus(): void {\n        this.$container.get().focus({\n            preventScroll: true,\n        });\n        $LG(window).on(`keydown.lg.global${this.lgId}`, (e) => {\n            if (!this.lgOpened) {\n                return;\n            }\n\n            const isTabPressed = e.key === 'Tab' || e.keyCode === 9;\n            if (!isTabPressed) {\n                return;\n            }\n            const focusableEls = utils.getFocusableElements(\n                this.$container.get(),\n            );\n            const firstFocusableEl = focusableEls[0];\n            const lastFocusableEl = focusableEls[focusableEls.length - 1];\n\n            if (e.shiftKey) {\n                if (document.activeElement === firstFocusableEl) {\n                    (lastFocusableEl as HTMLElement).focus();\n                    e.preventDefault();\n                }\n            } else {\n                if (document.activeElement === lastFocusableEl) {\n                    (firstFocusableEl as HTMLElement).focus();\n                    e.preventDefault();\n                }\n            }\n        });\n    }\n\n    manageCloseGallery(): void {\n        if (!this.settings.closable) return;\n        let mousedown = false;\n        this.getElementById('lg-close').on('click.lg', () => {\n            this.closeGallery();\n        });\n\n        if (this.settings.closeOnTap) {\n            // If you drag the slide and release outside gallery gets close on chrome\n            // for preventing this check mousedown and mouseup happened on .lg-item or lg-outer\n            this.outer.on('mousedown.lg', (e) => {\n                const target = $LG(e.target);\n                if (this.isSlideElement(target)) {\n                    mousedown = true;\n                } else {\n                    mousedown = false;\n                }\n            });\n\n            this.outer.on('mousemove.lg', () => {\n                mousedown = false;\n            });\n\n            this.outer.on('mouseup.lg', (e) => {\n                const target = $LG(e.target);\n                if (this.isSlideElement(target) && mousedown) {\n                    if (!this.outer.hasClass('lg-dragging')) {\n                        this.closeGallery();\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Close lightGallery if it is opened.\n     *\n     * @description If closable is false in the settings, you need to pass true via closeGallery method to force close gallery\n     * @return returns the estimated time to close gallery completely including the close animation duration\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  plugin.closeGallery();\n     *\n     */\n    closeGallery(force?: boolean): number {\n        if (!this.lgOpened || (!this.settings.closable && !force)) {\n            return 0;\n        }\n        this.LGel.trigger(lGEvents.beforeClose);\n\n        if (this.settings.resetScrollPosition && !this.settings.hideScrollbar) {\n            $LG(window).scrollTop(this.prevScrollTop);\n        }\n\n        const currentItem = this.items[this.index];\n        let transform: string | undefined;\n        if (this.zoomFromOrigin && currentItem) {\n            const { top, bottom } = this.mediaContainerPosition;\n            const { __slideVideoInfo, poster } = this.galleryItems[this.index];\n            const imageSize = utils.getSize(\n                currentItem,\n                this.outer,\n                top + bottom,\n                __slideVideoInfo && poster && this.settings.videoMaxSize,\n            );\n            transform = utils.getTransform(\n                currentItem,\n                this.outer,\n                top,\n                bottom,\n                imageSize,\n            );\n        }\n        if (this.zoomFromOrigin && transform) {\n            this.outer.addClass('lg-closing lg-zoom-from-image');\n            this.getSlideItem(this.index)\n                .addClass('lg-start-end-progress')\n                .css(\n                    'transition-duration',\n                    this.settings.startAnimationDuration + 'ms',\n                )\n                .css('transform', transform);\n        } else {\n            this.outer.addClass('lg-hide-items');\n            // lg-zoom-from-image is used for setting the opacity to 1 if zoomFromOrigin is true\n            // If the closing item doesn't have the lg-size attribute, remove this class to avoid the closing css conflicts\n            this.outer.removeClass('lg-zoom-from-image');\n        }\n\n        // Unbind all events added by lightGallery\n        // @todo\n        //this.$el.off('.lg.tm');\n\n        this.destroyModules();\n\n        this.lGalleryOn = false;\n        this.isDummyImageRemoved = false;\n        this.zoomFromOrigin = this.settings.zoomFromOrigin;\n\n        clearTimeout(this.hideBarTimeout);\n        this.hideBarTimeout = false;\n        $LG('html').removeClass('lg-on');\n\n        this.outer.removeClass('lg-visible lg-components-open');\n\n        // Resetting opacity to 0 isd required as  vertical swipe to close function adds inline opacity.\n        this.$backdrop.removeClass('in').css('opacity', 0);\n\n        const removeTimeout =\n            this.zoomFromOrigin && transform\n                ? Math.max(\n                      this.settings.startAnimationDuration,\n                      this.settings.backdropDuration,\n                  )\n                : this.settings.backdropDuration;\n        this.$container.removeClass('lg-show-in');\n\n        // Once the closign animation is completed and gallery is invisible\n        setTimeout(() => {\n            if (this.zoomFromOrigin && transform) {\n                this.outer.removeClass('lg-zoom-from-image');\n            }\n            this.$container.removeClass('lg-show');\n\n            // Reset scrollbar\n            this.resetScrollBar();\n\n            // Need to remove inline opacity as it is used in the stylesheet as well\n            this.$backdrop\n                .removeAttr('style')\n                .css(\n                    'transition-duration',\n                    this.settings.backdropDuration + 'ms',\n                );\n\n            this.outer.removeClass(`lg-closing ${this.settings.startClass}`);\n\n            this.getSlideItem(this.index).removeClass('lg-start-end-progress');\n            this.$inner.empty();\n            if (this.lgOpened) {\n                this.LGel.trigger(lGEvents.afterClose, {\n                    instance: this,\n                });\n            }\n            if (this.$container.get()) {\n                this.$container.get().blur();\n            }\n\n            this.lgOpened = false;\n        }, removeTimeout + 100);\n        return removeTimeout + 100;\n    }\n\n    initModules(): void {\n        this.plugins.forEach((module) => {\n            try {\n                module.init();\n            } catch (err) {\n                console.warn(\n                    `lightGallery:- make sure lightGallery module is properly initiated`,\n                );\n            }\n        });\n    }\n\n    destroyModules(destroy?: true): void {\n        this.plugins.forEach((module) => {\n            try {\n                if (destroy) {\n                    module.destroy();\n                } else {\n                    module.closeGallery && module.closeGallery();\n                }\n            } catch (err) {\n                console.warn(\n                    `lightGallery:- make sure lightGallery module is properly destroyed`,\n                );\n            }\n        });\n    }\n\n    /**\n     * Refresh lightGallery with new set of children.\n     *\n     * @description This is useful to update the gallery when the child elements are changed without calling destroy method.\n     *\n     * If you are using dynamic mode, you can pass the modified array of dynamicEl as the first parameter to refresh the dynamic gallery\n     * @see <a href=\"/demos/dynamic-mode/\">Demo</a>\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  // Delete or add children, then call\n     *  plugin.refresh();\n     *\n     */\n    refresh(galleryItems?: GalleryItem[]): void {\n        if (!this.settings.dynamic) {\n            this.invalidateItems();\n        }\n        if (galleryItems) {\n            this.galleryItems = galleryItems;\n        } else {\n            this.galleryItems = this.getItems();\n        }\n        this.updateControls();\n        this.openGalleryOnItemClick();\n        this.LGel.trigger(lGEvents.updateSlides);\n    }\n\n    updateControls(): void {\n        this.addSlideVideoInfo(this.galleryItems);\n        this.updateCounterTotal();\n        this.manageSingleSlideClassName();\n    }\n\n    private destroyGallery(): void {\n        this.destroyModules(true);\n        if (!this.settings.dynamic) {\n            this.invalidateItems();\n        }\n        $LG(window).off(`.lg.global${this.lgId}`);\n        this.LGel.off('.lg');\n        this.$container.remove();\n    }\n\n    /**\n     * Destroy lightGallery.\n     * Destroy lightGallery and its plugin instances completely\n     *\n     * @description This method also calls CloseGallery function internally. Returns the time takes to completely close and destroy the instance.\n     * In case if you want to re-initialize lightGallery right after destroying it, initialize it only once the destroy process is completed.\n     * You can use refresh method most of the times.\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  plugin.destroy();\n     *\n     */\n    destroy(): number {\n        const closeTimeout = this.closeGallery(true);\n        if (closeTimeout) {\n            setTimeout(this.destroyGallery.bind(this), closeTimeout);\n        } else {\n            this.destroyGallery();\n        }\n        return closeTimeout;\n    }\n}\n","import { LightGallerySettings } from './lg-settings';\nimport { LightGallery } from './lightgallery';\n\nfunction lightGallery(\n    el: HTMLElement,\n    options?: LightGallerySettings,\n): LightGallery {\n    return new LightGallery(el, options);\n}\nexport default lightGallery;\n","/**\n * lightgallery | 2.7.1 | January 11th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n!function(t,o){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=o():\"function\"==typeof define&&define.amd?define(o):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).lgAutoplay=o()}(this,(function(){\"use strict\";var t=function(){return(t=Object.assign||function(t){for(var o,e=1,s=arguments.length;e<s;e++)for(var r in o=arguments[e])Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r]);return t}).apply(this,arguments)},o=\"lgSlideItemLoad\",e=\"lgBeforeSlide\",s=\"lgAfterSlide\",r=\"lgDragStart\",i=\"lgDragEnd\",a=\"lgAutoplay\",l=\"lgAutoplayStart\",n=\"lgAutoplayStop\",u={autoplay:!0,slideShowAutoplay:!1,slideShowInterval:5e3,progressBar:!0,forceSlideShowAutoplay:!1,autoplayControls:!0,appendAutoplayControlsTo:\".lg-toolbar\",autoplayPluginStrings:{toggleAutoplay:\"Toggle Autoplay\"}};return function(){function p(o){return this.core=o,this.settings=t(t({},u),this.core.settings),this}return p.prototype.init=function(){var t=this;this.settings.autoplay&&(this.interval=!1,this.fromAuto=!0,this.pausedOnTouchDrag=!1,this.pausedOnSlideChange=!1,this.settings.autoplayControls&&this.controls(),this.settings.progressBar&&this.core.outer.append('<div class=\"lg-progress-bar\"><div class=\"lg-progress\"></div></div>'),this.settings.slideShowAutoplay&&this.core.LGel.once(o+\".autoplay\",(function(){t.startAutoPlay()})),this.core.LGel.on(r+\".autoplay touchstart.lg.autoplay\",(function(){t.interval&&(t.stopAutoPlay(),t.pausedOnTouchDrag=!0)})),this.core.LGel.on(i+\".autoplay touchend.lg.autoplay\",(function(){!t.interval&&t.pausedOnTouchDrag&&(t.startAutoPlay(),t.pausedOnTouchDrag=!1)})),this.core.LGel.on(e+\".autoplay\",(function(){t.showProgressBar(),!t.fromAuto&&t.interval?(t.stopAutoPlay(),t.pausedOnSlideChange=!0):t.pausedOnSlideChange=!1,t.fromAuto=!1})),this.core.LGel.on(s+\".autoplay\",(function(){t.pausedOnSlideChange&&!t.interval&&t.settings.forceSlideShowAutoplay&&(t.startAutoPlay(),t.pausedOnSlideChange=!1)})),this.showProgressBar())},p.prototype.showProgressBar=function(){var t=this;if(this.settings.progressBar&&this.fromAuto){var o=this.core.outer.find(\".lg-progress-bar\"),e=this.core.outer.find(\".lg-progress\");this.interval&&(e.removeAttr(\"style\"),o.removeClass(\"lg-start\"),setTimeout((function(){e.css(\"transition\",\"width \"+(t.core.settings.speed+t.settings.slideShowInterval)+\"ms ease 0s\"),o.addClass(\"lg-start\")}),20))}},p.prototype.controls=function(){var t=this,o='<button aria-label=\"'+this.settings.autoplayPluginStrings.toggleAutoplay+'\" type=\"button\" class=\"lg-autoplay-button lg-icon\"></button>';this.core.outer.find(this.settings.appendAutoplayControlsTo).append(o),this.core.outer.find(\".lg-autoplay-button\").first().on(\"click.lg.autoplay\",(function(){t.core.outer.hasClass(\"lg-show-autoplay\")?t.stopAutoPlay():t.interval||t.startAutoPlay()}))},p.prototype.startAutoPlay=function(){var t=this;this.core.outer.find(\".lg-progress\").css(\"transition\",\"width \"+(this.core.settings.speed+this.settings.slideShowInterval)+\"ms ease 0s\"),this.core.outer.addClass(\"lg-show-autoplay\"),this.core.outer.find(\".lg-progress-bar\").addClass(\"lg-start\"),this.core.LGel.trigger(l,{index:this.core.index}),this.interval=setInterval((function(){t.core.index+1<t.core.galleryItems.length?t.core.index++:t.core.index=0,t.core.LGel.trigger(a,{index:t.core.index}),t.fromAuto=!0,t.core.slide(t.core.index,!1,!1,\"next\")}),this.core.settings.speed+this.settings.slideShowInterval)},p.prototype.stopAutoPlay=function(){this.interval&&(this.core.LGel.trigger(n,{index:this.core.index}),this.core.outer.find(\".lg-progress\").removeAttr(\"style\"),this.core.outer.removeClass(\"lg-show-autoplay\"),this.core.outer.find(\".lg-progress-bar\").removeClass(\"lg-start\")),clearInterval(this.interval),this.interval=!1},p.prototype.closeGallery=function(){this.stopAutoPlay()},p.prototype.destroy=function(){this.settings.autoplay&&this.core.outer.find(\".lg-progress-bar\").remove(),this.core.LGel.off(\".lg.autoplay\"),this.core.LGel.off(\".autoplay\")},p}()}));\n","/**\n * lightgallery | 2.7.1 | January 11th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).lgThumbnail=e()}(this,(function(){\"use strict\";var t=function(){return(t=Object.assign||function(t){for(var e,i=1,s=arguments.length;i<s;i++)for(var h in e=arguments[i])Object.prototype.hasOwnProperty.call(e,h)&&(t[h]=e[h]);return t}).apply(this,arguments)},e={thumbnail:!0,animateThumb:!0,currentPagerPosition:\"middle\",alignThumbnails:\"middle\",thumbWidth:100,thumbHeight:\"80px\",thumbMargin:5,appendThumbnailsTo:\".lg-components\",toggleThumb:!1,enableThumbDrag:!0,enableThumbSwipe:!0,thumbnailSwipeThreshold:10,loadYouTubeThumbnail:!0,youTubeThumbSize:1,thumbnailPluginStrings:{toggleThumbnails:\"Toggle thumbnails\"}},i=\"lgContainerResize\",s=\"lgUpdateSlides\",h=\"lgBeforeOpen\",n=\"lgBeforeSlide\";return function(){function o(t,e){return this.thumbOuterWidth=0,this.thumbTotalWidth=0,this.translateX=0,this.thumbClickable=!1,this.core=t,this.$LG=e,this}return o.prototype.init=function(){this.settings=t(t({},e),this.core.settings),this.thumbOuterWidth=0,this.thumbTotalWidth=this.core.galleryItems.length*(this.settings.thumbWidth+this.settings.thumbMargin),this.translateX=0,this.setAnimateThumbStyles(),this.core.settings.allowMediaOverlap||(this.settings.toggleThumb=!1),this.settings.thumbnail&&(this.build(),this.settings.animateThumb?(this.settings.enableThumbDrag&&this.enableThumbDrag(),this.settings.enableThumbSwipe&&this.enableThumbSwipe(),this.thumbClickable=!1):this.thumbClickable=!0,this.toggleThumbBar(),this.thumbKeyPress())},o.prototype.build=function(){var t=this;this.setThumbMarkup(),this.manageActiveClassOnSlideChange(),this.$lgThumb.first().on(\"click.lg touchend.lg\",(function(e){var i=t.$LG(e.target);i.hasAttribute(\"data-lg-item-id\")&&setTimeout((function(){if(t.thumbClickable&&!t.core.lgBusy){var e=parseInt(i.attr(\"data-lg-item-id\"));t.core.slide(e,!1,!0,!1)}}),50)})),this.core.LGel.on(n+\".thumb\",(function(e){var i=e.detail.index;t.animateThumb(i)})),this.core.LGel.on(h+\".thumb\",(function(){t.thumbOuterWidth=t.core.outer.get().offsetWidth})),this.core.LGel.on(s+\".thumb\",(function(){t.rebuildThumbnails()})),this.core.LGel.on(i+\".thumb\",(function(){t.core.lgOpened&&setTimeout((function(){t.thumbOuterWidth=t.core.outer.get().offsetWidth,t.animateThumb(t.core.index),t.thumbOuterWidth=t.core.outer.get().offsetWidth}),50)}))},o.prototype.setThumbMarkup=function(){var t=\"lg-thumb-outer \";this.settings.alignThumbnails&&(t+=\"lg-thumb-align-\"+this.settings.alignThumbnails);var e='<div class=\"'+t+'\">\\n        <div class=\"lg-thumb lg-group\">\\n        </div>\\n        </div>';this.core.outer.addClass(\"lg-has-thumb\"),\".lg-components\"===this.settings.appendThumbnailsTo?this.core.$lgComponents.append(e):this.core.outer.append(e),this.$thumbOuter=this.core.outer.find(\".lg-thumb-outer\").first(),this.$lgThumb=this.core.outer.find(\".lg-thumb\").first(),this.settings.animateThumb&&this.core.outer.find(\".lg-thumb\").css(\"transition-duration\",this.core.settings.speed+\"ms\").css(\"width\",this.thumbTotalWidth+\"px\").css(\"position\",\"relative\"),this.setThumbItemHtml(this.core.galleryItems)},o.prototype.enableThumbDrag=function(){var t=this,e={cords:{startX:0,endX:0},isMoved:!1,newTranslateX:0,startTime:new Date,endTime:new Date,touchMoveTime:0},i=!1;this.$thumbOuter.addClass(\"lg-grab\"),this.core.outer.find(\".lg-thumb\").first().on(\"mousedown.lg.thumb\",(function(s){t.thumbTotalWidth>t.thumbOuterWidth&&(s.preventDefault(),e.cords.startX=s.pageX,e.startTime=new Date,t.thumbClickable=!1,i=!0,t.core.outer.get().scrollLeft+=1,t.core.outer.get().scrollLeft-=1,t.$thumbOuter.removeClass(\"lg-grab\").addClass(\"lg-grabbing\"))})),this.$LG(window).on(\"mousemove.lg.thumb.global\"+this.core.lgId,(function(s){t.core.lgOpened&&i&&(e.cords.endX=s.pageX,e=t.onThumbTouchMove(e))})),this.$LG(window).on(\"mouseup.lg.thumb.global\"+this.core.lgId,(function(){t.core.lgOpened&&(e.isMoved?e=t.onThumbTouchEnd(e):t.thumbClickable=!0,i&&(i=!1,t.$thumbOuter.removeClass(\"lg-grabbing\").addClass(\"lg-grab\")))}))},o.prototype.enableThumbSwipe=function(){var t=this,e={cords:{startX:0,endX:0},isMoved:!1,newTranslateX:0,startTime:new Date,endTime:new Date,touchMoveTime:0};this.$lgThumb.on(\"touchstart.lg\",(function(i){t.thumbTotalWidth>t.thumbOuterWidth&&(i.preventDefault(),e.cords.startX=i.targetTouches[0].pageX,t.thumbClickable=!1,e.startTime=new Date)})),this.$lgThumb.on(\"touchmove.lg\",(function(i){t.thumbTotalWidth>t.thumbOuterWidth&&(i.preventDefault(),e.cords.endX=i.targetTouches[0].pageX,e=t.onThumbTouchMove(e))})),this.$lgThumb.on(\"touchend.lg\",(function(){e.isMoved?e=t.onThumbTouchEnd(e):t.thumbClickable=!0}))},o.prototype.rebuildThumbnails=function(){var t=this;this.$thumbOuter.addClass(\"lg-rebuilding-thumbnails\"),setTimeout((function(){t.thumbTotalWidth=t.core.galleryItems.length*(t.settings.thumbWidth+t.settings.thumbMargin),t.$lgThumb.css(\"width\",t.thumbTotalWidth+\"px\"),t.$lgThumb.empty(),t.setThumbItemHtml(t.core.galleryItems),t.animateThumb(t.core.index)}),50),setTimeout((function(){t.$thumbOuter.removeClass(\"lg-rebuilding-thumbnails\")}),200)},o.prototype.setTranslate=function(t){this.$lgThumb.css(\"transform\",\"translate3d(-\"+t+\"px, 0px, 0px)\")},o.prototype.getPossibleTransformX=function(t){return t>this.thumbTotalWidth-this.thumbOuterWidth&&(t=this.thumbTotalWidth-this.thumbOuterWidth),t<0&&(t=0),t},o.prototype.animateThumb=function(t){if(this.$lgThumb.css(\"transition-duration\",this.core.settings.speed+\"ms\"),this.settings.animateThumb){var e=0;switch(this.settings.currentPagerPosition){case\"left\":e=0;break;case\"middle\":e=this.thumbOuterWidth/2-this.settings.thumbWidth/2;break;case\"right\":e=this.thumbOuterWidth-this.settings.thumbWidth}this.translateX=(this.settings.thumbWidth+this.settings.thumbMargin)*t-1-e,this.translateX>this.thumbTotalWidth-this.thumbOuterWidth&&(this.translateX=this.thumbTotalWidth-this.thumbOuterWidth),this.translateX<0&&(this.translateX=0),this.setTranslate(this.translateX)}},o.prototype.onThumbTouchMove=function(t){return t.newTranslateX=this.translateX,t.isMoved=!0,t.touchMoveTime=(new Date).valueOf(),t.newTranslateX-=t.cords.endX-t.cords.startX,t.newTranslateX=this.getPossibleTransformX(t.newTranslateX),this.setTranslate(t.newTranslateX),this.$thumbOuter.addClass(\"lg-dragging\"),t},o.prototype.onThumbTouchEnd=function(t){t.isMoved=!1,t.endTime=new Date,this.$thumbOuter.removeClass(\"lg-dragging\");var e=t.endTime.valueOf()-t.startTime.valueOf(),i=t.cords.endX-t.cords.startX,s=Math.abs(i)/e;return s>.15&&t.endTime.valueOf()-t.touchMoveTime<30?((s+=1)>2&&(s+=1),s+=s*(Math.abs(i)/this.thumbOuterWidth),this.$lgThumb.css(\"transition-duration\",Math.min(s-1,2)+\"settings\"),i*=s,this.translateX=this.getPossibleTransformX(this.translateX-i),this.setTranslate(this.translateX)):this.translateX=t.newTranslateX,Math.abs(t.cords.endX-t.cords.startX)<this.settings.thumbnailSwipeThreshold&&(this.thumbClickable=!0),t},o.prototype.getThumbHtml=function(t,e){var i,s=this.core.galleryItems[e].__slideVideoInfo||{};return i=s.youtube&&this.settings.loadYouTubeThumbnail?\"//img.youtube.com/vi/\"+s.youtube[1]+\"/\"+this.settings.youTubeThumbSize+\".jpg\":t,'<div data-lg-item-id=\"'+e+'\" class=\"lg-thumb-item '+(e===this.core.index?\" active\":\"\")+'\" \\n        style=\"width:'+this.settings.thumbWidth+\"px; height: \"+this.settings.thumbHeight+\";\\n            margin-right: \"+this.settings.thumbMargin+'px;\">\\n            <img data-lg-item-id=\"'+e+'\" src=\"'+i+'\" />\\n        </div>'},o.prototype.getThumbItemHtml=function(t){for(var e=\"\",i=0;i<t.length;i++)e+=this.getThumbHtml(t[i].thumb,i);return e},o.prototype.setThumbItemHtml=function(t){var e=this.getThumbItemHtml(t);this.$lgThumb.html(e)},o.prototype.setAnimateThumbStyles=function(){this.settings.animateThumb&&this.core.outer.addClass(\"lg-animate-thumb\")},o.prototype.manageActiveClassOnSlideChange=function(){var t=this;this.core.LGel.on(n+\".thumb\",(function(e){var i=t.core.outer.find(\".lg-thumb-item\"),s=e.detail.index;i.removeClass(\"active\"),i.eq(s).addClass(\"active\")}))},o.prototype.toggleThumbBar=function(){var t=this;this.settings.toggleThumb&&(this.core.outer.addClass(\"lg-can-toggle\"),this.core.$toolbar.append('<button type=\"button\" aria-label=\"'+this.settings.thumbnailPluginStrings.toggleThumbnails+'\" class=\"lg-toggle-thumb lg-icon\"></button>'),this.core.outer.find(\".lg-toggle-thumb\").first().on(\"click.lg\",(function(){t.core.outer.toggleClass(\"lg-components-open\")})))},o.prototype.thumbKeyPress=function(){var t=this;this.$LG(window).on(\"keydown.lg.thumb.global\"+this.core.lgId,(function(e){t.core.lgOpened&&t.settings.toggleThumb&&(38===e.keyCode?(e.preventDefault(),t.core.outer.addClass(\"lg-components-open\")):40===e.keyCode&&(e.preventDefault(),t.core.outer.removeClass(\"lg-components-open\")))}))},o.prototype.destroy=function(){this.settings.thumbnail&&(this.$LG(window).off(\".lg.thumb.global\"+this.core.lgId),this.core.LGel.off(\".lg.thumb\"),this.core.LGel.off(\".thumb\"),this.$thumbOuter.remove(),this.core.outer.removeClass(\"lg-has-thumb\"))},o}()}));\n","[\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-29-47.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-29-47.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/17:22\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-06.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-06.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/17:13\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-12.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-12.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/17:29\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-16.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-16.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/17:46\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-20.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-20.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/03/01/17:25\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-24.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-24.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/16:28\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-39.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-39.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/17:20\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-42.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-42.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/17:31\"\r\n  }\r\n]\r\n","// const Handlebars = require('handlebars');\r\nimport lightGallery from 'lightgallery';\r\nimport Autoplay from '../plugins/autoplay/lg-autoplay.min';\r\nimport Thumbnail from '../plugins/thumbnail/lg-thumbnail.min';\r\nimport DynemicGallaryEl from './source/DynamicMainGallaryEl.json';\r\nconst lgContainer = document.getElementById('inline-gallery-container');\r\nconst inlineGallery = lightGallery(lgContainer, {\r\n  container: lgContainer,\r\n  dynamic: true,\r\n\r\n  hash: false,\r\n\r\n  closeOnTap: true,\r\n\r\n  escKey: true,\r\n\r\n  closable: false,\r\n\r\n  showMaximizeIcon: true,\r\n\r\n  appendSubHtmlTo: '.lg-item',\r\n\r\n  slideShowAutoplay: true,\r\n\r\n  slideDelay: 0,\r\n  plugins: [Autoplay, Thumbnail],\r\n  controls: true,\r\n  dynamicEl: [...CreateDynemicEl()],\r\n});\r\nconsole.log(DynemicGallaryEl);\r\ninlineGallery.openGallery();\r\n\r\nfunction SortElForDate() {\r\n  const arr = DynemicGallaryEl;\r\n  return arr.sort((a, b) => {\r\n    return new Date(b.date) - new Date(a.date);\r\n  });\r\n}\r\nconsole.log(SortElForDate());\r\nfunction CreateDynemicEl() {\r\n  return SortElForDate().map(el => {\r\n    let arr = el;\r\n\r\n    arr.subHtml = `<div class=\"lightGallery-captions\">\r\n                <h4>${arr.header}</h4>\r\n                <p> ${arr.date}</p>\r\n            </div>`;\r\n    arr.src = `https://raw.githubusercontent.com/vaaleerkiin/Dog__Blog/main/src/${arr.src}`;\r\n    arr.thumb = `https://raw.githubusercontent.com/vaaleerkiin/Dog__Blog/main/src/${arr.thumb}`;\r\n    delete arr.header;\r\n    delete arr.description;\r\n    delete arr.date;\r\n\r\n    return arr;\r\n  });\r\n}\r\n"],"names":["$6442e51d8b52aaf7$var$refs","openMenuBtn","document","querySelector","MenuBtnaboutMe","MenuBtnSoc","MenuBtnContact","menu","$6442e51d8b52aaf7$var$toggleModal","body","classList","toggle","addEventListener","$ea1461f67c62ff81$var$LangArr","lng__logo","ua","en","lng__aboutMe__nav","lng__news__nav","lng__contact__nav","lng__aboutMe__menu","lng__news__menu","lng__contact__menu","lng__heroTitle","lng__heroText","lng__inform__title","$ea1461f67c62ff81$var$refs","navBtnEn","navBtnUa","menuBtnEn","menuBtnUa","allLang","$ea1461f67c62ff81$var$changeURLLang","lang","console","log","location","href","window","pathname","reload","hash","substring","includes","key","innerHTML","$ea1461f67c62ff81$var$changeWebLang","s","i","n","arguments","length","p","Object","prototype","hasOwnProperty","call","t","$39ec6716ddc9161a$var$__assign","apply","this","$39ec6716ddc9161a$var$lGEvents","$39ec6716ddc9161a$var$lightGalleryCoreSettings","mode","easing","speed","licenseKey","height","width","addClass","startClass","backdropDuration","container","startAnimationDuration","zoomFromOrigin","hideBarsDelay","showBarsAfter","slideDelay","supportLegacyBrowser","allowMediaOverlap","videoMaxSize","loadYouTubePoster","defaultCaptionHeight","ariaLabelledby","ariaDescribedby","resetScrollPosition","hideScrollbar","closable","swipeToClose","closeOnTap","showCloseIcon","showMaximizeIcon","loop","escKey","keyPress","trapFocus","controls","slideEndAnimation","hideControlOnEnd","mousewheel","getCaptionFromTitleOrAlt","appendSubHtmlTo","subHtmlSelectorRelative","preload","numberOfSlideItemsInDom","selector","selectWithin","nextHtml","prevHtml","iframeMaxHeight","download","extraProps","exThumbImage","isMobile","undefined","playVideo","lgQuery1","cssVenderPrefixes","_getSelector","firstElement","_getFirstEl","generateUUID","replace","c","r","Math","random","toString","context","querySelectorAll","_each","func","forEach","_setCssVendorPrefix","el","cssProperty","value","property","group1","toUpperCase","indexOf","style","charAt","toLowerCase","slice","isEventMatched","event","eventName","eventNamespace","split","filter","e","every","attr","getAttribute","setAttribute","find","$39ec6716ddc9161a$var$$LG","first","eq","index","parent","parentElement","get","removeAttr","attributes","attrs","wrap","className","wrapper","createElement","parentNode","removeChild","appendChild","classNames","add","removeClass","remove","hasClass","contains","hasAttribute","attribute","toggleClass","css","_this","on","events","listener","Array","isArray","eventListeners","push","once","off","keys","removeEventListener","trigger","detail","customEvent","CustomEvent","dispatchEvent","load","url","fetch","then","res","text","html","append","insertAdjacentHTML","prepend","empty","scrollTop","documentElement","pageYOffset","scrollLeft","pageXOffset","left","top","bodyMarginLeft","marginLeft","rect","parseFloat","currentStyle","getComputedStyle","clientWidth","paddingLeft","paddingRight","clientHeight","paddingTop","paddingBottom","params","bubbles","cancelable","evt","createEvent","initCustomEvent","Element","matches","msMatchesSelector","webkitMatchesSelector","$39ec6716ddc9161a$var$lgQuery","$39ec6716ddc9161a$var$defaultDynamicOptions","g","spacing","defaultLgSize","lgSize","isResponsiveSizes","wWidth","innerWidth","size_1","parseInt","size","cWidth","cHeight","maxWidth","min","maxHeight","ratio","bottom","imageSize","LGel","containerRect","getBoundingClientRect","elWidth","offset","elStyle","borderLeft","wHeight","elHeight","borderTop","x","y","iframeWidth","iframeHeight","iframeMaxWidth","src","iframeTitle","altAttr","srcset","sizes","sources","imgMarkup","sourceTag","JSON","parse","map","source","srcItms","_src","splice","rsSrc","rsWidth","j","img","naturalWidth","_poster","dummyImg","videoContStyle","playVideoString","_isVideo","youtube","vimeo","elements","element","display","visibility","items","dynamicElements","il","k","a","jl","$39ec6716ddc9161a$var$__spreadArrays","item","specified","dynamicAttr","$39ec6716ddc9161a$var$convertToData","name","label","availableDynamicOptions","dynamicEl","currentItem","alt","title","thumb","subHtml","test","navigator","userAgent","isHTML5VIdeo","error","match","wistia","$39ec6716ddc9161a$var$LightGallery","lgOpened","plugins","lGalleryOn","lgBusy","currentItemsInDom","prevScrollTop","dragOrSwipeEnabled","mediaContainerPosition","$39ec6716ddc9161a$var$lgId","lgId","generateSettings","options","buildModules","settings","dynamic","galleryItems","getItems","normalizeSettings","init","validateLicense","$39ec6716ddc9161a$var$utils","mobileSettings","addSlideVideoInfo","buildStructure","instance","setTimeout","enableDrag","enableSwipe","triggerPosterClick","arrow","openGalleryOnItemClick","_loop_1","this_1","$element","uuid","preventDefault","currentItemIndex","openGallery","index1","LightGallery1","plugin","warn","getSlideItem","getSlideItemId","getIdName","id","getElementById","manageSingleSlideClassName","outer","$container","subHtmlCont","strings","addClasses","closeIcon","maximizeIcon","template","containerClassName","$lgComponents","$backdrop","$inner","$content","$toolbar","outerClassNames","counter","refreshOnResize","toggleMaximize","initModules","__slideVideoInfo","getMediaContainerPosition","_a","top_1","currentImageSize","isDummyImageRemoved","imgStyle","resizeVideoSlide","getVideoContStyle","lgVideoStyle","updateSlides","currentSrc","updateControls","_index","some","galleryItem","itemIndex","organizeSlideItems","closeGallery","children","shouldHideScrollbar","bodyPaddingRight","bodyRect","scrollbarWidth","resetScrollBar","itemsToBeInsertedToDom","getItemsToBeInsertedToDom","addHtml","transform","setMediaContainerPosition","currentSlide_1","slide","captionHeight","thumbContainer","hideBars","clearTimeout","hideBarTimeout","initPictureFill","$img","picturefill","counterHtml","appendCounterTo","subHtmlUrl","fL","currentSlide","loadContent","getDummyImgStyles","getDummyImageContent","$currentSlide","$currentItem","_dummyImgSrc","setImgMarkup","currentGalleryItem","onSlideObjectLoad","$slide","isHTML5VideoWithoutPoster","onLoad","onError","mediaObject","triggerSlideItemLoad","delay","isFirstSlide","_speed","getSlideType","poster","video","rec","_html5Video","responsive","srcDyItms","videoInfo","iframe","top_2","videoSize","markup","html5Video","hasPoster","onLgObjectLoad","html5","loadContentOnFirstSlideLoad","isFirstSlideWithZoomAnimation","index2","prevIndex","numberOfItems","possibleNumberOfItems","idx","numberOfExistingItems","prevIndexItem","getPreviousSlideIndex","currentItemId","setDownloadValue","$download","downloadUrl","makeSlideAnimation","direction","currentSlideItem","previousSlideItem","fromTouch","fromThumb","numberOfGalleryItems","previousSlideItem_1","top_3","touchPrev","touchNext","touchMove","startCoords","endCoords","pageX","pageY","allowSwipe","abs","distanceX","swipeDirection","distanceY","offsetWidth","gutter","setTranslate","opacity","innerHeight","scale","touchEnd","distance","triggerClick","distanceAbs","swipeThreshold","goToNextSlide","goToPrevSlide","isPosterElement","target","$item","touches","isSwiping","touchAction","manageSwipeClass","isMoved","isDraging","_touchNext","_touchPrev","_loop","keyCode","arrowDisable","$prev","$next","$el","xValue","yValue","scaleX","scaleY","lastCall","deltaY","now","Date","getTime","isSlideElement","t1","o1","e1","s1","r1","l","u","assign","o","autoplay","slideShowAutoplay","slideShowInterval","progressBar","forceSlideShowAutoplay","autoplayControls","appendAutoplayControlsTo","autoplayPluginStrings","toggleAutoplay","$a431d9a043622abe$exports","core","interval","fromAuto","pausedOnTouchDrag","pausedOnSlideChange","startAutoPlay","stopAutoPlay","showProgressBar","setInterval","clearInterval","destroy","$7b3ea9b1eee17663$exports","h","thumbnail","animateThumb","currentPagerPosition","alignThumbnails","thumbWidth","thumbHeight","thumbMargin","appendThumbnailsTo","toggleThumb","enableThumbDrag","enableThumbSwipe","thumbnailSwipeThreshold","loadYouTubeThumbnail","youTubeThumbSize","thumbnailPluginStrings","toggleThumbnails","i1","h1","thumbOuterWidth","thumbTotalWidth","translateX","thumbClickable","$LG","setAnimateThumbStyles","build","toggleThumbBar","thumbKeyPress","setThumbMarkup","manageActiveClassOnSlideChange","$lgThumb","e2","rebuildThumbnails","$thumbOuter","setThumbItemHtml","cords","startX","endX","newTranslateX","startTime","endTime","touchMoveTime","onThumbTouchMove","onThumbTouchEnd","targetTouches","getPossibleTransformX","valueOf","getThumbHtml","getThumbItemHtml","$c9fd14b9358a5306$exports","$db1d012c0cc07074$var$lgContainer","$db1d012c0cc07074$var$inlineGallery","$parcel$interopDefault","$db1d012c0cc07074$var$SortElForDate","arr","header","date","description","sort","b"],"version":3,"file":"index.7bfcb3bb.js.map"}