{"mappings":"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","sources":["node_modules/src/lg-events.ts","node_modules/src/lg-settings.ts","node_modules/src/lgQuery.ts","node_modules/src/lg-utils.ts","node_modules/src/lightgallery.ts","src/plugins/autoplay/lg-autoplay.min.js","src/plugins/thumbnail/lg-thumbnail.min.js","src/js/source/DynamicMainGallaryEl.json","src/js/main-gallary.js","node_modules/src/index.ts","src/js/translate.js","src/js/burger-menu.js"],"sourcesContent":["import { LightGallery } from './lightgallery';\nimport { VideoSource } from './plugins/video/types';\n\n/**\n * List of lightGallery events\n * All events should be documented here\n * Below interfaces are used to build the website documentations\n * */\nexport const lGEvents: {\n    [key: string]: string;\n} = {\n    afterAppendSlide: 'lgAfterAppendSlide',\n    init: 'lgInit',\n    hasVideo: 'lgHasVideo',\n    containerResize: 'lgContainerResize',\n    updateSlides: 'lgUpdateSlides',\n    afterAppendSubHtml: 'lgAfterAppendSubHtml',\n    beforeOpen: 'lgBeforeOpen',\n    afterOpen: 'lgAfterOpen',\n    slideItemLoad: 'lgSlideItemLoad',\n    beforeSlide: 'lgBeforeSlide',\n    afterSlide: 'lgAfterSlide',\n    posterClick: 'lgPosterClick',\n    dragStart: 'lgDragStart',\n    dragMove: 'lgDragMove',\n    dragEnd: 'lgDragEnd',\n    beforeNextSlide: 'lgBeforeNextSlide',\n    beforePrevSlide: 'lgBeforePrevSlide',\n    beforeClose: 'lgBeforeClose',\n    afterClose: 'lgAfterClose',\n    rotateLeft: 'lgRotateLeft',\n    rotateRight: 'lgRotateRight',\n    flipHorizontal: 'lgFlipHorizontal',\n    flipVertical: 'lgFlipVertical',\n    autoplay: 'lgAutoplay',\n    autoplayStart: 'lgAutoplayStart',\n    autoplayStop: 'lgAutoplayStop',\n};\n\n// Follow the below format for the event documentation\n// @method is the method name when event is used with Angular/React components\n\n/**\n * Fired only once when lightGallery is initialized\n * @name lgInit\n * @method onInit\n * @example\n *   const lg = document.getElementById('custom-events-demo');\n *   // Perform any action on lightGallery initialization.\n *   // Init event returns the plugin instance that can be used to call any lightGalley public method\n *   let pluginInstance = null;\n *   lg.addEventListener('lgInit', (event) => {\n *      pluginInstance = event.detail.instance;\n *   });\n *   lightGallery(lg);\n * @see <a href=\"/docs/methods\">Methods<a>\n */\nexport interface InitDetail {\n    /**\n     * lightGallery plugin instance\n     */\n    instance: LightGallery;\n}\n\n/**\n * Fired when the slide content has been inserted into it's slide container.\n * @name lgAfterAppendSlide\n * @method onAfterAppendSlide\n */\nexport interface AfterAppendSlideEventDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired immediately before opening the gallery\n * @name lgBeforeOpen\n * @method onBeforeOpen\n */\nexport interface BeforeOpenDetail {}\n\n/**\n * Fired immediately after opening the gallery\n * @name lgAfterOpen\n * @method onAfterOpen\n */\nexport interface AfterOpenDetail {}\n\n/**\n * Fired once the media inside the slide has been completely loaded .\n * @name lgSlideItemLoad\n * @method onSlideItemLoad\n */\nexport interface SlideItemLoadDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * For the first slide, lightGallery adds some delay for displaying the loaded slide item.\n     * This delay is required for the transition effect when the slide item is displayed\n     * Respect the delay when you use this event\n     */\n    delay: number;\n\n    // Will be true for the first slide\n    isFirstSlide: boolean;\n}\n\n/**\n * Fired immediately before each slide transition.\n * @name lgBeforeSlide\n * @method onBeforeSlide\n * @example\n *   const lg = document.getElementById('custom-events-demo');\n *   // Perform any action before each slide transition\n *   lg.addEventListener('lgBeforeSlide', (event) => {\n *       const { index, prevIndex } = event.detail;\n *       alert(index, prevIndex);\n *   });\n *   lightGallery(lg);\n */\nexport interface BeforeSlideDetail {\n    /**\n     * Index of the previous slide\n     */\n    prevIndex: number;\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n    /**\n     * true if slide function called via thumbnail click\n     */\n    fromThumb: boolean;\n}\n\n/**\n * Fired immediately after each slide transition.\n * @name lgAfterSlide\n * @method onAfterSlide\n */\nexport interface AfterSlideDetail {\n    /**\n     * Index of the previous slide\n     */\n    prevIndex: number;\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n    /**\n     * true if slide function called via thumbnail click\n     */\n    fromThumb: boolean;\n}\n\n/**\n * Fired when the video poster is clicked.\n * @name lgPosterClick\n * @method onPosterClick\n */\nexport interface PosterClickDetail {}\n\n/**\n * Fired when the drag event to move to different slide starts.\n * @name lgDragStart\n * @method onDragStart\n */\nexport interface DragStartDetail {}\n\n/**\n * Fired periodically during the drag operation.\n * @name lgDragMove\n * @method onDragMove\n */\nexport interface DragMoveDetail {}\n\n/**\n * Fired when the user has finished the drag operation\n * @name lgDragEnd\n * @method onDragEnd\n */\nexport interface DragEndDetail {}\n\n/**\n * Fired immediately before the start of the close process.\n * @name lgBeforeClose\n * @method onBeforeClose\n */\nexport interface BeforeCloseDetail {}\n\n/**\n * Fired immediately once lightGallery is closed.\n * @name lgAfterClose\n * @method onAfterClose\n */\nexport interface AfterCloseDetail {\n    /**\n     * lightGallery plugin instance\n     */\n    instance: LightGallery;\n}\n\n/**\n * Fired immediately before each \"next\" slide transition\n * @name lgBeforeNextSlide\n * @method onBeforeNextSlide\n */\nexport interface BeforeNextSlideDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n}\n\n/**\n * Fired immediately before each \"prev\" slide transition\n * @name lgBeforePrevSlide\n * @method onBeforePrevSlide\n */\nexport interface BeforePrevSlideDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n    /**\n     * true if slide function called via touch event or mouse drag\n     */\n    fromTouch: boolean;\n}\n\n/**\n * Fired when the sub-html content (ex : title/ description) has been appended into the slide.\n * @name lgAfterAppendSubHtml\n * @method onAfterAppendSubHtml\n */\nexport interface AfterAppendSubHtmlDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the lightGallery container has been resized.\n * @name lgContainerResize\n * @method onContainerResize\n */\nexport interface ContainerResizeDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when lightGallery detects video slide\n * @name lgHasVideo\n * @method onHasVideo\n */\nexport interface HasVideoDetail {\n    /**\n     * Index of the slide,\n     */\n    index: number;\n    /**\n     * Video source\n     */\n    src: string;\n    /**\n     * HTML5 video source if available\n     * <p>\n       HTML5 video source = source: {\n            src: string;\n            type: string;\n        }[];\n        attributes: HTMLVideoElement;\n     * </p>\n     */\n    html5Video: VideoSource;\n    /**\n     * True if video has poster\n     */\n    hasPoster: boolean;\n}\n\n/**\n * Fired when the image is rotated in anticlockwise direction\n * @name lgRotateLeft\n * @method onRotateLeft\n */\nexport interface RotateLeftDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is rotated in clockwise direction\n * @name lgRotateRight\n * @method onRotateRight\n */\nexport interface RotateRightDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is flipped horizontally\n * @name lgFlipHorizontal\n * @method onFlipHorizontal\n */\nexport interface FlipHorizontalDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n\n/**\n * Fired when the image is flipped vertically\n * @name lgFlipVertical\n * @method onFlipVertical\n */\nexport interface FlipVerticalDetail {\n    /**\n     * Index of the slide\n     */\n    index: number;\n}\n","import { GalleryItem } from './lg-utils';\nimport { LgQuery } from './lgQuery';\nimport { LightGallery } from './lightgallery';\nimport { AutoplaySettings } from './plugins/autoplay/lg-autoplay-settings';\nimport { CommentSettings } from './plugins/comment/lg-comment-settings';\nimport { FullscreenSettings } from './plugins/fullscreen/lg-fullscreen-settings';\nimport { HashSettings } from './plugins/hash/lg-hash-settings';\nimport { PagerSettings } from './plugins/pager/lg-pager-settings';\nimport { RotateSettings } from './plugins/rotate/lg-rotate-settings';\nimport { ShareSettings } from './plugins/share/lg-share-settings';\nimport { ThumbnailsSettings } from './plugins/thumbnail/lg-thumbnail-settings';\nimport { VideoSettings } from './plugins/video/lg-video-settings';\nimport { ZoomSettings } from './plugins/zoom/lg-zoom-settings';\n\ntype LightGalleryCoreMobileSettings = Exclude<\n    LightGalleryCoreSettings,\n    'mobileSettings'\n>;\n\n// @todo use separate mobile settings for plugins\nexport interface MobileSettings\n    extends LightGalleryCoreMobileSettings,\n        Partial<ZoomSettings>,\n        Partial<ThumbnailsSettings>,\n        Partial<VideoSettings>,\n        Partial<AutoplaySettings>,\n        Partial<CommentSettings>,\n        Partial<FullscreenSettings>,\n        Partial<HashSettings>,\n        Partial<PagerSettings>,\n        Partial<RotateSettings>,\n        Partial<ShareSettings> {}\n\nexport interface LightGalleryCoreStrings {\n    closeGallery: string;\n    toggleMaximize: string;\n    previousSlide: string;\n    nextSlide: string;\n    download: string;\n    playVideo: string;\n}\n\nexport type LightGalleryAllSettings = LightGalleryCoreSettings &\n    ZoomSettings &\n    ThumbnailsSettings &\n    VideoSettings &\n    AutoplaySettings &\n    CommentSettings &\n    FullscreenSettings &\n    HashSettings &\n    PagerSettings &\n    RotateSettings &\n    ShareSettings;\n\nexport type LightGallerySettings = Partial<LightGalleryAllSettings>;\n\nexport interface LightGalleryCoreSettings {\n    /**\n     * Type of transition between images.\n     */\n    mode:\n        | 'lg-slide'\n        | 'lg-fade'\n        | 'lg-zoom-in'\n        | 'lg-zoom-in-big'\n        | 'lg-zoom-out'\n        | 'lg-zoom-out-big'\n        | 'lg-zoom-out-in'\n        | 'lg-zoom-in-out'\n        | 'lg-soft-zoom'\n        | 'lg-scale-up'\n        | 'lg-slide-circular'\n        | 'lg-slide-circular-vertical'\n        | 'lg-slide-vertical'\n        | 'lg-slide-vertical-growth'\n        | 'lg-slide-skew-only'\n        | 'lg-slide-skew-only-rev'\n        | 'lg-slide-skew-only-y'\n        | 'lg-slide-skew-only-y-rev'\n        | 'lg-slide-skew'\n        | 'lg-slide-skew-rev'\n        | 'lg-slide-skew-cross'\n        | 'lg-slide-skew-cross-rev'\n        | 'lg-slide-skew-ver'\n        | 'lg-slide-skew-ver-rev'\n        | 'lg-slide-skew-ver-cross'\n        | 'lg-slide-skew-ver-cross-rev'\n        | 'lg-lollipop'\n        | 'lg-lollipop-rev'\n        | 'lg-rotate'\n        | 'lg-rotate-rev'\n        | 'lg-tube';\n\n    /**\n     * Slide animation CSS easing property\n     */\n    easing: string;\n\n    /**\n     *Transition duration (in ms).\n     */\n    speed: number;\n\n    /**\n     * If you are using lightGallery for commercial projects, you need to purchase a commercial license\n     * to get the license key. For projects that are compatible with GPLv3 license,\n     * please contact us for getting a license key at <a href=\"mailto:contact@lightgalleryjs.com\">contact@lightgalleryjs.com</a>.\n     * If you want to test lightGallery before purchasing a commercial license, you can\n     * use `0000-0000-000-0000` as a temporary license key\n     */\n\n    licenseKey: string;\n\n    /**\n     * Height of the gallery.\n     * example '100%' , '300px'\n     */\n    height: string;\n\n    /**\n     * Width of the gallery.\n     * example '100%' , '300px'\n     */\n    width: string;\n\n    /**\n     * Add custom class for gallery container\n     * This can be used to set different style for different galleries\n     */\n    addClass: string;\n\n    /**\n     * Start animation class for the gallery.\n     * @description\n     * <ul>\n     * <li>startClass will be empty zoomFromOrigin is true.</li>\n     * <li>This can be used to change the starting effect when the image is loaded</li>\n     * <li>This is also applied when navigating to new slides</li>\n     * </ul>\n     */\n    startClass: string;\n\n    /**\n     * Enable zoom from origin effect.\n     * @description You need to know the original image size upfront and provide it via data-lg-size attribute as <code> data-lg-size=\"1920-1280</code>\"\n     *\n     * If you don't know, the size of a few images in the list, you can skip the data-lg-size attribute for the particular slides,\n     * lightGallery will show the default animation if data-lg-size is not available\n     *\n     * If you are using responsive images,\n     * you can pass a comma separated list of sizes combined with a max-width (up to what size the particular image should be used)\n     *\n     * example -\n     * <code> data-lg-size=\"240-160-375, 400-267-480, 1600-1067\"\n     * data-responsive=\"img-240.jpg 375, img-400.jpg 480\"\n     * data-src=\"img-1600.jpg\" </code>\n     *\n     * In the above example, upto 375 width img.240.jpg and lg-size 240-160 will be used.\n     * Similarly, upto 480 pixel width size 400-267 and img-400.jpg will be used\n     * And above 480, lg-size 1600-1067 and img-1600.jpg will be used\n     *\n     * <ul>\n     * <li>At the moment, zoomFromOrigin options is supported only for image slides.</li>\n     * <li>Will be false if dynamic option is enabled or galleryID found in the URL.</li>\n     * <li>startClass will be empty if zoomFromOrigin is true to avoid css conflicts.</li>\n     * </ul>\n     */\n    zoomFromOrigin: boolean;\n\n    /**\n     * Zoom from image animation duration\n     */\n    startAnimationDuration: number;\n\n    /**\n     * Backdrop transition duration.\n     * Note - Do not change the value of backdrop via css.\n     */\n    backdropDuration: number;\n\n    /**\n     * Configure where the gallery should be appended.\n     * Useful to create inline galleries and more\n     * It is an empty string in the default settings and later assigned to document.body to avoid accessing document for SSR\n     */\n    container: HTMLElement | '';\n\n    /**\n     * Delay for hiding gallery controls in ms.\n     * Pass <code>0</code> if you don't want to hide the controls\n     */\n    hideBarsDelay: number;\n\n    /**\n     * Delay in hiding controls for the first time when gallery is opened\n     */\n    showBarsAfter: number;\n\n    /**\n     * Delay slide transitions.\n     * @description This is useful if you want to do any action in the current slide before moving to next slide.\n     * <section>\n     * For example, fading out the captions before going to next slide.\n     * <code>.lg-slide-progress</code> class name is added to the current slide immediately after calling the slide method.\n     * But transition begins only after the delay\n     * </section>\n     */\n    slideDelay: number;\n\n    /**\n     * Support legacy browsers\n     * @description Currently this is used only for adding support to srcset attribute via picturefill library\n     * If true lightGallery will show warning message to include picturefill library\n     */\n    supportLegacyBrowser: boolean;\n\n    /**\n     * If true, toolbar, captions and thumbnails will not overlap with media element\n     * This will not effect thumbnails if animateThumb is false\n     * Also, toggle thumbnails button is not displayed if allowMediaOverlap is false\n     * <section>\n     * Note - Changing the position of the media on every slide transition creates a flickering effect.\n     * Therefore, the height of the caption is calculated dynamically, only once based on the first slide caption.\n     * </section>\n     * <section>\n     * if you have dynamic captions for each media,\n     * you can provide an appropriate height for the captions via allowMediaOverlap option\n     * </section>\n     */\n    allowMediaOverlap: boolean;\n\n    /**\n     * Video max size.\n     * @description This can be over-written by passing specific size via data-lg-size attribute\n     * Recommended video resolution and & aspect ratios <a href=\"https://support.google.com/youtube/answer/6375112\">https://support.google.com/youtube/answer/6375112</a>\n     */\n    videoMaxSize: string;\n\n    /**\n     * Automatically load poster image for YouTube videos\n     */\n    loadYouTubePoster: boolean;\n\n    /**\n     * Height of the caption for calculating allowMediaOverlap positions\n     * Note - this is only used to find the position of media item if allowMediaOverlap is true.\n     * Not for setting height of the captions\n     * Set 0 if you want to calculate the height of captions dynamically\n     */\n    defaultCaptionHeight: number;\n\n    /**\n     * aria-labelledby attribute fot gallery\n     */\n    ariaLabelledby: string;\n\n    /**\n     * aria-describedby attribute for gallery\n     */\n    ariaDescribedby: string;\n\n    /**\n     * Hide scrollbar when gallery is opened\n     * @version V2.5.0\n     */\n    hideScrollbar: boolean;\n\n    /**\n     * Reset to previous scrollPosition when lightGallery is closed\n     * @description By default, lightGallery doesn't hide the scrollbar for a smooth opening transition.\n     * If a user changes the scroll position, lightGallery resets it to the previous value\n     * @version V2.5.0\n     */\n    resetScrollPosition: boolean;\n\n    /**\n     * If false user won't be abel to close the gallery at all\n     * This is useful for creating inline galleries.\n     */\n    closable: boolean;\n\n    /**\n     * allows vertical drag/swipe to close gallery\n     * <code>false</code> if option <code>closable</code> is <code>false</code>\n     */\n    swipeToClose: boolean;\n    /**\n     * allows clicks on black area to close gallery.\n     */\n    closeOnTap: boolean;\n\n    /**\n     * If false, close button won't be displayed.\n     * Useful for creating inline galleries.\n     */\n    showCloseIcon: boolean;\n\n    /**\n     * Show maximize icon.\n     * Useful for creating inline galleries.\n     */\n    showMaximizeIcon: boolean;\n\n    /**\n     * If false, will disable the ability to loop back to the beginning of the gallery from the last slide.\n     */\n    loop: boolean;\n\n    /**\n     * Whether the LightGallery could be closed by pressing the \"Esc\" key.\n     */\n    escKey: boolean;\n\n    /**\n     * Enable keyboard navigation\n     */\n    keyPress: boolean;\n\n    /**\n     * Trap focus within the lightGallery\n     * @version V2.5.0\n     */\n    trapFocus: boolean;\n\n    /**\n     * If false, prev/next buttons will not be displayed.\n     */\n    controls: boolean;\n\n    /**\n     * Enable slideEnd animation\n     */\n    slideEndAnimation: boolean;\n\n    /**\n     * If true, prev/next button will be hidden on first/last image.\n     * @description Note - this option will be ignored if <code>loop</code> or <code>slideEndAnimation</code> is set to true\n     */\n    hideControlOnEnd: boolean;\n\n    /**\n     * ability to navigate to next/prev slides on mousewheel\n     */\n    mousewheel: boolean;\n\n    /**\n     * Option to get captions from alt or title tags.\n     */\n    getCaptionFromTitleOrAlt: boolean;\n\n    /**\n     * control where the sub-html should be appended.\n     * If you choose '.lg-outer', you are responsible for placing the div at the right position.\n     * '.lg-outer' is useful if you want show custom HTML outside the normal gallery\n     */\n    appendSubHtmlTo: '.lg-sub-html' | '.lg-item' | '.lg-outer';\n\n    /**\n     * Set to true if the selector in \"data-sub-html\" should use the current item as its origin.\n     */\n    subHtmlSelectorRelative: boolean;\n\n    /**\n     * number of preload slides\n     * @description will exicute only after the current slide is fully loaded.\n     * for example, if you click on 4th image and if preload = 1 then 3rd slide and 5th\n     * slide will be loaded in the background after the 4th slide is fully loaded..\n     * if preload is 2 then 2nd 3rd 5th 6th slides will be preloaded.\n     */\n    preload: number;\n\n    /**\n     * Control how many slide items should be kept in dom at a time\n     * @description To improve performance by reducing number of gallery items in the dom,\n     * lightGallery keeps only the lowest possible number of slides in the dom at a time.\n     * This has a minimum value of 3\n     */\n    numberOfSlideItemsInDom: number;\n\n    /**\n     * Custom selector property instead of direct children.\n     * @description Based on your markup structure, you can specify custom selectors to fetch media data for the gallery\n     * Pass \"this\" to select same element\n     * You can also pass HTMLCollection directly\n     * Example - '.my-selector' | '#my-selector' | this | document.querySelectorAll('.my-selector')\n     */\n    selector: string | HTMLCollection[];\n\n    /**\n     * By default selector element relative to the current gallery.\n     * Instead of that you can tell lightGallery to select element relative to another element.\n     * Example - '.my-selector-container' | '#my-selector-container'\n     * In the code this become selector =  document.querySelector(this.s.selectWithin ).querySelectorAll(this.s.selector);\n     */\n    selectWithin: string;\n\n    /**\n     * Custom html for next control\n     */\n    nextHtml: string;\n\n    /**\n     * Custom html for prev control\n     */\n    prevHtml: string;\n\n    /**\n     * specify which slide should load initially\n     */\n    index: number;\n\n    /**\n     * Set width for iframe.\n     */\n    iframeWidth: string;\n\n    /**\n     * Set height for iframe.\n     */\n    iframeHeight: string;\n\n    /**\n     * Set max width for iframe.\n     */\n    iframeMaxWidth: string;\n\n    /**\n     * Set max height for iframe.\n     */\n    iframeMaxHeight: string;\n\n    /**\n     * Enable download button.\n     * @description By default download url will be taken from data-src/href attribute but it supports only for modern browsers.\n     * If you want you can provide another url for download via data-download-url.\n     * pass false in data-download-url if you want to hide download button for the particular slide.\n     */\n    download: boolean;\n\n    /**\n     * Whether to show total number of images and index number of currently displayed image.\n     */\n    counter: boolean;\n\n    /**\n     * Where the counter should be appended\n     */\n    appendCounterTo: string;\n\n    /**\n     * By setting the swipeThreshold (in px) you can set how far the user must swipe for the next/prev image.\n     */\n    swipeThreshold: number;\n\n    /**\n     * Enables swipe support for touch devices\n     */\n    enableSwipe: boolean;\n\n    /**\n     * Enables desktop mouse drag support\n     */\n    enableDrag: boolean;\n\n    /**\n     * LightGallery can be instantiated and launched programmatically by setting this option to true and populating dynamicEl option (see below) with the definitions of images.\n     */\n    dynamic: boolean;\n\n    /**\n     * An array of objects (src, iframe, subHtml, thumb, poster, responsive, srcset sizes) representing gallery elements.\n     */\n    dynamicEl: GalleryItem[];\n\n    /**\n     * Fetch custom properties from the selector\n     * @description this is useful for plugin development\n     * By default lightGallery fetches and store all the props selectors to\n     * reduce frequent dom interaction for fetching props every time.\n     *\n     * If you need any addition data to be fetched and stored in the galleryItems variable,\n     * you can do this just by passing the prop names via extraProps\n     * @example\n     * HTML:\n     * <div id=\"lightGallery\">\n     *     <a href=\"a.jpg\" data-custom-prop=\"abc\"><img src=\"thumb.jpg\" /></a>\n     *     <a href=\"a.jpg\" data-custom-prop=\"xyz\"><img src=\"thumb.jpg\" /></a>\n     * </div>\n     * JS:\n     * lightGallery(document.getElementById('lightGallery'), {\n     *     extraProps: ['customProp']\n     * })\n     * // Note - If you are using dynamic mode, you can pass any custom prop in the galleryItem\n     * lightGallery(document.getElementById('lightGallery'), {\n     *     dynamic: true,\n     *     dynamicEl: [{\n     *         src: 'img/img1.jpg',\n     *         customProp:'abc',\n     *     }]\n     * })\n     *\n     */\n    extraProps: string[];\n\n    /**\n     * Option to fetch different thumbnail image other than first image\n     * @description If you want to use external image for thumbnail,\n     * add the path of that image inside \"data-\" attribute\n     * and set value of this option to the name of your custom attribute.\n     *\n     * @example\n     * <div id=\"lightGallery\">\n     *     <a href=\"a.jpg\" data-external-thumb-image=\"images/externalThumb.jpg\" ><img src=\"thumb.jpg\" /></a>\n     * </div>\n     *\n     * lightGallery(document.getElementById('lightGallery'), {\n     *     exThumbImage: 'data-external-thumb-image'\n     * })\n     */\n    exThumbImage: string;\n\n    /**\n     * Function to detect mobile devices\n     */\n    isMobile?: () => boolean;\n\n    /**\n     * Separate settings for mobile devices\n     * @description Note - this is applied only at the time of loading\n     * by default controls and close buttons are disabled on mobile devices.\n     * use this options if you want to enable them or change any other settings for mobile devices\n     * Note - mobileSettings does not merge default values, You need to provide all mobileSettings including default values\n     */\n    mobileSettings: Partial<MobileSettings>;\n\n    /**\n     * Aria label strings for lightGallery core modules.\n     * @description This can be useful if you want to localize the lightGallery strings to other languages.\n     * Use your own service to translate the strings and pass it via settings.strings\n     * You can find dedicated strings option for all lightGallery modules in their respective documentation.\n     */\n    strings: LightGalleryCoreStrings;\n\n    plugins: (new (instance: LightGallery, $LG: LgQuery) => any)[];\n}\n\nexport const lightGalleryCoreSettings: LightGalleryCoreSettings = {\n    mode: 'lg-slide',\n    easing: 'ease',\n    speed: 400,\n    licenseKey: '0000-0000-000-0000',\n    height: '100%',\n    width: '100%',\n    addClass: '',\n    startClass: 'lg-start-zoom',\n    backdropDuration: 300,\n    container: '',\n    startAnimationDuration: 400,\n    zoomFromOrigin: true,\n    hideBarsDelay: 0,\n    showBarsAfter: 10000,\n    slideDelay: 0,\n    supportLegacyBrowser: true,\n    allowMediaOverlap: false,\n    videoMaxSize: '1280-720',\n    loadYouTubePoster: true,\n    defaultCaptionHeight: 0,\n    ariaLabelledby: '',\n    ariaDescribedby: '',\n    resetScrollPosition: true,\n    hideScrollbar: false,\n    closable: true,\n    swipeToClose: true,\n    closeOnTap: true,\n    showCloseIcon: true,\n    showMaximizeIcon: false,\n    loop: true,\n    escKey: true,\n    keyPress: true,\n    trapFocus: true,\n    controls: true,\n    slideEndAnimation: true,\n    hideControlOnEnd: false,\n    mousewheel: false,\n    getCaptionFromTitleOrAlt: true,\n    appendSubHtmlTo: '.lg-sub-html',\n    subHtmlSelectorRelative: false,\n    preload: 2,\n    numberOfSlideItemsInDom: 10,\n    selector: '',\n    selectWithin: '',\n    nextHtml: '',\n    prevHtml: '',\n    index: 0,\n    iframeWidth: '100%',\n    iframeHeight: '100%',\n    iframeMaxWidth: '100%',\n    iframeMaxHeight: '100%',\n    download: true,\n    counter: true,\n    appendCounterTo: '.lg-toolbar',\n    swipeThreshold: 50,\n    enableSwipe: true,\n    enableDrag: true,\n    dynamic: false,\n    dynamicEl: [],\n    extraProps: [],\n    exThumbImage: '',\n    isMobile: undefined,\n    mobileSettings: {\n        controls: false,\n        showCloseIcon: false,\n        download: false,\n    } as MobileSettings,\n    plugins: [],\n    strings: {\n        closeGallery: 'Close gallery',\n        toggleMaximize: 'Toggle maximize',\n        previousSlide: 'Previous slide',\n        nextSlide: 'Next slide',\n        download: 'Download',\n        playVideo: 'Play video',\n    } as LightGalleryCoreStrings,\n};\n","interface Offset {\n    left: number;\n    top: number;\n}\n\nfunction initLgPolyfills() {\n    (function () {\n        if (typeof window.CustomEvent === 'function') return false;\n\n        function CustomEvent(event: string, params: any) {\n            params = params || {\n                bubbles: false,\n                cancelable: false,\n                detail: null,\n            };\n            const evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(\n                event,\n                params.bubbles,\n                params.cancelable,\n                params.detail,\n            );\n            return evt;\n        }\n\n        window.CustomEvent = CustomEvent as any;\n    })();\n    (function () {\n        if (!Element.prototype.matches) {\n            Element.prototype.matches =\n                (Element.prototype as any).msMatchesSelector ||\n                Element.prototype.webkitMatchesSelector;\n        }\n    })();\n}\n\nexport type LgQuery = (selector: any) => lgQuery;\nexport class lgQuery {\n    static eventListeners: { [key: string]: any[] } = {};\n    static generateUUID(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(\n            /[xy]/g,\n            function (c) {\n                const r = (Math.random() * 16) | 0,\n                    v = c == 'x' ? r : (r & 0x3) | 0x8;\n                return v.toString(16);\n            },\n        );\n    }\n\n    private selector: any;\n    private firstElement: any;\n    private cssVenderPrefixes: string[] = [\n        'TransitionDuration',\n        'TransitionTimingFunction',\n        'Transform',\n        'Transition',\n    ];\n    constructor(selector: string | Element) {\n        this.selector = this._getSelector(selector);\n        this.firstElement = this._getFirstEl();\n        return this;\n    }\n\n    private _getSelector(\n        selector: string | Element,\n        context: Element | Document = document,\n    ): Element | null | NodeListOf<Element> {\n        if (typeof selector !== 'string') {\n            return selector;\n        }\n        context = context || document;\n        const fl = selector.substring(0, 1);\n        if (fl === '#') {\n            return context.querySelector(selector);\n        } else {\n            return context.querySelectorAll(selector);\n        }\n    }\n\n    private _each(\n        func: (\n            elements: Element | NodeListOf<Element> | null,\n            index: number,\n        ) => void,\n    ): this {\n        if (!this.selector) {\n            return this;\n        }\n        if (this.selector.length !== undefined) {\n            [].forEach.call(this.selector, func);\n        } else {\n            func(this.selector, 0);\n        }\n        return this;\n    }\n\n    private _setCssVendorPrefix(\n        el: any,\n        cssProperty: string,\n        value?: string | number,\n    ): void {\n        // prettier-ignore\n        const property = cssProperty.replace(/-([a-z])/gi, function (\n            s,\n            group1,\n        ) {\n            return group1.toUpperCase();\n        });\n        if (this.cssVenderPrefixes.indexOf(property) !== -1) {\n            el.style[\n                property.charAt(0).toLowerCase() + property.slice(1)\n            ] = value;\n            el.style['webkit' + property] = value;\n            el.style['moz' + property] = value;\n            el.style['ms' + property] = value;\n            el.style['o' + property] = value;\n        } else {\n            el.style[property] = value;\n        }\n    }\n\n    private _getFirstEl() {\n        if (this.selector && this.selector.length !== undefined) {\n            return this.selector[0];\n        } else {\n            return this.selector;\n        }\n    }\n\n    private isEventMatched(event: string, eventName: string): boolean {\n        const eventNamespace = eventName.split('.');\n        return event\n            .split('.')\n            .filter((e) => e)\n            .every((e) => {\n                return eventNamespace.indexOf(e) !== -1;\n            });\n    }\n\n    attr(attr: string): string;\n    attr(attr: string, value: string | number | boolean): this;\n    attr(attr: string, value?: string | number | boolean): string | this {\n        if (value === undefined) {\n            if (!this.firstElement) {\n                return '';\n            }\n            return this.firstElement.getAttribute(attr);\n        }\n        this._each((el: any) => {\n            el.setAttribute(attr, value);\n        });\n        return this;\n    }\n\n    find(selector: any): lgQuery {\n        return $LG(this._getSelector(selector, this.selector));\n    }\n\n    first(): lgQuery {\n        if (this.selector && this.selector.length !== undefined) {\n            return $LG(this.selector[0]);\n        } else {\n            return $LG(this.selector);\n        }\n    }\n\n    eq(index: number): lgQuery {\n        return $LG(this.selector[index]);\n    }\n\n    parent(): lgQuery {\n        return $LG(this.selector.parentElement);\n    }\n\n    get(): HTMLElement {\n        return this._getFirstEl();\n    }\n\n    removeAttr(attributes: string): this {\n        const attrs = attributes.split(' ');\n        this._each((el: any) => {\n            attrs.forEach((attr: string) => el.removeAttribute(attr));\n        });\n        return this;\n    }\n\n    wrap(className: string): this {\n        if (!this.firstElement) {\n            return this;\n        }\n        const wrapper = document.createElement('div');\n        wrapper.className = className;\n        this.firstElement.parentNode.insertBefore(wrapper, this.firstElement);\n        this.firstElement.parentNode.removeChild(this.firstElement);\n        wrapper.appendChild(this.firstElement);\n        return this;\n    }\n\n    addClass(classNames = ''): this {\n        this._each((el: any) => {\n            // IE doesn't support multiple arguments\n            classNames.split(' ').forEach((className) => {\n                if (className) {\n                    el.classList.add(className);\n                }\n            });\n        });\n        return this;\n    }\n\n    removeClass(classNames: string): this {\n        this._each((el: any) => {\n            // IE doesn't support multiple arguments\n            classNames.split(' ').forEach((className) => {\n                if (className) {\n                    el.classList.remove(className);\n                }\n            });\n        });\n        return this;\n    }\n\n    hasClass(className: string): boolean {\n        if (!this.firstElement) {\n            return false;\n        }\n        return this.firstElement.classList.contains(className);\n    }\n    hasAttribute(attribute: string): boolean {\n        if (!this.firstElement) {\n            return false;\n        }\n        return this.firstElement.hasAttribute(attribute);\n    }\n    toggleClass(className: string): this {\n        if (!this.firstElement) {\n            return this;\n        }\n        if (this.hasClass(className)) {\n            this.removeClass(className);\n        } else {\n            this.addClass(className);\n        }\n        return this;\n    }\n\n    css(property: string, value?: string | number): this {\n        this._each((el: any) => {\n            this._setCssVendorPrefix(el, property, value);\n        });\n        return this;\n    }\n    // Need to pass separate namespaces for separate elements\n    on(events: string, listener: (e: any) => void): this {\n        if (!this.selector) {\n            return this;\n        }\n        events.split(' ').forEach((event: string) => {\n            if (!Array.isArray(lgQuery.eventListeners[event])) {\n                lgQuery.eventListeners[event] = [];\n            }\n            lgQuery.eventListeners[event].push(listener);\n            this.selector.addEventListener(event.split('.')[0], listener);\n        });\n\n        return this;\n    }\n    // @todo - test this\n    once(event: string, listener: (e: any) => void): this {\n        this.on(event, () => {\n            this.off(event);\n            listener(event);\n        });\n        return this;\n    }\n    off(event: string): this {\n        if (!this.selector) {\n            return this;\n        }\n        Object.keys(lgQuery.eventListeners).forEach((eventName) => {\n            if (this.isEventMatched(event, eventName)) {\n                lgQuery.eventListeners[eventName].forEach((listener) => {\n                    this.selector.removeEventListener(\n                        eventName.split('.')[0],\n                        listener,\n                    );\n                });\n                lgQuery.eventListeners[eventName] = [];\n            }\n        });\n\n        return this;\n    }\n    trigger<Detail>(event: string, detail?: Detail): this {\n        if (!this.firstElement) {\n            return this;\n        }\n\n        const customEvent = new CustomEvent(event.split('.')[0], {\n            detail: detail || null,\n        });\n        this.firstElement.dispatchEvent(customEvent);\n        return this;\n    }\n\n    // Does not support IE\n    load(url: string): this {\n        fetch(url)\n            .then((res) => res.text())\n            .then((html) => {\n                this.selector.innerHTML = html;\n            });\n        return this;\n    }\n\n    html(): string;\n    html(html: string): this;\n    html(html?: string): string | this {\n        if (html === undefined) {\n            if (!this.firstElement) {\n                return '';\n            }\n            return this.firstElement.innerHTML;\n        }\n        this._each((el: any) => {\n            el.innerHTML = html;\n        });\n        return this;\n    }\n    append(html: string | HTMLElement): this {\n        this._each((el: any) => {\n            if (typeof html === 'string') {\n                el.insertAdjacentHTML('beforeend', html);\n            } else {\n                el.appendChild(html);\n            }\n        });\n        return this;\n    }\n    prepend(html: string): this {\n        this._each((el: any) => {\n            el.insertAdjacentHTML('afterbegin', html);\n        });\n        return this;\n    }\n    remove(): this {\n        this._each((el: any) => {\n            el.parentNode.removeChild(el);\n        });\n        return this;\n    }\n    empty(): this {\n        this._each((el: any) => {\n            el.innerHTML = '';\n        });\n        return this;\n    }\n    // Supports only window\n    scrollTop(): number;\n    scrollTop(scrollTop: number): this;\n    scrollTop(scrollTop?: number): number | this {\n        if (scrollTop !== undefined) {\n            document.body.scrollTop = scrollTop;\n            document.documentElement.scrollTop = scrollTop;\n            return this;\n        } else {\n            return (\n                window.pageYOffset ||\n                document.documentElement.scrollTop ||\n                document.body.scrollTop ||\n                0\n            );\n        }\n    }\n    // Supports only window\n    scrollLeft(): number;\n    scrollLeft(scrollLeft?: number): this;\n    scrollLeft(scrollLeft?: number): number | this {\n        if (scrollLeft !== undefined) {\n            document.body.scrollLeft = scrollLeft;\n            document.documentElement.scrollLeft = scrollLeft;\n            return this;\n        } else {\n            return (\n                window.pageXOffset ||\n                document.documentElement.scrollLeft ||\n                document.body.scrollLeft ||\n                0\n            );\n        }\n    }\n    offset(): Offset {\n        if (!this.firstElement) {\n            return {\n                left: 0,\n                top: 0,\n            };\n        }\n        const rect = this.firstElement.getBoundingClientRect();\n        const bodyMarginLeft = $LG('body').style().marginLeft;\n\n        // Minus body margin - https://stackoverflow.com/questions/30711548/is-getboundingclientrect-left-returning-a-wrong-value\n        return {\n            left: rect.left - parseFloat(bodyMarginLeft) + this.scrollLeft(),\n            top: rect.top + this.scrollTop(),\n        };\n    }\n    style(): CSSStyleDeclaration {\n        if (!this.firstElement) {\n            return {} as CSSStyleDeclaration;\n        }\n        return (\n            this.firstElement.currentStyle ||\n            window.getComputedStyle(this.firstElement)\n        );\n    }\n    // Width without padding and border even if box-sizing is used.\n    width(): number {\n        const style = this.style();\n        return (\n            this.firstElement.clientWidth -\n            parseFloat(style.paddingLeft) -\n            parseFloat(style.paddingRight)\n        );\n    }\n    // Height without padding and border even if box-sizing is used.\n    height(): number {\n        const style = this.style();\n        return (\n            this.firstElement.clientHeight -\n            parseFloat(style.paddingTop) -\n            parseFloat(style.paddingBottom)\n        );\n    }\n}\n\nexport function $LG(selector: any): lgQuery {\n    initLgPolyfills();\n    return new lgQuery(selector);\n}\n","import { $LG, lgQuery } from './lgQuery';\nimport { VideoSource } from './plugins/video/types';\nimport { VideoInfo } from './types';\n\nexport interface ImageSize {\n    width: number;\n    height: number;\n}\n\nexport interface ImageSources {\n    media?: string;\n    srcset: string;\n    sizes?: string;\n    type?: string;\n}\n\nexport interface GalleryItem {\n    /**\n     * url of the media\n     * @data-attr data-src\n     */\n    src?: string;\n\n    /**\n     * Source attributes for the <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source#attributes\">picture</a> element\n     * @data-attr data-sources\n     */\n    sources?: ImageSources[];\n\n    /**\n     * Thumbnail url\n     * @description By default lightGallery uses the image inside gallery selector as thumbnail.\n     * But, If you want to use external image for thumbnail,\n     * pass the thumbnail url via any data attribute and\n     * pass the attribute name via exThumbImage option\n     * @example\n     * <div id=\"lightGallery\">\n     *     <a href=\"a.jpg\" data-external-thumb-image=\"images/externalThumb.jpg\" ><img src=\"thumb.jpg\" /></a>\n     * </div>\n     *\n     * lightGallery(document.getElementById('lightGallery'), {\n     *     exThumbImage: 'data-external-thumb-image'\n     * })\n     * @data-attr data-*\n     */\n    thumb?: string;\n\n    /**\n     * alt attribute for the image\n     * @data-attr alt\n     */\n    alt?: string;\n\n    /**\n     * Title attribute for the video\n     * @data-attr title\n     */\n    title?: string;\n\n    /**\n     * Title for iframe\n     * @data-attr data-iframe-title\n     */\n    iframeTitle?: string;\n\n    /**\n     * Caption for the slide\n     * @description You can either pass the HTML markup or the ID or class name of the element which contains the captions\n     * @data-attr data-sub-html\n     */\n    subHtml?: string;\n\n    /**\n     * url of the file which contain the sub html.\n     * @description Note - Does not support Internet Explorer browser\n     * @data-attr data-sub-html-url\n     */\n    subHtmlUrl?: string;\n\n    /**\n     * Video source\n     * @data-attr data-video\n     */\n    video?: VideoSource;\n\n    /**\n     * Poster url\n     * @data-attr data-poster\n     */\n    poster?: string;\n\n    /**\n     * Custom slide name to use in the url when hash plugin is enabled\n     * @data-attr data-slide-name\n     */\n    slideName?: string;\n\n    /**\n     * List of images and viewport's max width separated by comma.\n     * @description Ex?: img/1-375.jpg 375, img/1-480.jpg 480, img/1-757.jpg 757.\n     * @data-attr data-responsive\n     */\n    responsive?: string;\n\n    /**\n     * srcset attribute values for the main image\n     * @data-attr data-srcset\n     */\n    srcset?: string;\n\n    /**\n     * srcset sizes attribute for the main image\n     * @data-attr data-sizes\n     */\n    sizes?: string;\n\n    /**\n     * Set true is you want to open your url in an iframe\n     * @data-attr data-iframe\n     */\n    iframe?: boolean;\n\n    /**\n     * Download url for your image/video.\n     * @description Pass false if you want to disable the download button.\n     * @data-attr data-download-url\n     */\n    downloadUrl?: string | boolean;\n\n    /**\n     * Name of the file after it is downloaded.\n     * @description The HTML value of the download attribute.\n     * There are no restrictions on allowed values, and the browser will automatically\n     * detect the correct file extension and add it to the file (.img, .pdf, .txt, .html, etc.).\n     * <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download\">More info</a>\n     * @data-attr data-download\n     */\n    download?: string | boolean;\n\n    /**\n     * Actual size of the image in px.\n     * @description This is used in zoom plugin to see the actual size of the image when double taped on the image.\n     * @data-attr data-width\n     */\n    width?: string;\n\n    /**\n     * Facebook share URL.\n     * @description Specify only if you want to provide separate share URL for the specific slide. By default, current browser URL is taken.\n     * @data-attr data-facebook-share-url\n     */\n    facebookShareUrl?: string;\n\n    /**\n     * Tweet text\n     * @data-attr data-tweet-text\n     */\n    tweetText?: string;\n\n    /**\n     * Twitter share URL.\n     * @description Specify only if you want to provide separate share URL for the specific slide. By default, current browser URL will be taken.\n     * @data-attr data-twitter-share-url\n     */\n    twitterShareUrl?: string;\n\n    /**\n     * Pinterest share URL.\n     * @description Specify only if you want to provide separate share URL for the specific slide. By default, current browser URL will be taken.\n     * Note?: Pinterest requires absolute URL\n     * @data-attr data-pinterest-share-url\n     */\n    pinterestShareUrl?: string;\n\n    /**\n     * Description for Pinterest post.\n     * @data-attr data-pinterest-text\n     */\n    pinterestText?: string;\n\n    /**\n     * Facebook comments body html\n     * @description Please refer <a href=\"https://developers.facebook.com/docs/plugins/comments/#comments-plugin\">facebook official documentation</a> for generating the HTML markup\n     * @example\n     * <div\n     *      class=\"fb-comments\"\n     *      data-href=\"https://www.lightgalleryjs.com/demos/comment-box/#facebook-comments-demo\"\n     *      data-width=\"400\"\n     *      data-numposts=\"5\">\n     * </div>\n     * @data-attr data-fb-html\n     */\n    fbHtml?: string;\n\n    /**\n     * Disqus page identifier\n     * @description Please refer official <a href=\"https://help.disqus.com/en/articles/1717084-javascript-configuration-variables\">disqus documentation</a> for more info\n     * @data-attr data-disqus-identifier\n     */\n    disqusIdentifier?: string;\n\n    /**\n     * Disqus page url\n     * @description Please refer official <a href=\"https://help.disqus.com/en/articles/1717084-javascript-configuration-variables\">disqus documentation</a> for more info\n     * @data-attr data-disqus-url\n     */\n    disqusUrl?: string;\n\n    __slideVideoInfo?: VideoInfo;\n    [key: string]: any;\n}\n\nconst defaultDynamicOptions = [\n    'src',\n    'sources',\n    'subHtml',\n    'subHtmlUrl',\n    'html',\n    'video',\n    'poster',\n    'slideName',\n    'responsive',\n    'srcset',\n    'sizes',\n    'iframe',\n    'downloadUrl',\n    'download',\n    'width',\n    'facebookShareUrl',\n    'tweetText',\n    'iframeTitle',\n    'twitterShareUrl',\n    'pinterestShareUrl',\n    'pinterestText',\n    'fbHtml',\n    'disqusIdentifier',\n    'disqusUrl',\n];\n\n// Convert html data-attribute to camalcase\nexport function convertToData(attr: string): string {\n    // FInd a way for lgsize\n    if (attr === 'href') {\n        return 'src';\n    }\n    attr = attr.replace('data-', '');\n    attr = attr.charAt(0).toLowerCase() + attr.slice(1);\n    attr = attr.replace(/-([a-z])/g, (g) => g[1].toUpperCase());\n\n    return attr;\n}\n\nconst utils = {\n    /**\n     * get possible width and height from the lgSize attribute. Used for ZoomFromOrigin option\n     */\n    getSize(\n        el: HTMLElement,\n        container: lgQuery,\n        spacing = 0,\n        defaultLgSize?: string,\n    ): ImageSize | undefined {\n        const LGel = $LG(el);\n        let lgSize = LGel.attr('data-lg-size') || defaultLgSize;\n\n        if (!lgSize) {\n            return;\n        }\n\n        const isResponsiveSizes = lgSize.split(',');\n        // if at-least two viewport sizes are available\n        if (isResponsiveSizes[1]) {\n            const wWidth = window.innerWidth;\n            for (let i = 0; i < isResponsiveSizes.length; i++) {\n                const size = isResponsiveSizes[i];\n                const responsiveWidth = parseInt(size.split('-')[2], 10);\n                if (responsiveWidth > wWidth) {\n                    lgSize = size;\n                    break;\n                }\n\n                // take last item as last option\n                if (i === isResponsiveSizes.length - 1) {\n                    lgSize = size;\n                }\n            }\n        }\n\n        const size = lgSize.split('-');\n\n        const width = parseInt(size[0], 10);\n        const height = parseInt(size[1], 10);\n\n        const cWidth = container.width();\n        const cHeight = container.height() - spacing;\n\n        const maxWidth = Math.min(cWidth, width);\n        const maxHeight = Math.min(cHeight, height);\n\n        const ratio = Math.min(maxWidth / width, maxHeight / height);\n\n        return { width: width * ratio, height: height * ratio };\n    },\n\n    /**\n     * @desc Get transform value based on the imageSize. Used for ZoomFromOrigin option\n     * @param {jQuery Element}\n     * @returns {String} Transform CSS string\n     */\n    getTransform(\n        el: HTMLElement,\n        container: lgQuery,\n        top: number,\n        bottom: number,\n        imageSize?: ImageSize,\n    ): string | undefined {\n        if (!imageSize) {\n            return;\n        }\n        const LGel = $LG(el).find('img').first();\n        if (!LGel.get()) {\n            return;\n        }\n\n        const containerRect = container.get().getBoundingClientRect();\n\n        const wWidth = containerRect.width;\n\n        // using innerWidth to include mobile safari bottom bar\n        const wHeight = container.height() - (top + bottom);\n\n        const elWidth = LGel.width();\n        const elHeight = LGel.height();\n\n        const elStyle = LGel.style();\n        let x =\n            (wWidth - elWidth) / 2 -\n            LGel.offset().left +\n            (parseFloat(elStyle.paddingLeft) || 0) +\n            (parseFloat(elStyle.borderLeft) || 0) +\n            $LG(window).scrollLeft() +\n            containerRect.left;\n        let y =\n            (wHeight - elHeight) / 2 -\n            LGel.offset().top +\n            (parseFloat(elStyle.paddingTop) || 0) +\n            (parseFloat(elStyle.borderTop) || 0) +\n            $LG(window).scrollTop() +\n            top;\n\n        const scX = elWidth / imageSize.width;\n        const scY = elHeight / imageSize.height;\n\n        const transform =\n            'translate3d(' +\n            (x *= -1) +\n            'px, ' +\n            (y *= -1) +\n            'px, 0) scale3d(' +\n            scX +\n            ', ' +\n            scY +\n            ', 1)';\n        return transform;\n    },\n\n    getIframeMarkup(\n        iframeWidth: string,\n        iframeHeight: string,\n        iframeMaxWidth: string,\n        iframeMaxHeight: string,\n        src?: string,\n        iframeTitle?: string,\n    ): string {\n        const title = iframeTitle ? 'title=\"' + iframeTitle + '\"' : '';\n        return `<div class=\"lg-video-cont lg-has-iframe\" style=\"width:${iframeWidth}; max-width:${iframeMaxWidth}; height: ${iframeHeight}; max-height:${iframeMaxHeight}\">\n                    <iframe class=\"lg-object\" frameborder=\"0\" ${title} src=\"${src}\"  allowfullscreen=\"true\"></iframe>\n                </div>`;\n    },\n\n    getImgMarkup(\n        index: number,\n        src: string,\n        altAttr: string,\n        srcset?: string,\n        sizes?: string,\n        sources?: ImageSources[],\n    ): string {\n        const srcsetAttr = srcset ? `srcset=\"${srcset}\"` : '';\n        const sizesAttr = sizes ? `sizes=\"${sizes}\"` : '';\n        const imgMarkup = `<img ${altAttr} ${srcsetAttr}  ${sizesAttr} class=\"lg-object lg-image\" data-index=\"${index}\" src=\"${src}\" />`;\n        let sourceTag = '';\n        if (sources) {\n            const sourceObj =\n                typeof sources === 'string' ? JSON.parse(sources) : sources;\n\n            sourceTag = sourceObj.map((source: any) => {\n                let attrs = '';\n                Object.keys(source).forEach((key) => {\n                    // Do not remove the first space as it is required to separate the attributes\n                    attrs += ` ${key}=\"${source[key]}\"`;\n                });\n                return `<source ${attrs}></source>`;\n            });\n        }\n        return `${sourceTag}${imgMarkup}`;\n    },\n\n    // Get src from responsive src\n    getResponsiveSrc(srcItms: string[]): string {\n        const rsWidth = [];\n        const rsSrc = [];\n        let src = '';\n        for (let i = 0; i < srcItms.length; i++) {\n            const _src = srcItms[i].split(' ');\n\n            // Manage empty space\n            if (_src[0] === '') {\n                _src.splice(0, 1);\n            }\n\n            rsSrc.push(_src[0]);\n            rsWidth.push(_src[1]);\n        }\n\n        const wWidth = window.innerWidth;\n        for (let j = 0; j < rsWidth.length; j++) {\n            if (parseInt(rsWidth[j], 10) > wWidth) {\n                src = rsSrc[j];\n                break;\n            }\n        }\n        return src;\n    },\n\n    isImageLoaded(img: HTMLImageElement): boolean {\n        if (!img) return false;\n        // During the onload event, IE correctly identifies any images that\n        // weren’t downloaded as not complete. Others should too. Gecko-based\n        // browsers act like NS4 in that they report this incorrectly.\n        if (!img.complete) {\n            return false;\n        }\n\n        // However, they do have two very useful properties: naturalWidth and\n        // naturalHeight. These give the true size of the image. If it failed\n        // to load, either of these should be zero.\n        if (img.naturalWidth === 0) {\n            return false;\n        }\n\n        // No other way of checking: assume it’s ok.\n        return true;\n    },\n\n    getVideoPosterMarkup(\n        _poster: string,\n        dummyImg: string,\n        videoContStyle: string,\n        playVideoString: string,\n        _isVideo?: VideoInfo,\n    ): string {\n        let videoClass = '';\n        if (_isVideo && _isVideo.youtube) {\n            videoClass = 'lg-has-youtube';\n        } else if (_isVideo && _isVideo.vimeo) {\n            videoClass = 'lg-has-vimeo';\n        } else {\n            videoClass = 'lg-has-html5';\n        }\n\n        return `<div class=\"lg-video-cont ${videoClass}\" style=\"${videoContStyle}\">\n                <div class=\"lg-video-play-button\">\n                <svg\n                    viewBox=\"0 0 20 20\"\n                    preserveAspectRatio=\"xMidYMid\"\n                    focusable=\"false\"\n                    aria-labelledby=\"${playVideoString}\"\n                    role=\"img\"\n                    class=\"lg-video-play-icon\"\n                >\n                    <title>${playVideoString}</title>\n                    <polygon class=\"lg-video-play-icon-inner\" points=\"1,0 20,10 1,20\"></polygon>\n                </svg>\n                <svg class=\"lg-video-play-icon-bg\" viewBox=\"0 0 50 50\" focusable=\"false\">\n                    <circle cx=\"50%\" cy=\"50%\" r=\"20\"></circle></svg>\n                <svg class=\"lg-video-play-icon-circle\" viewBox=\"0 0 50 50\" focusable=\"false\">\n                    <circle cx=\"50%\" cy=\"50%\" r=\"20\"></circle>\n                </svg>\n            </div>\n            ${dummyImg || ''}\n            <img class=\"lg-object lg-video-poster\" src=\"${_poster}\" />\n        </div>`;\n    },\n\n    getFocusableElements(container: HTMLElement): NodeListOf<Element> {\n        const elements = container.querySelectorAll(\n            'a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])',\n        );\n        const visibleElements = [].filter.call(elements, (element) => {\n            const style = window.getComputedStyle(element);\n            return style.display !== 'none' && style.visibility !== 'hidden';\n        });\n        return (visibleElements as unknown) as NodeListOf<Element>;\n    },\n\n    /**\n     * @desc Create dynamic elements array from gallery items when dynamic option is false\n     * It helps to avoid frequent DOM interaction\n     * and avoid multiple checks for dynamic elments\n     *\n     * @returns {Array} dynamicEl\n     */\n    getDynamicOptions(\n        items: any,\n        extraProps: string[],\n        getCaptionFromTitleOrAlt: boolean,\n        exThumbImage: string,\n    ): GalleryItem[] {\n        const dynamicElements: GalleryItem[] = [];\n        const availableDynamicOptions = [\n            ...defaultDynamicOptions,\n            ...extraProps,\n        ];\n        [].forEach.call(items, (item: HTMLElement) => {\n            const dynamicEl: GalleryItem = {} as GalleryItem;\n            for (let i = 0; i < item.attributes.length; i++) {\n                const attr = item.attributes[i];\n                if (attr.specified) {\n                    const dynamicAttr = convertToData(attr.name);\n                    let label = '';\n                    if (availableDynamicOptions.indexOf(dynamicAttr) > -1) {\n                        label = dynamicAttr;\n                    }\n                    if (label) {\n                        (dynamicEl as any)[label] = attr.value;\n                    }\n                }\n            }\n            const currentItem = $LG(item);\n            const alt = currentItem.find('img').first().attr('alt');\n            const title = currentItem.attr('title');\n\n            const thumb = exThumbImage\n                ? currentItem.attr(exThumbImage)\n                : currentItem.find('img').first().attr('src');\n            dynamicEl.thumb = thumb;\n\n            if (getCaptionFromTitleOrAlt && !dynamicEl.subHtml) {\n                dynamicEl.subHtml = title || alt || '';\n            }\n            dynamicEl.alt = alt || title || '';\n            dynamicElements.push(dynamicEl);\n        });\n        return dynamicElements;\n    },\n    isMobile(): boolean {\n        return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n    },\n    /**\n     * @desc Check the given src is video\n     * @param {String} src\n     * @return {Object} video type\n     * Ex:{ youtube  :  [\"//www.youtube.com/watch?v=c0asJgSyxcY\", \"c0asJgSyxcY\"] }\n     *\n     * @todo - this information can be moved to dynamicEl to avoid frequent calls\n     */\n\n    isVideo(\n        src: string,\n        isHTML5VIdeo: boolean,\n        index: number,\n    ): VideoInfo | undefined {\n        if (!src) {\n            if (isHTML5VIdeo) {\n                return {\n                    html5: true,\n                };\n            } else {\n                console.error(\n                    'lightGallery :- data-src is not provided on slide item ' +\n                        (index + 1) +\n                        '. Please make sure the selector property is properly configured. More info - https://www.lightgalleryjs.com/demos/html-markup/',\n                );\n                return;\n            }\n        }\n\n        const youtube = src.match(\n            /\\/\\/(?:www\\.)?youtu(?:\\.be|be\\.com|be-nocookie\\.com)\\/(?:watch\\?v=|embed\\/)?([a-z0-9\\-\\_\\%]+)([\\&|?][\\S]*)*/i,\n        );\n        const vimeo = src.match(\n            /\\/\\/(?:www\\.)?(?:player\\.)?vimeo.com\\/(?:video\\/)?([0-9a-z\\-_]+)(.*)?/i,\n        );\n        const wistia = src.match(\n            /https?:\\/\\/(.+)?(wistia\\.com|wi\\.st)\\/(medias|embed)\\/([0-9a-z\\-_]+)(.*)/,\n        );\n\n        if (youtube) {\n            return {\n                youtube,\n            };\n        } else if (vimeo) {\n            return {\n                vimeo,\n            };\n        } else if (wistia) {\n            return {\n                wistia,\n            };\n        }\n    },\n};\n\nexport default utils;\n","import {\n    AfterAppendSlideEventDetail,\n    AfterAppendSubHtmlDetail,\n    BeforeSlideDetail,\n    lGEvents,\n    SlideItemLoadDetail,\n} from './lg-events';\nimport {\n    LightGalleryAllSettings,\n    lightGalleryCoreSettings,\n    LightGallerySettings,\n} from './lg-settings';\nimport utils, { GalleryItem, ImageSize } from './lg-utils';\nimport { $LG, lgQuery } from './lgQuery';\nimport {\n    Coords,\n    MediaContainerPosition,\n    SlideDirection,\n    VideoInfo,\n} from './types';\n\ndeclare let picturefill: any;\n\n// @ref - https://stackoverflow.com/questions/3971841/how-to-resize-images-proportionally-keeping-the-aspect-ratio\n// @ref - https://2ality.com/2017/04/setting-up-multi-platform-packages.html\n\n// Unique id for each gallery\nlet lgId = 0;\n\nexport class LightGallery {\n    public settings!: LightGalleryAllSettings;\n    public galleryItems!: GalleryItem[];\n\n    // Current gallery item\n    public lgId!: number;\n\n    public el!: HTMLElement;\n    public LGel!: lgQuery;\n    public lgOpened = false;\n\n    public index = 0;\n\n    // lightGallery modules\n    public plugins: any[] = [];\n\n    // false when lightGallery load first slide content;\n    public lGalleryOn = false;\n\n    // True when a slide animation is in progress\n    public lgBusy = false;\n\n    // Type of touch action - {swipe, zoomSwipe, pinch}\n    public touchAction?: 'swipe' | 'zoomSwipe' | 'pinch';\n\n    // Direction of swipe/drag - {horizontal, vertical}\n    public swipeDirection?: 'horizontal' | 'vertical';\n\n    // Timeout function for hiding controls;\n    public hideBarTimeout: any;\n\n    public currentItemsInDom: string[] = [];\n\n    public outer!: lgQuery;\n\n    public items: any;\n\n    public $backdrop!: lgQuery;\n    public $lgComponents!: lgQuery;\n\n    public $container!: lgQuery;\n\n    public $inner!: lgQuery;\n    public $content!: lgQuery;\n    public $toolbar!: lgQuery;\n\n    // Scroll top value before lightGallery is opened\n    public prevScrollTop = 0;\n\n    public bodyPaddingRight = 0;\n\n    private zoomFromOrigin!: boolean;\n\n    private currentImageSize?: ImageSize;\n\n    private isDummyImageRemoved = false;\n\n    private dragOrSwipeEnabled = false;\n\n    public mediaContainerPosition = {\n        top: 0,\n        bottom: 0,\n    };\n\n    constructor(element: HTMLElement, options?: LightGallerySettings) {\n        if (!element) {\n            return this;\n        }\n        lgId++;\n        this.lgId = lgId;\n\n        this.el = element;\n        this.LGel = $LG(element);\n\n        this.generateSettings(options);\n\n        this.buildModules();\n\n        // When using dynamic mode, ensure dynamicEl is an array\n        if (\n            this.settings.dynamic &&\n            this.settings.dynamicEl !== undefined &&\n            !Array.isArray(this.settings.dynamicEl)\n        ) {\n            throw 'When using dynamic mode, you must also define dynamicEl as an Array.';\n        }\n\n        this.galleryItems = this.getItems();\n        this.normalizeSettings();\n\n        // Gallery items\n\n        this.init();\n\n        this.validateLicense();\n\n        return this;\n    }\n\n    private generateSettings(options?: LightGallerySettings) {\n        // lightGallery settings\n        this.settings = {\n            ...lightGalleryCoreSettings,\n            ...options,\n        } as LightGalleryAllSettings;\n        if (\n            this.settings.isMobile &&\n            typeof this.settings.isMobile === 'function'\n                ? this.settings.isMobile()\n                : utils.isMobile()\n        ) {\n            const mobileSettings = {\n                ...this.settings.mobileSettings,\n                ...this.settings.mobileSettings,\n            };\n            this.settings = { ...this.settings, ...mobileSettings };\n        }\n    }\n\n    private normalizeSettings() {\n        if (this.settings.slideEndAnimation) {\n            this.settings.hideControlOnEnd = false;\n        }\n        if (!this.settings.closable) {\n            this.settings.swipeToClose = false;\n        }\n\n        // And reset it on close to get the correct value next time\n        this.zoomFromOrigin = this.settings.zoomFromOrigin;\n\n        // At the moment, Zoom from image doesn't support dynamic options\n        // @todo add zoomFromOrigin support for dynamic images\n        if (this.settings.dynamic) {\n            this.zoomFromOrigin = false;\n        }\n\n        if (!this.settings.container) {\n            this.settings.container = document.body;\n        }\n\n        // settings.preload should not be grater than $item.length\n        this.settings.preload = Math.min(\n            this.settings.preload,\n            this.galleryItems.length,\n        );\n    }\n\n    init(): void {\n        this.addSlideVideoInfo(this.galleryItems);\n\n        this.buildStructure();\n\n        this.LGel.trigger(lGEvents.init, {\n            instance: this,\n        });\n\n        if (this.settings.keyPress) {\n            this.keyPress();\n        }\n\n        setTimeout(() => {\n            this.enableDrag();\n            this.enableSwipe();\n            this.triggerPosterClick();\n        }, 50);\n\n        this.arrow();\n        if (this.settings.mousewheel) {\n            this.mousewheel();\n        }\n\n        if (!this.settings.dynamic) {\n            this.openGalleryOnItemClick();\n        }\n    }\n\n    openGalleryOnItemClick(): void {\n        // Using for loop instead of using bubbling as the items can be any html element.\n        for (let index = 0; index < this.items.length; index++) {\n            const element = this.items[index];\n            const $element = $LG(element);\n            // Using different namespace for click because click event should not unbind if selector is same object('this')\n            // @todo manage all event listners - should have namespace that represent element\n            const uuid = lgQuery.generateUUID();\n            $element\n                .attr('data-lg-id', uuid)\n                .on(`click.lgcustom-item-${uuid}`, (e) => {\n                    e.preventDefault();\n                    const currentItemIndex = this.settings.index || index;\n                    this.openGallery(currentItemIndex, element);\n                });\n        }\n    }\n\n    /**\n     * Module constructor\n     * Modules are build incrementally.\n     * Gallery should be opened only once all the modules are initialized.\n     * use moduleBuildTimeout to make sure this\n     */\n    buildModules(): void {\n        this.settings.plugins.forEach((plugin) => {\n            this.plugins.push(new plugin(this, $LG));\n        });\n    }\n\n    validateLicense(): void {\n        if (!this.settings.licenseKey) {\n            console.error('Please provide a valid license key');\n        } else if (this.settings.licenseKey === '0000-0000-000-0000') {\n            console.warn(\n                `lightGallery: ${this.settings.licenseKey} license key is not valid for production use`,\n            );\n        }\n    }\n\n    getSlideItem(index: number): lgQuery {\n        return $LG(this.getSlideItemId(index));\n    }\n\n    getSlideItemId(index: number): string {\n        return `#lg-item-${this.lgId}-${index}`;\n    }\n\n    getIdName(id: string): string {\n        return `${id}-${this.lgId}`;\n    }\n    getElementById(id: string): lgQuery {\n        return $LG(`#${this.getIdName(id)}`);\n    }\n\n    manageSingleSlideClassName(): void {\n        if (this.galleryItems.length < 2) {\n            this.outer.addClass('lg-single-item');\n        } else {\n            this.outer.removeClass('lg-single-item');\n        }\n    }\n\n    buildStructure(): void {\n        const container = this.$container && this.$container.get();\n        if (container) {\n            return;\n        }\n        let controls = '';\n        let subHtmlCont = '';\n\n        // Create controls\n        if (this.settings.controls) {\n            controls = `<button type=\"button\" id=\"${this.getIdName(\n                'lg-prev',\n            )}\" aria-label=\"${\n                this.settings.strings['previousSlide']\n            }\" class=\"lg-prev lg-icon\"> ${this.settings.prevHtml} </button>\n                <button type=\"button\" id=\"${this.getIdName(\n                    'lg-next',\n                )}\" aria-label=\"${\n                this.settings.strings['nextSlide']\n            }\" class=\"lg-next lg-icon\"> ${this.settings.nextHtml} </button>`;\n        }\n\n        if (this.settings.appendSubHtmlTo !== '.lg-item') {\n            subHtmlCont =\n                '<div class=\"lg-sub-html\" role=\"status\" aria-live=\"polite\"></div>';\n        }\n\n        let addClasses = '';\n\n        if (this.settings.allowMediaOverlap) {\n            // Do not remove space before last single quote\n            addClasses += 'lg-media-overlap ';\n        }\n\n        const ariaLabelledby = this.settings.ariaLabelledby\n            ? 'aria-labelledby=\"' + this.settings.ariaLabelledby + '\"'\n            : '';\n        const ariaDescribedby = this.settings.ariaDescribedby\n            ? 'aria-describedby=\"' + this.settings.ariaDescribedby + '\"'\n            : '';\n\n        const containerClassName = `lg-container ${this.settings.addClass} ${\n            document.body !== this.settings.container ? 'lg-inline' : ''\n        }`;\n        const closeIcon =\n            this.settings.closable && this.settings.showCloseIcon\n                ? `<button type=\"button\" aria-label=\"${\n                      this.settings.strings['closeGallery']\n                  }\" id=\"${this.getIdName(\n                      'lg-close',\n                  )}\" class=\"lg-close lg-icon\"></button>`\n                : '';\n        const maximizeIcon = this.settings.showMaximizeIcon\n            ? `<button type=\"button\" aria-label=\"${\n                  this.settings.strings['toggleMaximize']\n              }\" id=\"${this.getIdName(\n                  'lg-maximize',\n              )}\" class=\"lg-maximize lg-icon\"></button>`\n            : '';\n        const template = `\n        <div class=\"${containerClassName}\" id=\"${this.getIdName(\n            'lg-container',\n        )}\" tabindex=\"-1\" aria-modal=\"true\" ${ariaLabelledby} ${ariaDescribedby} role=\"dialog\"\n        >\n            <div id=\"${this.getIdName(\n                'lg-backdrop',\n            )}\" class=\"lg-backdrop\"></div>\n\n            <div id=\"${this.getIdName(\n                'lg-outer',\n            )}\" class=\"lg-outer lg-use-css3 lg-css3 lg-hide-items ${addClasses} \">\n\n              <div id=\"${this.getIdName('lg-content')}\" class=\"lg-content\">\n                <div id=\"${this.getIdName('lg-inner')}\" class=\"lg-inner\">\n                </div>\n                ${controls}\n              </div>\n                <div id=\"${this.getIdName(\n                    'lg-toolbar',\n                )}\" class=\"lg-toolbar lg-group\">\n                    ${maximizeIcon}\n                    ${closeIcon}\n                    </div>\n                    ${\n                        this.settings.appendSubHtmlTo === '.lg-outer'\n                            ? subHtmlCont\n                            : ''\n                    }\n                <div id=\"${this.getIdName(\n                    'lg-components',\n                )}\" class=\"lg-components\">\n                    ${\n                        this.settings.appendSubHtmlTo === '.lg-sub-html'\n                            ? subHtmlCont\n                            : ''\n                    }\n                </div>\n            </div>\n        </div>\n        `;\n\n        $LG(this.settings.container).append(template);\n\n        if (document.body !== this.settings.container) {\n            $LG(this.settings.container).css('position', 'relative');\n        }\n\n        this.outer = this.getElementById('lg-outer');\n        this.$lgComponents = this.getElementById('lg-components');\n        this.$backdrop = this.getElementById('lg-backdrop');\n        this.$container = this.getElementById('lg-container');\n        this.$inner = this.getElementById('lg-inner');\n        this.$content = this.getElementById('lg-content');\n        this.$toolbar = this.getElementById('lg-toolbar');\n\n        this.$backdrop.css(\n            'transition-duration',\n            this.settings.backdropDuration + 'ms',\n        );\n\n        let outerClassNames = `${this.settings.mode} `;\n\n        this.manageSingleSlideClassName();\n\n        if (this.settings.enableDrag) {\n            outerClassNames += 'lg-grab ';\n        }\n\n        this.outer.addClass(outerClassNames);\n\n        this.$inner.css('transition-timing-function', this.settings.easing);\n        this.$inner.css('transition-duration', this.settings.speed + 'ms');\n\n        if (this.settings.download) {\n            this.$toolbar.append(\n                `<a id=\"${this.getIdName(\n                    'lg-download',\n                )}\" target=\"_blank\" rel=\"noopener\" aria-label=\"${\n                    this.settings.strings['download']\n                }\" download class=\"lg-download lg-icon\"></a>`,\n            );\n        }\n\n        this.counter();\n\n        $LG(window).on(\n            `resize.lg.global${this.lgId} orientationchange.lg.global${this.lgId}`,\n            () => {\n                this.refreshOnResize();\n            },\n        );\n\n        this.hideBars();\n\n        this.manageCloseGallery();\n        this.toggleMaximize();\n\n        this.initModules();\n    }\n\n    refreshOnResize(): void {\n        if (this.lgOpened) {\n            const currentGalleryItem = this.galleryItems[this.index];\n            const { __slideVideoInfo } = currentGalleryItem;\n\n            this.mediaContainerPosition = this.getMediaContainerPosition();\n            const { top, bottom } = this.mediaContainerPosition;\n            this.currentImageSize = utils.getSize(\n                this.items[this.index],\n                this.outer,\n                top + bottom,\n                __slideVideoInfo && this.settings.videoMaxSize,\n            );\n            if (__slideVideoInfo) {\n                this.resizeVideoSlide(this.index, this.currentImageSize);\n            }\n            if (this.zoomFromOrigin && !this.isDummyImageRemoved) {\n                const imgStyle = this.getDummyImgStyles(this.currentImageSize);\n                this.outer\n                    .find('.lg-current .lg-dummy-img')\n                    .first()\n                    .attr('style', imgStyle);\n            }\n            this.LGel.trigger(lGEvents.containerResize);\n        }\n    }\n\n    resizeVideoSlide(index: number, imageSize?: ImageSize): void {\n        const lgVideoStyle = this.getVideoContStyle(imageSize);\n        const currentSlide = this.getSlideItem(index);\n        currentSlide.find('.lg-video-cont').attr('style', lgVideoStyle);\n    }\n\n    /**\n     * Update slides dynamically.\n     * Add, edit or delete slides dynamically when lightGallery is opened.\n     * Modify the current gallery items and pass it via updateSlides method\n     * @note\n     * - Do not mutate existing lightGallery items directly.\n     * - Always pass new list of gallery items\n     * - You need to take care of thumbnails outside the gallery if any\n     * - user this method only if you want to update slides when the gallery is opened. Otherwise, use `refresh()` method.\n     * @param items Gallery items\n     * @param index After the update operation, which slide gallery should navigate to\n     * @category lGPublicMethods\n     * @example\n     * const plugin = lightGallery();\n     *\n     * // Adding slides dynamically\n     * let galleryItems = [\n     * // Access existing lightGallery items\n     * // galleryItems are automatically generated internally from the gallery HTML markup\n     * // or directly from galleryItems when dynamic gallery is used\n     *   ...plugin.galleryItems,\n     *     ...[\n     *       {\n     *         src: 'img/img-1.png',\n     *           thumb: 'img/thumb1.png',\n     *         },\n     *     ],\n     *   ];\n     *   plugin.updateSlides(\n     *     galleryItems,\n     *     plugin.index,\n     *   );\n     *\n     *\n     * // Remove slides dynamically\n     * galleryItems = JSON.parse(\n     *   JSON.stringify(updateSlideInstance.galleryItems),\n     * );\n     * galleryItems.shift();\n     * updateSlideInstance.updateSlides(galleryItems, 1);\n     * @see <a href=\"/demos/update-slides/\">Demo</a>\n     */\n    updateSlides(items: GalleryItem[], index: number): void {\n        if (this.index > items.length - 1) {\n            this.index = items.length - 1;\n        }\n        if (items.length === 1) {\n            this.index = 0;\n        }\n        if (!items.length) {\n            this.closeGallery();\n            return;\n        }\n        const currentSrc = this.galleryItems[index].src;\n        this.galleryItems = items;\n        this.updateControls();\n        this.$inner.empty();\n        this.currentItemsInDom = [];\n\n        let _index = 0;\n        // Find the current index based on source value of the slide\n        this.galleryItems.some((galleryItem, itemIndex) => {\n            if (galleryItem.src === currentSrc) {\n                _index = itemIndex;\n                return true;\n            }\n            return false;\n        });\n\n        this.currentItemsInDom = this.organizeSlideItems(_index, -1);\n        this.loadContent(_index, true);\n        this.getSlideItem(_index).addClass('lg-current');\n\n        this.index = _index;\n        this.updateCurrentCounter(_index);\n        this.LGel.trigger(lGEvents.updateSlides);\n    }\n\n    // Get gallery items based on multiple conditions\n    getItems(): GalleryItem[] {\n        // Gallery items\n        this.items = [];\n        if (!this.settings.dynamic) {\n            if (this.settings.selector === 'this') {\n                this.items.push(this.el);\n            } else if (this.settings.selector) {\n                if (typeof this.settings.selector === 'string') {\n                    if (this.settings.selectWithin) {\n                        const selectWithin = $LG(this.settings.selectWithin);\n                        this.items = selectWithin\n                            .find(this.settings.selector)\n                            .get();\n                    } else {\n                        this.items = this.el.querySelectorAll(\n                            this.settings.selector,\n                        );\n                    }\n                } else {\n                    this.items = this.settings.selector;\n                }\n            } else {\n                this.items = this.el.children;\n            }\n            return utils.getDynamicOptions(\n                this.items,\n                this.settings.extraProps,\n                this.settings.getCaptionFromTitleOrAlt,\n                this.settings.exThumbImage,\n            );\n        } else {\n            return this.settings.dynamicEl || [];\n        }\n    }\n\n    shouldHideScrollbar(): boolean {\n        return (\n            this.settings.hideScrollbar &&\n            document.body === this.settings.container\n        );\n    }\n\n    hideScrollbar(): void {\n        if (!this.shouldHideScrollbar()) {\n            return;\n        }\n        this.bodyPaddingRight = parseFloat($LG('body').style().paddingRight);\n        const bodyRect = document.documentElement.getBoundingClientRect();\n        const scrollbarWidth = window.innerWidth - bodyRect.width;\n\n        $LG(document.body).css(\n            'padding-right',\n            scrollbarWidth + this.bodyPaddingRight + 'px',\n        );\n        $LG(document.body).addClass('lg-overlay-open');\n    }\n\n    resetScrollBar(): void {\n        if (!this.shouldHideScrollbar()) {\n            return;\n        }\n        $LG(document.body).css('padding-right', this.bodyPaddingRight + 'px');\n        $LG(document.body).removeClass('lg-overlay-open');\n    }\n\n    /**\n     * Open lightGallery.\n     * Open gallery with specific slide by passing index of the slide as parameter.\n     * @category lGPublicMethods\n     * @param {Number} index  - index of the slide\n     * @param {HTMLElement} element - Which image lightGallery should zoom from\n     *\n     * @example\n     * const $dynamicGallery = document.getElementById('dynamic-gallery-demo');\n     * const dynamicGallery = lightGallery($dynamicGallery, {\n     *     dynamic: true,\n     *     dynamicEl: [\n     *         {\n     *              src: 'img/1.jpg',\n     *              thumb: 'img/thumb-1.jpg',\n     *              subHtml: '<h4>Image 1 title</h4><p>Image 1 descriptions.</p>',\n     *         },\n     *         ...\n     *     ],\n     * });\n     * $dynamicGallery.addEventListener('click', function () {\n     *     // Starts with third item.(Optional).\n     *     // This is useful if you want use dynamic mode with\n     *     // custom thumbnails (thumbnails outside gallery),\n     *     dynamicGallery.openGallery(2);\n     * });\n     *\n     */\n    openGallery(index = this.settings.index, element?: HTMLElement): void {\n        // prevent accidental double execution\n        if (this.lgOpened) return;\n        this.lgOpened = true;\n        this.outer.removeClass('lg-hide-items');\n\n        this.hideScrollbar();\n\n        // Add display block, but still has opacity 0\n        this.$container.addClass('lg-show');\n\n        const itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(\n            index,\n            index,\n        );\n        this.currentItemsInDom = itemsToBeInsertedToDom;\n\n        let items = '';\n        itemsToBeInsertedToDom.forEach((item) => {\n            items = items + `<div id=\"${item}\" class=\"lg-item\"></div>`;\n        });\n\n        this.$inner.append(items);\n        this.addHtml(index);\n        let transform: string | undefined = '';\n        this.mediaContainerPosition = this.getMediaContainerPosition();\n        const { top, bottom } = this.mediaContainerPosition;\n        if (!this.settings.allowMediaOverlap) {\n            this.setMediaContainerPosition(top, bottom);\n        }\n        const { __slideVideoInfo } = this.galleryItems[index];\n        if (this.zoomFromOrigin && element) {\n            this.currentImageSize = utils.getSize(\n                element,\n                this.outer,\n                top + bottom,\n                __slideVideoInfo && this.settings.videoMaxSize,\n            );\n            transform = utils.getTransform(\n                element,\n                this.outer,\n                top,\n                bottom,\n                this.currentImageSize,\n            );\n        }\n        if (!this.zoomFromOrigin || !transform) {\n            this.outer.addClass(this.settings.startClass);\n            this.getSlideItem(index).removeClass('lg-complete');\n        }\n        const timeout = this.settings.zoomFromOrigin\n            ? 100\n            : this.settings.backdropDuration;\n        setTimeout(() => {\n            this.outer.addClass('lg-components-open');\n        }, timeout);\n        this.index = index;\n        this.LGel.trigger(lGEvents.beforeOpen);\n\n        // add class lg-current to remove initial transition\n        this.getSlideItem(index).addClass('lg-current');\n\n        this.lGalleryOn = false;\n        // Store the current scroll top value to scroll back after closing the gallery..\n        this.prevScrollTop = $LG(window).scrollTop();\n\n        setTimeout(() => {\n            // Need to check both zoomFromOrigin and transform values as we need to set set the\n            // default opening animation if user missed to add the lg-size attribute\n\n            if (this.zoomFromOrigin && transform) {\n                const currentSlide = this.getSlideItem(index);\n                currentSlide.css('transform', transform);\n                setTimeout(() => {\n                    currentSlide\n                        .addClass('lg-start-progress lg-start-end-progress')\n                        .css(\n                            'transition-duration',\n                            this.settings.startAnimationDuration + 'ms',\n                        );\n                    this.outer.addClass('lg-zoom-from-image');\n                });\n                setTimeout(() => {\n                    currentSlide.css('transform', 'translate3d(0, 0, 0)');\n                }, 100);\n            }\n\n            setTimeout(() => {\n                this.$backdrop.addClass('in');\n                this.$container.addClass('lg-show-in');\n            }, 10);\n\n            setTimeout(() => {\n                if (\n                    this.settings.trapFocus &&\n                    document.body === this.settings.container\n                ) {\n                    this.trapFocus();\n                }\n            }, this.settings.backdropDuration + 50);\n\n            // lg-visible class resets gallery opacity to 1\n            if (!this.zoomFromOrigin || !transform) {\n                setTimeout(() => {\n                    this.outer.addClass('lg-visible');\n                }, this.settings.backdropDuration);\n            }\n\n            // initiate slide function\n            this.slide(index, false, false, false);\n\n            this.LGel.trigger(lGEvents.afterOpen);\n        });\n\n        if (document.body === this.settings.container) {\n            $LG('html').addClass('lg-on');\n        }\n    }\n\n    /**\n     * Note - Changing the position of the media on every slide transition creates a flickering effect.\n     * Therefore, The height of the caption is calculated dynamically, only once based on the first slide caption.\n     * if you have dynamic captions for each media,\n     * you can provide an appropriate height for the captions via allowMediaOverlap option\n     */\n    public getMediaContainerPosition(): MediaContainerPosition {\n        if (this.settings.allowMediaOverlap) {\n            return {\n                top: 0,\n                bottom: 0,\n            };\n        }\n        const top = this.$toolbar.get().clientHeight || 0;\n        const subHtml = this.outer.find('.lg-components .lg-sub-html').get();\n        const captionHeight =\n            this.settings.defaultCaptionHeight ||\n            (subHtml && subHtml.clientHeight) ||\n            0;\n        const thumbContainer = this.outer.find('.lg-thumb-outer').get();\n        const thumbHeight = thumbContainer ? thumbContainer.clientHeight : 0;\n        const bottom = thumbHeight + captionHeight;\n        return {\n            top,\n            bottom,\n        };\n    }\n\n    private setMediaContainerPosition(top = 0, bottom = 0): void {\n        this.$content.css('top', top + 'px').css('bottom', bottom + 'px');\n    }\n\n    hideBars(): void {\n        // Hide controllers if mouse doesn't move for some period\n        setTimeout(() => {\n            this.outer.removeClass('lg-hide-items');\n            if (this.settings.hideBarsDelay > 0) {\n                this.outer.on('mousemove.lg click.lg touchstart.lg', () => {\n                    this.outer.removeClass('lg-hide-items');\n\n                    clearTimeout(this.hideBarTimeout);\n\n                    // Timeout will be cleared on each slide movement also\n                    this.hideBarTimeout = setTimeout(() => {\n                        this.outer.addClass('lg-hide-items');\n                    }, this.settings.hideBarsDelay);\n                });\n                this.outer.trigger('mousemove.lg');\n            }\n        }, this.settings.showBarsAfter);\n    }\n\n    initPictureFill($img: lgQuery): void {\n        if (this.settings.supportLegacyBrowser) {\n            try {\n                picturefill({\n                    elements: [$img.get()],\n                });\n            } catch (e) {\n                console.warn(\n                    'lightGallery :- If you want srcset or picture tag to be supported for older browser please include picturefil javascript library in your document.',\n                );\n            }\n        }\n    }\n\n    /**\n     *  @desc Create image counter\n     *  Ex: 1/10\n     */\n    counter(): void {\n        if (this.settings.counter) {\n            const counterHtml = `<div class=\"lg-counter\" role=\"status\" aria-live=\"polite\">\n                <span id=\"${this.getIdName(\n                    'lg-counter-current',\n                )}\" class=\"lg-counter-current\">${this.index + 1} </span> /\n                <span id=\"${this.getIdName(\n                    'lg-counter-all',\n                )}\" class=\"lg-counter-all\">${\n                this.galleryItems.length\n            } </span></div>`;\n            this.outer.find(this.settings.appendCounterTo).append(counterHtml);\n        }\n    }\n\n    /**\n     *  @desc add sub-html into the slide\n     *  @param {Number} index - index of the slide\n     */\n    addHtml(index: number): void {\n        let subHtml;\n        let subHtmlUrl;\n        if (this.galleryItems[index].subHtmlUrl) {\n            subHtmlUrl = this.galleryItems[index].subHtmlUrl;\n        } else {\n            subHtml = this.galleryItems[index].subHtml;\n        }\n\n        if (!subHtmlUrl) {\n            if (subHtml) {\n                // get first letter of sub-html\n                // if first letter starts with . or # get the html form the jQuery object\n                const fL = subHtml.substring(0, 1);\n                if (fL === '.' || fL === '#') {\n                    if (\n                        this.settings.subHtmlSelectorRelative &&\n                        !this.settings.dynamic\n                    ) {\n                        subHtml = $LG(this.items)\n                            .eq(index)\n                            .find(subHtml)\n                            .first()\n                            .html();\n                    } else {\n                        subHtml = $LG(subHtml).first().html();\n                    }\n                }\n            } else {\n                subHtml = '';\n            }\n        }\n\n        if (this.settings.appendSubHtmlTo !== '.lg-item') {\n            if (subHtmlUrl) {\n                this.outer.find('.lg-sub-html').load(subHtmlUrl);\n            } else {\n                this.outer.find('.lg-sub-html').html(subHtml as string);\n            }\n        } else {\n            const currentSlide = $LG(this.getSlideItemId(index));\n            if (subHtmlUrl) {\n                currentSlide.load(subHtmlUrl);\n            } else {\n                currentSlide.append(\n                    `<div class=\"lg-sub-html\">${subHtml}</div>`,\n                );\n            }\n        }\n\n        // Add lg-empty-html class if title doesn't exist\n        if (typeof subHtml !== 'undefined' && subHtml !== null) {\n            if (subHtml === '') {\n                this.outer\n                    .find(this.settings.appendSubHtmlTo)\n                    .addClass('lg-empty-html');\n            } else {\n                this.outer\n                    .find(this.settings.appendSubHtmlTo)\n                    .removeClass('lg-empty-html');\n            }\n        }\n\n        this.LGel.trigger<AfterAppendSubHtmlDetail>(\n            lGEvents.afterAppendSubHtml,\n            {\n                index,\n            },\n        );\n    }\n\n    /**\n     *  @desc Preload slides\n     *  @param {Number} index - index of the slide\n     * @todo preload not working for the first slide, Also, should work for the first and last slide as well\n     */\n    preload(index: number): void {\n        for (let i = 1; i <= this.settings.preload; i++) {\n            if (i >= this.galleryItems.length - index) {\n                break;\n            }\n\n            this.loadContent(index + i, false);\n        }\n\n        for (let j = 1; j <= this.settings.preload; j++) {\n            if (index - j < 0) {\n                break;\n            }\n\n            this.loadContent(index - j, false);\n        }\n    }\n\n    getDummyImgStyles(imageSize?: ImageSize): string {\n        if (!imageSize) return '';\n        return `width:${imageSize.width}px;\n                margin-left: -${imageSize.width / 2}px;\n                margin-top: -${imageSize.height / 2}px;\n                height:${imageSize.height}px`;\n    }\n    getVideoContStyle(imageSize?: ImageSize): string {\n        if (!imageSize) return '';\n        return `width:${imageSize.width}px;\n                height:${imageSize.height}px`;\n    }\n\n    getDummyImageContent(\n        $currentSlide: lgQuery,\n        index: number,\n        alt: string,\n    ): string {\n        let $currentItem;\n        if (!this.settings.dynamic) {\n            $currentItem = $LG(this.items).eq(index);\n        }\n        if ($currentItem) {\n            let _dummyImgSrc;\n            if (!this.settings.exThumbImage) {\n                _dummyImgSrc = $currentItem.find('img').first().attr('src');\n            } else {\n                _dummyImgSrc = $currentItem.attr(this.settings.exThumbImage);\n            }\n            if (!_dummyImgSrc) return '';\n            const imgStyle = this.getDummyImgStyles(this.currentImageSize);\n            const dummyImgContent = `<img ${alt} style=\"${imgStyle}\" class=\"lg-dummy-img\" src=\"${_dummyImgSrc}\" />`;\n\n            $currentSlide.addClass('lg-first-slide');\n            this.outer.addClass('lg-first-slide-loading');\n\n            return dummyImgContent;\n        }\n        return '';\n    }\n\n    setImgMarkup(src: string, $currentSlide: lgQuery, index: number): void {\n        const currentGalleryItem = this.galleryItems[index];\n        const { alt, srcset, sizes, sources } = currentGalleryItem;\n\n        // Use the thumbnail as dummy image which will be resized to actual image size and\n        // displayed on top of actual image\n        let imgContent = '';\n        const altAttr = alt ? 'alt=\"' + alt + '\"' : '';\n\n        if (this.isFirstSlideWithZoomAnimation()) {\n            imgContent = this.getDummyImageContent(\n                $currentSlide,\n                index,\n                altAttr,\n            );\n        } else {\n            imgContent = utils.getImgMarkup(\n                index,\n                src,\n                altAttr,\n                srcset,\n                sizes,\n                sources,\n            );\n        }\n        const imgMarkup = `<picture class=\"lg-img-wrap\"> ${imgContent}</picture>`;\n        $currentSlide.prepend(imgMarkup);\n    }\n\n    onSlideObjectLoad(\n        $slide: lgQuery,\n        isHTML5VideoWithoutPoster: boolean,\n        onLoad: () => void,\n        onError: () => void,\n    ): void {\n        const mediaObject = $slide.find('.lg-object').first();\n        if (\n            utils.isImageLoaded(mediaObject.get() as HTMLImageElement) ||\n            isHTML5VideoWithoutPoster\n        ) {\n            onLoad();\n        } else {\n            mediaObject.on('load.lg error.lg', () => {\n                onLoad && onLoad();\n            });\n            mediaObject.on('error.lg', () => {\n                onError && onError();\n            });\n        }\n    }\n\n    /**\n     *\n     * @param $el Current slide item\n     * @param index\n     * @param delay Delay is 0 except first time\n     * @param speed Speed is same as delay, except it is 0 if gallery is opened via hash plugin\n     * @param isFirstSlide\n     */\n    onLgObjectLoad(\n        currentSlide: lgQuery,\n        index: number,\n        delay: number,\n        speed: number,\n        isFirstSlide: boolean,\n        isHTML5VideoWithoutPoster: boolean,\n    ): void {\n        this.onSlideObjectLoad(\n            currentSlide,\n            isHTML5VideoWithoutPoster,\n            () => {\n                this.triggerSlideItemLoad(\n                    currentSlide,\n                    index,\n                    delay,\n                    speed,\n                    isFirstSlide,\n                );\n            },\n            () => {\n                currentSlide.addClass('lg-complete lg-complete_');\n                currentSlide.html(\n                    '<span class=\"lg-error-msg\">Oops... Failed to load content...</span>',\n                );\n            },\n        );\n    }\n\n    triggerSlideItemLoad(\n        $currentSlide: lgQuery,\n        index: number,\n        delay: number,\n        speed: number,\n        isFirstSlide: boolean,\n    ): void {\n        const currentGalleryItem = this.galleryItems[index];\n\n        // Adding delay for video slides without poster for better performance and user experience\n        // Videos should start playing once once the gallery is completely loaded\n        const _speed =\n            isFirstSlide &&\n            this.getSlideType(currentGalleryItem) === 'video' &&\n            !currentGalleryItem.poster\n                ? speed\n                : 0;\n        setTimeout(() => {\n            $currentSlide.addClass('lg-complete lg-complete_');\n            this.LGel.trigger<SlideItemLoadDetail>(lGEvents.slideItemLoad, {\n                index,\n                delay: delay || 0,\n                isFirstSlide,\n            });\n        }, _speed);\n    }\n\n    isFirstSlideWithZoomAnimation(): boolean {\n        return !!(\n            !this.lGalleryOn &&\n            this.zoomFromOrigin &&\n            this.currentImageSize\n        );\n    }\n\n    // Add video slideInfo\n    addSlideVideoInfo(items: GalleryItem[]): void {\n        items.forEach((element, index) => {\n            element.__slideVideoInfo = utils.isVideo(\n                element.src as string,\n                !!element.video,\n                index,\n            );\n            if (\n                element.__slideVideoInfo &&\n                this.settings.loadYouTubePoster &&\n                !element.poster &&\n                element.__slideVideoInfo.youtube\n            ) {\n                element.poster = `//img.youtube.com/vi/${element.__slideVideoInfo.youtube[1]}/maxresdefault.jpg`;\n            }\n        });\n    }\n\n    /**\n     *  Load slide content into slide.\n     *  This is used to load content into slides that is not visible too\n     *  @param {Number} index - index of the slide.\n     *  @param {Boolean} rec - if true call loadcontent() function again.\n     */\n    loadContent(index: number, rec: boolean): void {\n        const currentGalleryItem = this.galleryItems[index];\n        const $currentSlide = $LG(this.getSlideItemId(index));\n\n        const { poster, srcset, sizes, sources } = currentGalleryItem;\n        let { src } = currentGalleryItem;\n\n        const video = currentGalleryItem.video;\n\n        const _html5Video =\n            video && typeof video === 'string' ? JSON.parse(video) : video;\n\n        if (currentGalleryItem.responsive) {\n            const srcDyItms = currentGalleryItem.responsive.split(',');\n            src = utils.getResponsiveSrc(srcDyItms) || src;\n        }\n\n        const videoInfo = currentGalleryItem.__slideVideoInfo;\n        let lgVideoStyle = '';\n\n        const iframe = !!currentGalleryItem.iframe;\n\n        const isFirstSlide = !this.lGalleryOn;\n\n        // delay for adding complete class. it is 0 except first time.\n        let delay = 0;\n        if (isFirstSlide) {\n            if (this.zoomFromOrigin && this.currentImageSize) {\n                delay = this.settings.startAnimationDuration + 10;\n            } else {\n                delay = this.settings.backdropDuration + 10;\n            }\n        }\n\n        if (!$currentSlide.hasClass('lg-loaded')) {\n            if (videoInfo) {\n                const { top, bottom } = this.mediaContainerPosition;\n                const videoSize = utils.getSize(\n                    this.items[index],\n                    this.outer,\n                    top + bottom,\n                    videoInfo && this.settings.videoMaxSize,\n                );\n                lgVideoStyle = this.getVideoContStyle(videoSize);\n            }\n            if (iframe) {\n                const markup = utils.getIframeMarkup(\n                    this.settings.iframeWidth,\n                    this.settings.iframeHeight,\n                    this.settings.iframeMaxWidth,\n                    this.settings.iframeMaxHeight,\n                    src,\n                    currentGalleryItem.iframeTitle,\n                );\n                $currentSlide.prepend(markup);\n            } else if (poster) {\n                let dummyImg = '';\n                const hasStartAnimation =\n                    isFirstSlide &&\n                    this.zoomFromOrigin &&\n                    this.currentImageSize;\n                if (hasStartAnimation) {\n                    dummyImg = this.getDummyImageContent(\n                        $currentSlide,\n                        index,\n                        '',\n                    );\n                }\n\n                const markup = utils.getVideoPosterMarkup(\n                    poster,\n                    dummyImg || '',\n                    lgVideoStyle,\n                    this.settings.strings['playVideo'],\n                    videoInfo,\n                );\n                $currentSlide.prepend(markup);\n            } else if (videoInfo) {\n                const markup = `<div class=\"lg-video-cont \" style=\"${lgVideoStyle}\"></div>`;\n                $currentSlide.prepend(markup);\n            } else {\n                this.setImgMarkup(src as string, $currentSlide, index);\n                if (srcset || sources) {\n                    const $img = $currentSlide.find('.lg-object');\n                    this.initPictureFill($img);\n                }\n            }\n            if (poster || videoInfo) {\n                this.LGel.trigger(lGEvents.hasVideo, {\n                    index,\n                    src: src,\n                    html5Video: _html5Video,\n                    hasPoster: !!poster,\n                });\n            }\n\n            this.LGel.trigger<AfterAppendSlideEventDetail>(\n                lGEvents.afterAppendSlide,\n                { index },\n            );\n\n            if (\n                this.lGalleryOn &&\n                this.settings.appendSubHtmlTo === '.lg-item'\n            ) {\n                this.addHtml(index);\n            }\n        }\n\n        // For first time add some delay for displaying the start animation.\n        let _speed = 0;\n\n        // Do not change the delay value because it is required for zoom plugin.\n        // If gallery opened from direct url (hash) speed value should be 0\n        if (delay && !$LG(document.body).hasClass('lg-from-hash')) {\n            _speed = delay;\n        }\n\n        // Only for first slide and zoomFromOrigin is enabled\n        if (this.isFirstSlideWithZoomAnimation()) {\n            setTimeout(() => {\n                $currentSlide\n                    .removeClass('lg-start-end-progress lg-start-progress')\n                    .removeAttr('style');\n            }, this.settings.startAnimationDuration + 100);\n            if (!$currentSlide.hasClass('lg-loaded')) {\n                setTimeout(() => {\n                    if (this.getSlideType(currentGalleryItem) === 'image') {\n                        const { alt } = currentGalleryItem;\n                        const altAttr = alt ? 'alt=\"' + alt + '\"' : '';\n\n                        $currentSlide\n                            .find('.lg-img-wrap')\n                            .append(\n                                utils.getImgMarkup(\n                                    index,\n                                    src as string,\n                                    altAttr,\n                                    srcset,\n                                    sizes,\n                                    currentGalleryItem.sources,\n                                ),\n                            );\n                        if (srcset || sources) {\n                            const $img = $currentSlide.find('.lg-object');\n                            this.initPictureFill($img);\n                        }\n                    }\n                    if (\n                        this.getSlideType(currentGalleryItem) === 'image' ||\n                        (this.getSlideType(currentGalleryItem) === 'video' &&\n                            poster)\n                    ) {\n                        this.onLgObjectLoad(\n                            $currentSlide,\n                            index,\n                            delay,\n                            _speed,\n                            true,\n                            false,\n                        );\n\n                        // load remaining slides once the slide is completely loaded\n                        this.onSlideObjectLoad(\n                            $currentSlide,\n                            !!(videoInfo && videoInfo.html5 && !poster),\n                            () => {\n                                this.loadContentOnFirstSlideLoad(\n                                    index,\n                                    $currentSlide,\n                                    _speed,\n                                );\n                            },\n                            () => {\n                                this.loadContentOnFirstSlideLoad(\n                                    index,\n                                    $currentSlide,\n                                    _speed,\n                                );\n                            },\n                        );\n                    }\n                }, this.settings.startAnimationDuration + 100);\n            }\n        }\n\n        // SLide content has been added to dom\n        $currentSlide.addClass('lg-loaded');\n\n        if (\n            !this.isFirstSlideWithZoomAnimation() ||\n            (this.getSlideType(currentGalleryItem) === 'video' && !poster)\n        ) {\n            this.onLgObjectLoad(\n                $currentSlide,\n                index,\n                delay,\n                _speed,\n                isFirstSlide,\n                !!(videoInfo && videoInfo.html5 && !poster),\n            );\n        }\n\n        // When gallery is opened once content is loaded (second time) need to add lg-complete class for css styling\n        if (\n            (!this.zoomFromOrigin || !this.currentImageSize) &&\n            $currentSlide.hasClass('lg-complete_') &&\n            !this.lGalleryOn\n        ) {\n            setTimeout(() => {\n                $currentSlide.addClass('lg-complete');\n            }, this.settings.backdropDuration);\n        }\n\n        // Content loaded\n        // Need to set lGalleryOn before calling preload function\n        this.lGalleryOn = true;\n\n        if (rec === true) {\n            if (!$currentSlide.hasClass('lg-complete_')) {\n                $currentSlide\n                    .find('.lg-object')\n                    .first()\n                    .on('load.lg error.lg', () => {\n                        this.preload(index);\n                    });\n            } else {\n                this.preload(index);\n            }\n        }\n    }\n\n    /**\n     * @desc Remove dummy image content and load next slides\n     * Called only for the first time if zoomFromOrigin animation is enabled\n     * @param index\n     * @param $currentSlide\n     * @param speed\n     */\n    loadContentOnFirstSlideLoad(\n        index: number,\n        $currentSlide: lgQuery,\n        speed: number,\n    ): void {\n        setTimeout(() => {\n            $currentSlide.find('.lg-dummy-img').remove();\n            $currentSlide.removeClass('lg-first-slide');\n            this.outer.removeClass('lg-first-slide-loading');\n            this.isDummyImageRemoved = true;\n            this.preload(index);\n        }, speed + 300);\n    }\n\n    getItemsToBeInsertedToDom(\n        index: number,\n        prevIndex: number,\n        numberOfItems = 0,\n    ): string[] {\n        const itemsToBeInsertedToDom: string[] = [];\n        // Minimum 2 items should be there\n        let possibleNumberOfItems = Math.max(numberOfItems, 3);\n        possibleNumberOfItems = Math.min(\n            possibleNumberOfItems,\n            this.galleryItems.length,\n        );\n        const prevIndexItem = `lg-item-${this.lgId}-${prevIndex}`;\n        if (this.galleryItems.length <= 3) {\n            this.galleryItems.forEach((_element, index) => {\n                itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${index}`);\n            });\n            return itemsToBeInsertedToDom;\n        }\n\n        if (index < (this.galleryItems.length - 1) / 2) {\n            for (\n                let idx = index;\n                idx > index - possibleNumberOfItems / 2 && idx >= 0;\n                idx--\n            ) {\n                itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${idx}`);\n            }\n            const numberOfExistingItems = itemsToBeInsertedToDom.length;\n            for (\n                let idx = 0;\n                idx < possibleNumberOfItems - numberOfExistingItems;\n                idx++\n            ) {\n                itemsToBeInsertedToDom.push(\n                    `lg-item-${this.lgId}-${index + idx + 1}`,\n                );\n            }\n        } else {\n            for (\n                let idx = index;\n                idx <= this.galleryItems.length - 1 &&\n                idx < index + possibleNumberOfItems / 2;\n                idx++\n            ) {\n                itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${idx}`);\n            }\n            const numberOfExistingItems = itemsToBeInsertedToDom.length;\n            for (\n                let idx = 0;\n                idx < possibleNumberOfItems - numberOfExistingItems;\n                idx++\n            ) {\n                itemsToBeInsertedToDom.push(\n                    `lg-item-${this.lgId}-${index - idx - 1}`,\n                );\n            }\n        }\n        if (this.settings.loop) {\n            if (index === this.galleryItems.length - 1) {\n                itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${0}`);\n            } else if (index === 0) {\n                itemsToBeInsertedToDom.push(\n                    `lg-item-${this.lgId}-${this.galleryItems.length - 1}`,\n                );\n            }\n        }\n        if (itemsToBeInsertedToDom.indexOf(prevIndexItem) === -1) {\n            itemsToBeInsertedToDom.push(`lg-item-${this.lgId}-${prevIndex}`);\n        }\n\n        return itemsToBeInsertedToDom;\n    }\n\n    organizeSlideItems(index: number, prevIndex: number): string[] {\n        const itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(\n            index,\n            prevIndex,\n            this.settings.numberOfSlideItemsInDom,\n        );\n\n        itemsToBeInsertedToDom.forEach((item) => {\n            if (this.currentItemsInDom.indexOf(item) === -1) {\n                this.$inner.append(`<div id=\"${item}\" class=\"lg-item\"></div>`);\n            }\n        });\n\n        this.currentItemsInDom.forEach((item) => {\n            if (itemsToBeInsertedToDom.indexOf(item) === -1) {\n                $LG(`#${item}`).remove();\n            }\n        });\n        return itemsToBeInsertedToDom;\n    }\n\n    /**\n     * Get previous index of the slide\n     */\n    getPreviousSlideIndex(): number {\n        let prevIndex = 0;\n        try {\n            const currentItemId = this.outer\n                .find('.lg-current')\n                .first()\n                .attr('id');\n            prevIndex = parseInt(currentItemId.split('-')[3]) || 0;\n        } catch (error) {\n            prevIndex = 0;\n        }\n        return prevIndex;\n    }\n\n    setDownloadValue(index: number): void {\n        if (this.settings.download) {\n            const currentGalleryItem = this.galleryItems[index];\n            const hideDownloadBtn =\n                currentGalleryItem.downloadUrl === false ||\n                currentGalleryItem.downloadUrl === 'false';\n            if (hideDownloadBtn) {\n                this.outer.addClass('lg-hide-download');\n            } else {\n                const $download = this.getElementById('lg-download');\n                this.outer.removeClass('lg-hide-download');\n                $download.attr(\n                    'href',\n                    currentGalleryItem.downloadUrl ||\n                        (currentGalleryItem.src as string),\n                );\n                if (currentGalleryItem.download) {\n                    $download.attr('download', currentGalleryItem.download);\n                }\n            }\n        }\n    }\n\n    makeSlideAnimation(\n        direction: 'next' | 'prev',\n        currentSlideItem: lgQuery,\n        previousSlideItem: lgQuery,\n    ): void {\n        if (this.lGalleryOn) {\n            previousSlideItem.addClass('lg-slide-progress');\n        }\n        setTimeout(\n            () => {\n                // remove all transitions\n                this.outer.addClass('lg-no-trans');\n\n                this.outer\n                    .find('.lg-item')\n                    .removeClass('lg-prev-slide lg-next-slide');\n\n                if (direction === 'prev') {\n                    //prevslide\n                    currentSlideItem.addClass('lg-prev-slide');\n                    previousSlideItem.addClass('lg-next-slide');\n                } else {\n                    // next slide\n                    currentSlideItem.addClass('lg-next-slide');\n                    previousSlideItem.addClass('lg-prev-slide');\n                }\n\n                // give 50 ms for browser to add/remove class\n                setTimeout(() => {\n                    this.outer.find('.lg-item').removeClass('lg-current');\n\n                    currentSlideItem.addClass('lg-current');\n\n                    // reset all transitions\n                    this.outer.removeClass('lg-no-trans');\n                }, 50);\n            },\n            this.lGalleryOn ? this.settings.slideDelay : 0,\n        );\n    }\n\n    /**\n     * Goto a specific slide.\n     * @param {Number} index - index of the slide\n     * @param {Boolean} fromTouch - true if slide function called via touch event or mouse drag\n     * @param {Boolean} fromThumb - true if slide function called via thumbnail click\n     * @param {String} direction - Direction of the slide(next/prev)\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  // to go to 3rd slide\n     *  plugin.slide(2);\n     *\n     */\n    slide(\n        index: number,\n        fromTouch?: boolean,\n        fromThumb?: boolean,\n        direction?: SlideDirection | false,\n    ): void {\n        const prevIndex = this.getPreviousSlideIndex();\n        this.currentItemsInDom = this.organizeSlideItems(index, prevIndex);\n\n        // Prevent multiple call, Required for hsh plugin\n        if (this.lGalleryOn && prevIndex === index) {\n            return;\n        }\n\n        const numberOfGalleryItems = this.galleryItems.length;\n\n        if (!this.lgBusy) {\n            if (this.settings.counter) {\n                this.updateCurrentCounter(index);\n            }\n\n            const currentSlideItem = this.getSlideItem(index);\n            const previousSlideItem = this.getSlideItem(prevIndex);\n\n            const currentGalleryItem = this.galleryItems[index];\n            const videoInfo = currentGalleryItem.__slideVideoInfo;\n\n            this.outer.attr(\n                'data-lg-slide-type',\n                this.getSlideType(currentGalleryItem),\n            );\n            this.setDownloadValue(index);\n\n            if (videoInfo) {\n                const { top, bottom } = this.mediaContainerPosition;\n                const videoSize = utils.getSize(\n                    this.items[index],\n                    this.outer,\n                    top + bottom,\n                    videoInfo && this.settings.videoMaxSize,\n                );\n                this.resizeVideoSlide(index, videoSize);\n            }\n\n            this.LGel.trigger<BeforeSlideDetail>(lGEvents.beforeSlide, {\n                prevIndex,\n                index,\n                fromTouch: !!fromTouch,\n                fromThumb: !!fromThumb,\n            });\n\n            this.lgBusy = true;\n\n            clearTimeout(this.hideBarTimeout);\n\n            this.arrowDisable(index);\n\n            if (!direction) {\n                if (index < prevIndex) {\n                    direction = 'prev';\n                } else if (index > prevIndex) {\n                    direction = 'next';\n                }\n            }\n\n            if (!fromTouch) {\n                this.makeSlideAnimation(\n                    direction as SlideDirection,\n                    currentSlideItem,\n                    previousSlideItem,\n                );\n            } else {\n                this.outer\n                    .find('.lg-item')\n                    .removeClass('lg-prev-slide lg-current lg-next-slide');\n                let touchPrev;\n                let touchNext;\n                if (numberOfGalleryItems > 2) {\n                    touchPrev = index - 1;\n                    touchNext = index + 1;\n\n                    if (index === 0 && prevIndex === numberOfGalleryItems - 1) {\n                        // next slide\n                        touchNext = 0;\n                        touchPrev = numberOfGalleryItems - 1;\n                    } else if (\n                        index === numberOfGalleryItems - 1 &&\n                        prevIndex === 0\n                    ) {\n                        // prev slide\n                        touchNext = 0;\n                        touchPrev = numberOfGalleryItems - 1;\n                    }\n                } else {\n                    touchPrev = 0;\n                    touchNext = 1;\n                }\n\n                if (direction === 'prev') {\n                    this.getSlideItem(touchNext).addClass('lg-next-slide');\n                } else {\n                    this.getSlideItem(touchPrev).addClass('lg-prev-slide');\n                }\n\n                currentSlideItem.addClass('lg-current');\n            }\n\n            // Do not put load content in set timeout as it needs to load immediately when the gallery is opened\n            if (!this.lGalleryOn) {\n                this.loadContent(index, true);\n            } else {\n                setTimeout(() => {\n                    this.loadContent(index, true);\n                    // Add title if this.settings.appendSubHtmlTo === lg-sub-html\n                    if (this.settings.appendSubHtmlTo !== '.lg-item') {\n                        this.addHtml(index);\n                    }\n                }, this.settings.speed + 50 + (fromTouch ? 0 : this.settings.slideDelay));\n            }\n\n            setTimeout(() => {\n                this.lgBusy = false;\n                previousSlideItem.removeClass('lg-slide-progress');\n                this.LGel.trigger(lGEvents.afterSlide, {\n                    prevIndex: prevIndex,\n                    index,\n                    fromTouch,\n                    fromThumb,\n                });\n            }, (this.lGalleryOn ? this.settings.speed + 100 : 100) + (fromTouch ? 0 : this.settings.slideDelay));\n        }\n\n        this.index = index;\n    }\n\n    updateCurrentCounter(index: number): void {\n        this.getElementById('lg-counter-current').html(index + 1 + '');\n    }\n\n    updateCounterTotal(): void {\n        this.getElementById('lg-counter-all').html(\n            this.galleryItems.length + '',\n        );\n    }\n\n    getSlideType(item: GalleryItem): 'video' | 'iframe' | 'image' {\n        if (item.__slideVideoInfo) {\n            return 'video';\n        } else if (item.iframe) {\n            return 'iframe';\n        } else {\n            return 'image';\n        }\n    }\n\n    touchMove(startCoords: Coords, endCoords: Coords, e?: TouchEvent): void {\n        const distanceX = endCoords.pageX - startCoords.pageX;\n        const distanceY = endCoords.pageY - startCoords.pageY;\n        let allowSwipe = false;\n\n        if (this.swipeDirection) {\n            allowSwipe = true;\n        } else {\n            if (Math.abs(distanceX) > 15) {\n                this.swipeDirection = 'horizontal';\n                allowSwipe = true;\n            } else if (Math.abs(distanceY) > 15) {\n                this.swipeDirection = 'vertical';\n                allowSwipe = true;\n            }\n        }\n\n        if (!allowSwipe) {\n            return;\n        }\n\n        const $currentSlide = this.getSlideItem(this.index);\n\n        if (this.swipeDirection === 'horizontal') {\n            e?.preventDefault();\n            // reset opacity and transition duration\n            this.outer.addClass('lg-dragging');\n\n            // move current slide\n            this.setTranslate($currentSlide, distanceX, 0);\n\n            // move next and prev slide with current slide\n            const width = $currentSlide.get().offsetWidth;\n            const slideWidthAmount = (width * 15) / 100;\n            const gutter = slideWidthAmount - Math.abs((distanceX * 10) / 100);\n            this.setTranslate(\n                this.outer.find('.lg-prev-slide').first(),\n                -width + distanceX - gutter,\n                0,\n            );\n\n            this.setTranslate(\n                this.outer.find('.lg-next-slide').first(),\n                width + distanceX + gutter,\n                0,\n            );\n        } else if (this.swipeDirection === 'vertical') {\n            if (this.settings.swipeToClose) {\n                e?.preventDefault();\n                this.$container.addClass('lg-dragging-vertical');\n\n                const opacity = 1 - Math.abs(distanceY) / window.innerHeight;\n                this.$backdrop.css('opacity', opacity);\n\n                const scale = 1 - Math.abs(distanceY) / (window.innerWidth * 2);\n                this.setTranslate($currentSlide, 0, distanceY, scale, scale);\n                if (Math.abs(distanceY) > 100) {\n                    this.outer\n                        .addClass('lg-hide-items')\n                        .removeClass('lg-components-open');\n                }\n            }\n        }\n    }\n\n    touchEnd(endCoords: Coords, startCoords: Coords, event: TouchEvent): void {\n        let distance;\n\n        // keep slide animation for any mode while dragg/swipe\n        if (this.settings.mode !== 'lg-slide') {\n            this.outer.addClass('lg-slide');\n        }\n\n        // set transition duration\n        setTimeout(() => {\n            this.$container.removeClass('lg-dragging-vertical');\n            this.outer\n                .removeClass('lg-dragging lg-hide-items')\n                .addClass('lg-components-open');\n\n            let triggerClick = true;\n\n            if (this.swipeDirection === 'horizontal') {\n                distance = endCoords.pageX - startCoords.pageX;\n                const distanceAbs = Math.abs(\n                    endCoords.pageX - startCoords.pageX,\n                );\n                if (\n                    distance < 0 &&\n                    distanceAbs > this.settings.swipeThreshold\n                ) {\n                    this.goToNextSlide(true);\n                    triggerClick = false;\n                } else if (\n                    distance > 0 &&\n                    distanceAbs > this.settings.swipeThreshold\n                ) {\n                    this.goToPrevSlide(true);\n                    triggerClick = false;\n                }\n            } else if (this.swipeDirection === 'vertical') {\n                distance = Math.abs(endCoords.pageY - startCoords.pageY);\n                if (\n                    this.settings.closable &&\n                    this.settings.swipeToClose &&\n                    distance > 100\n                ) {\n                    this.closeGallery();\n                    return;\n                } else {\n                    this.$backdrop.css('opacity', 1);\n                }\n            }\n            this.outer.find('.lg-item').removeAttr('style');\n\n            if (\n                triggerClick &&\n                Math.abs(endCoords.pageX - startCoords.pageX) < 5\n            ) {\n                // Trigger click if distance is less than 5 pix\n                const target = $LG(event.target);\n                if (this.isPosterElement(target)) {\n                    this.LGel.trigger(lGEvents.posterClick);\n                }\n            }\n\n            this.swipeDirection = undefined;\n        });\n\n        // remove slide class once drag/swipe is completed if mode is not slide\n        setTimeout(() => {\n            if (\n                !this.outer.hasClass('lg-dragging') &&\n                this.settings.mode !== 'lg-slide'\n            ) {\n                this.outer.removeClass('lg-slide');\n            }\n        }, this.settings.speed + 100);\n    }\n\n    enableSwipe(): void {\n        let startCoords: Coords = {} as Coords;\n        let endCoords: Coords = {} as Coords;\n        let isMoved = false;\n        let isSwiping = false;\n\n        if (this.settings.enableSwipe) {\n            this.$inner.on('touchstart.lg', (e) => {\n                this.dragOrSwipeEnabled = true;\n                const $item = this.getSlideItem(this.index);\n                if (\n                    ($LG(e.target).hasClass('lg-item') ||\n                        $item.get().contains(e.target)) &&\n                    !this.outer.hasClass('lg-zoomed') &&\n                    !this.lgBusy &&\n                    e.touches.length === 1\n                ) {\n                    isSwiping = true;\n                    this.touchAction = 'swipe';\n                    this.manageSwipeClass();\n                    startCoords = {\n                        pageX: e.touches[0].pageX,\n                        pageY: e.touches[0].pageY,\n                    };\n                }\n            });\n\n            this.$inner.on('touchmove.lg', (e) => {\n                if (\n                    isSwiping &&\n                    this.touchAction === 'swipe' &&\n                    e.touches.length === 1\n                ) {\n                    endCoords = {\n                        pageX: e.touches[0].pageX,\n                        pageY: e.touches[0].pageY,\n                    };\n                    this.touchMove(startCoords, endCoords, e);\n                    isMoved = true;\n                }\n            });\n\n            this.$inner.on('touchend.lg', (event: TouchEvent) => {\n                if (this.touchAction === 'swipe') {\n                    if (isMoved) {\n                        isMoved = false;\n                        this.touchEnd(endCoords, startCoords, event);\n                    } else if (isSwiping) {\n                        const target = $LG(event.target);\n                        if (this.isPosterElement(target)) {\n                            this.LGel.trigger(lGEvents.posterClick);\n                        }\n                    }\n                    this.touchAction = undefined;\n                    isSwiping = false;\n                }\n            });\n        }\n    }\n\n    enableDrag(): void {\n        let startCoords: Coords = {} as Coords;\n        let endCoords: Coords = {} as Coords;\n        let isDraging = false;\n        let isMoved = false;\n        if (this.settings.enableDrag) {\n            this.outer.on('mousedown.lg', (e) => {\n                this.dragOrSwipeEnabled = true;\n                const $item = this.getSlideItem(this.index);\n                if (\n                    $LG(e.target).hasClass('lg-item') ||\n                    $item.get().contains(e.target)\n                ) {\n                    if (!this.outer.hasClass('lg-zoomed') && !this.lgBusy) {\n                        e.preventDefault();\n                        if (!this.lgBusy) {\n                            this.manageSwipeClass();\n                            startCoords = {\n                                pageX: e.pageX,\n                                pageY: e.pageY,\n                            };\n                            isDraging = true;\n\n                            // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\n                            this.outer.get().scrollLeft += 1;\n                            this.outer.get().scrollLeft -= 1;\n\n                            // *\n\n                            this.outer\n                                .removeClass('lg-grab')\n                                .addClass('lg-grabbing');\n\n                            this.LGel.trigger(lGEvents.dragStart);\n                        }\n                    }\n                }\n            });\n\n            $LG(window).on(`mousemove.lg.global${this.lgId}`, (e) => {\n                if (isDraging && this.lgOpened) {\n                    isMoved = true;\n                    endCoords = {\n                        pageX: e.pageX,\n                        pageY: e.pageY,\n                    };\n                    this.touchMove(startCoords, endCoords);\n                    this.LGel.trigger(lGEvents.dragMove);\n                }\n            });\n\n            $LG(window).on(`mouseup.lg.global${this.lgId}`, (event) => {\n                if (!this.lgOpened) {\n                    return;\n                }\n                const target = $LG(event.target);\n                if (isMoved) {\n                    isMoved = false;\n                    this.touchEnd(endCoords, startCoords, event);\n                    this.LGel.trigger(lGEvents.dragEnd);\n                } else if (this.isPosterElement(target)) {\n                    this.LGel.trigger(lGEvents.posterClick);\n                }\n\n                // Prevent execution on click\n                if (isDraging) {\n                    isDraging = false;\n                    this.outer.removeClass('lg-grabbing').addClass('lg-grab');\n                }\n            });\n        }\n    }\n\n    triggerPosterClick(): void {\n        this.$inner.on('click.lg', (event) => {\n            if (\n                !this.dragOrSwipeEnabled &&\n                this.isPosterElement($LG(event.target))\n            ) {\n                this.LGel.trigger(lGEvents.posterClick);\n            }\n        });\n    }\n\n    manageSwipeClass(): void {\n        let _touchNext = this.index + 1;\n        let _touchPrev = this.index - 1;\n        if (this.settings.loop && this.galleryItems.length > 2) {\n            if (this.index === 0) {\n                _touchPrev = this.galleryItems.length - 1;\n            } else if (this.index === this.galleryItems.length - 1) {\n                _touchNext = 0;\n            }\n        }\n\n        this.outer.find('.lg-item').removeClass('lg-next-slide lg-prev-slide');\n        if (_touchPrev > -1) {\n            this.getSlideItem(_touchPrev).addClass('lg-prev-slide');\n        }\n\n        this.getSlideItem(_touchNext).addClass('lg-next-slide');\n    }\n\n    /**\n     * Go to next slide\n     * @param {Boolean} fromTouch - true if slide function called via touch event\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  plugin.goToNextSlide();\n     * @see <a href=\"/demos/methods/\">Demo</a>\n     */\n    goToNextSlide(fromTouch?: boolean): void {\n        let _loop = this.settings.loop;\n        if (fromTouch && this.galleryItems.length < 3) {\n            _loop = false;\n        }\n\n        if (!this.lgBusy) {\n            if (this.index + 1 < this.galleryItems.length) {\n                this.index++;\n                this.LGel.trigger(lGEvents.beforeNextSlide, {\n                    index: this.index,\n                });\n                this.slide(this.index, !!fromTouch, false, 'next');\n            } else {\n                if (_loop) {\n                    this.index = 0;\n                    this.LGel.trigger(lGEvents.beforeNextSlide, {\n                        index: this.index,\n                    });\n                    this.slide(this.index, !!fromTouch, false, 'next');\n                } else if (this.settings.slideEndAnimation && !fromTouch) {\n                    this.outer.addClass('lg-right-end');\n                    setTimeout(() => {\n                        this.outer.removeClass('lg-right-end');\n                    }, 400);\n                }\n            }\n        }\n    }\n\n    /**\n     * Go to previous slides\n     * @param {Boolean} fromTouch - true if slide function called via touch event\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery({});\n     *  plugin.goToPrevSlide();\n     * @see <a href=\"/demos/methods/\">Demo</a>\n     *\n     */\n    goToPrevSlide(fromTouch?: boolean): void {\n        let _loop = this.settings.loop;\n        if (fromTouch && this.galleryItems.length < 3) {\n            _loop = false;\n        }\n\n        if (!this.lgBusy) {\n            if (this.index > 0) {\n                this.index--;\n                this.LGel.trigger(lGEvents.beforePrevSlide, {\n                    index: this.index,\n                    fromTouch,\n                });\n                this.slide(this.index, !!fromTouch, false, 'prev');\n            } else {\n                if (_loop) {\n                    this.index = this.galleryItems.length - 1;\n                    this.LGel.trigger(lGEvents.beforePrevSlide, {\n                        index: this.index,\n                        fromTouch,\n                    });\n                    this.slide(this.index, !!fromTouch, false, 'prev');\n                } else if (this.settings.slideEndAnimation && !fromTouch) {\n                    this.outer.addClass('lg-left-end');\n                    setTimeout(() => {\n                        this.outer.removeClass('lg-left-end');\n                    }, 400);\n                }\n            }\n        }\n    }\n\n    keyPress(): void {\n        $LG(window).on(`keydown.lg.global${this.lgId}`, (e) => {\n            if (\n                this.lgOpened &&\n                this.settings.escKey === true &&\n                e.keyCode === 27\n            ) {\n                e.preventDefault();\n                if (\n                    this.settings.allowMediaOverlap &&\n                    this.outer.hasClass('lg-can-toggle') &&\n                    this.outer.hasClass('lg-components-open')\n                ) {\n                    this.outer.removeClass('lg-components-open');\n                } else {\n                    this.closeGallery();\n                }\n            }\n            if (this.lgOpened && this.galleryItems.length > 1) {\n                if (e.keyCode === 37) {\n                    e.preventDefault();\n                    this.goToPrevSlide();\n                }\n\n                if (e.keyCode === 39) {\n                    e.preventDefault();\n                    this.goToNextSlide();\n                }\n            }\n        });\n    }\n\n    arrow(): void {\n        this.getElementById('lg-prev').on('click.lg', () => {\n            this.goToPrevSlide();\n        });\n        this.getElementById('lg-next').on('click.lg', () => {\n            this.goToNextSlide();\n        });\n    }\n\n    arrowDisable(index: number): void {\n        // Disable arrows if settings.hideControlOnEnd is true\n        if (!this.settings.loop && this.settings.hideControlOnEnd) {\n            const $prev = this.getElementById('lg-prev');\n            const $next = this.getElementById('lg-next');\n            if (index + 1 === this.galleryItems.length) {\n                $next.attr('disabled', 'disabled').addClass('disabled');\n            } else {\n                $next.removeAttr('disabled').removeClass('disabled');\n            }\n\n            if (index === 0) {\n                $prev.attr('disabled', 'disabled').addClass('disabled');\n            } else {\n                $prev.removeAttr('disabled').removeClass('disabled');\n            }\n        }\n    }\n\n    setTranslate(\n        $el: lgQuery,\n        xValue: number,\n        yValue: number,\n        scaleX = 1,\n        scaleY = 1,\n    ): void {\n        $el.css(\n            'transform',\n            'translate3d(' +\n                xValue +\n                'px, ' +\n                yValue +\n                'px, 0px) scale3d(' +\n                scaleX +\n                ', ' +\n                scaleY +\n                ', 1)',\n        );\n    }\n\n    mousewheel(): void {\n        let lastCall = 0;\n        this.outer.on('wheel.lg', (e) => {\n            if (!e.deltaY || this.galleryItems.length < 2) {\n                return;\n            }\n            e.preventDefault();\n            const now = new Date().getTime();\n            if (now - lastCall < 1000) {\n                return;\n            }\n            lastCall = now;\n            if (e.deltaY > 0) {\n                this.goToNextSlide();\n            } else if (e.deltaY < 0) {\n                this.goToPrevSlide();\n            }\n        });\n    }\n\n    isSlideElement(target: lgQuery): boolean {\n        return (\n            target.hasClass('lg-outer') ||\n            target.hasClass('lg-item') ||\n            target.hasClass('lg-img-wrap')\n        );\n    }\n\n    isPosterElement(target: lgQuery): boolean {\n        const playButton = this.getSlideItem(this.index)\n            .find('.lg-video-play-button')\n            .get();\n        return (\n            target.hasClass('lg-video-poster') ||\n            target.hasClass('lg-video-play-button') ||\n            (playButton && playButton.contains(target.get()))\n        );\n    }\n\n    /**\n     * Maximize minimize inline gallery.\n     * @category lGPublicMethods\n     */\n    toggleMaximize(): void {\n        this.getElementById('lg-maximize').on('click.lg', () => {\n            this.$container.toggleClass('lg-inline');\n            this.refreshOnResize();\n        });\n    }\n\n    invalidateItems(): void {\n        for (let index = 0; index < this.items.length; index++) {\n            const element = this.items[index];\n            const $element = $LG(element);\n            $element.off(`click.lgcustom-item-${$element.attr('data-lg-id')}`);\n        }\n    }\n\n    trapFocus(): void {\n        this.$container.get().focus({\n            preventScroll: true,\n        });\n        $LG(window).on(`keydown.lg.global${this.lgId}`, (e) => {\n            if (!this.lgOpened) {\n                return;\n            }\n\n            const isTabPressed = e.key === 'Tab' || e.keyCode === 9;\n            if (!isTabPressed) {\n                return;\n            }\n            const focusableEls = utils.getFocusableElements(\n                this.$container.get(),\n            );\n            const firstFocusableEl = focusableEls[0];\n            const lastFocusableEl = focusableEls[focusableEls.length - 1];\n\n            if (e.shiftKey) {\n                if (document.activeElement === firstFocusableEl) {\n                    (lastFocusableEl as HTMLElement).focus();\n                    e.preventDefault();\n                }\n            } else {\n                if (document.activeElement === lastFocusableEl) {\n                    (firstFocusableEl as HTMLElement).focus();\n                    e.preventDefault();\n                }\n            }\n        });\n    }\n\n    manageCloseGallery(): void {\n        if (!this.settings.closable) return;\n        let mousedown = false;\n        this.getElementById('lg-close').on('click.lg', () => {\n            this.closeGallery();\n        });\n\n        if (this.settings.closeOnTap) {\n            // If you drag the slide and release outside gallery gets close on chrome\n            // for preventing this check mousedown and mouseup happened on .lg-item or lg-outer\n            this.outer.on('mousedown.lg', (e) => {\n                const target = $LG(e.target);\n                if (this.isSlideElement(target)) {\n                    mousedown = true;\n                } else {\n                    mousedown = false;\n                }\n            });\n\n            this.outer.on('mousemove.lg', () => {\n                mousedown = false;\n            });\n\n            this.outer.on('mouseup.lg', (e) => {\n                const target = $LG(e.target);\n                if (this.isSlideElement(target) && mousedown) {\n                    if (!this.outer.hasClass('lg-dragging')) {\n                        this.closeGallery();\n                    }\n                }\n            });\n        }\n    }\n\n    /**\n     * Close lightGallery if it is opened.\n     *\n     * @description If closable is false in the settings, you need to pass true via closeGallery method to force close gallery\n     * @return returns the estimated time to close gallery completely including the close animation duration\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  plugin.closeGallery();\n     *\n     */\n    closeGallery(force?: boolean): number {\n        if (!this.lgOpened || (!this.settings.closable && !force)) {\n            return 0;\n        }\n        this.LGel.trigger(lGEvents.beforeClose);\n\n        if (this.settings.resetScrollPosition && !this.settings.hideScrollbar) {\n            $LG(window).scrollTop(this.prevScrollTop);\n        }\n\n        const currentItem = this.items[this.index];\n        let transform: string | undefined;\n        if (this.zoomFromOrigin && currentItem) {\n            const { top, bottom } = this.mediaContainerPosition;\n            const { __slideVideoInfo, poster } = this.galleryItems[this.index];\n            const imageSize = utils.getSize(\n                currentItem,\n                this.outer,\n                top + bottom,\n                __slideVideoInfo && poster && this.settings.videoMaxSize,\n            );\n            transform = utils.getTransform(\n                currentItem,\n                this.outer,\n                top,\n                bottom,\n                imageSize,\n            );\n        }\n        if (this.zoomFromOrigin && transform) {\n            this.outer.addClass('lg-closing lg-zoom-from-image');\n            this.getSlideItem(this.index)\n                .addClass('lg-start-end-progress')\n                .css(\n                    'transition-duration',\n                    this.settings.startAnimationDuration + 'ms',\n                )\n                .css('transform', transform);\n        } else {\n            this.outer.addClass('lg-hide-items');\n            // lg-zoom-from-image is used for setting the opacity to 1 if zoomFromOrigin is true\n            // If the closing item doesn't have the lg-size attribute, remove this class to avoid the closing css conflicts\n            this.outer.removeClass('lg-zoom-from-image');\n        }\n\n        // Unbind all events added by lightGallery\n        // @todo\n        //this.$el.off('.lg.tm');\n\n        this.destroyModules();\n\n        this.lGalleryOn = false;\n        this.isDummyImageRemoved = false;\n        this.zoomFromOrigin = this.settings.zoomFromOrigin;\n\n        clearTimeout(this.hideBarTimeout);\n        this.hideBarTimeout = false;\n        $LG('html').removeClass('lg-on');\n\n        this.outer.removeClass('lg-visible lg-components-open');\n\n        // Resetting opacity to 0 isd required as  vertical swipe to close function adds inline opacity.\n        this.$backdrop.removeClass('in').css('opacity', 0);\n\n        const removeTimeout =\n            this.zoomFromOrigin && transform\n                ? Math.max(\n                      this.settings.startAnimationDuration,\n                      this.settings.backdropDuration,\n                  )\n                : this.settings.backdropDuration;\n        this.$container.removeClass('lg-show-in');\n\n        // Once the closign animation is completed and gallery is invisible\n        setTimeout(() => {\n            if (this.zoomFromOrigin && transform) {\n                this.outer.removeClass('lg-zoom-from-image');\n            }\n            this.$container.removeClass('lg-show');\n\n            // Reset scrollbar\n            this.resetScrollBar();\n\n            // Need to remove inline opacity as it is used in the stylesheet as well\n            this.$backdrop\n                .removeAttr('style')\n                .css(\n                    'transition-duration',\n                    this.settings.backdropDuration + 'ms',\n                );\n\n            this.outer.removeClass(`lg-closing ${this.settings.startClass}`);\n\n            this.getSlideItem(this.index).removeClass('lg-start-end-progress');\n            this.$inner.empty();\n            if (this.lgOpened) {\n                this.LGel.trigger(lGEvents.afterClose, {\n                    instance: this,\n                });\n            }\n            if (this.$container.get()) {\n                this.$container.get().blur();\n            }\n\n            this.lgOpened = false;\n        }, removeTimeout + 100);\n        return removeTimeout + 100;\n    }\n\n    initModules(): void {\n        this.plugins.forEach((module) => {\n            try {\n                module.init();\n            } catch (err) {\n                console.warn(\n                    `lightGallery:- make sure lightGallery module is properly initiated`,\n                );\n            }\n        });\n    }\n\n    destroyModules(destroy?: true): void {\n        this.plugins.forEach((module) => {\n            try {\n                if (destroy) {\n                    module.destroy();\n                } else {\n                    module.closeGallery && module.closeGallery();\n                }\n            } catch (err) {\n                console.warn(\n                    `lightGallery:- make sure lightGallery module is properly destroyed`,\n                );\n            }\n        });\n    }\n\n    /**\n     * Refresh lightGallery with new set of children.\n     *\n     * @description This is useful to update the gallery when the child elements are changed without calling destroy method.\n     *\n     * If you are using dynamic mode, you can pass the modified array of dynamicEl as the first parameter to refresh the dynamic gallery\n     * @see <a href=\"/demos/dynamic-mode/\">Demo</a>\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  // Delete or add children, then call\n     *  plugin.refresh();\n     *\n     */\n    refresh(galleryItems?: GalleryItem[]): void {\n        if (!this.settings.dynamic) {\n            this.invalidateItems();\n        }\n        if (galleryItems) {\n            this.galleryItems = galleryItems;\n        } else {\n            this.galleryItems = this.getItems();\n        }\n        this.updateControls();\n        this.openGalleryOnItemClick();\n        this.LGel.trigger(lGEvents.updateSlides);\n    }\n\n    updateControls(): void {\n        this.addSlideVideoInfo(this.galleryItems);\n        this.updateCounterTotal();\n        this.manageSingleSlideClassName();\n    }\n\n    private destroyGallery(): void {\n        this.destroyModules(true);\n        if (!this.settings.dynamic) {\n            this.invalidateItems();\n        }\n        $LG(window).off(`.lg.global${this.lgId}`);\n        this.LGel.off('.lg');\n        this.$container.remove();\n    }\n\n    /**\n     * Destroy lightGallery.\n     * Destroy lightGallery and its plugin instances completely\n     *\n     * @description This method also calls CloseGallery function internally. Returns the time takes to completely close and destroy the instance.\n     * In case if you want to re-initialize lightGallery right after destroying it, initialize it only once the destroy process is completed.\n     * You can use refresh method most of the times.\n     * @category lGPublicMethods\n     * @example\n     *  const plugin = lightGallery();\n     *  plugin.destroy();\n     *\n     */\n    destroy(): number {\n        const closeTimeout = this.closeGallery(true);\n        if (closeTimeout) {\n            setTimeout(this.destroyGallery.bind(this), closeTimeout);\n        } else {\n            this.destroyGallery();\n        }\n        return closeTimeout;\n    }\n}\n","/**\n * lightgallery | 2.7.1 | January 11th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n!function(t,o){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=o():\"function\"==typeof define&&define.amd?define(o):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).lgAutoplay=o()}(this,(function(){\"use strict\";var t=function(){return(t=Object.assign||function(t){for(var o,e=1,s=arguments.length;e<s;e++)for(var r in o=arguments[e])Object.prototype.hasOwnProperty.call(o,r)&&(t[r]=o[r]);return t}).apply(this,arguments)},o=\"lgSlideItemLoad\",e=\"lgBeforeSlide\",s=\"lgAfterSlide\",r=\"lgDragStart\",i=\"lgDragEnd\",a=\"lgAutoplay\",l=\"lgAutoplayStart\",n=\"lgAutoplayStop\",u={autoplay:!0,slideShowAutoplay:!1,slideShowInterval:5e3,progressBar:!0,forceSlideShowAutoplay:!1,autoplayControls:!0,appendAutoplayControlsTo:\".lg-toolbar\",autoplayPluginStrings:{toggleAutoplay:\"Toggle Autoplay\"}};return function(){function p(o){return this.core=o,this.settings=t(t({},u),this.core.settings),this}return p.prototype.init=function(){var t=this;this.settings.autoplay&&(this.interval=!1,this.fromAuto=!0,this.pausedOnTouchDrag=!1,this.pausedOnSlideChange=!1,this.settings.autoplayControls&&this.controls(),this.settings.progressBar&&this.core.outer.append('<div class=\"lg-progress-bar\"><div class=\"lg-progress\"></div></div>'),this.settings.slideShowAutoplay&&this.core.LGel.once(o+\".autoplay\",(function(){t.startAutoPlay()})),this.core.LGel.on(r+\".autoplay touchstart.lg.autoplay\",(function(){t.interval&&(t.stopAutoPlay(),t.pausedOnTouchDrag=!0)})),this.core.LGel.on(i+\".autoplay touchend.lg.autoplay\",(function(){!t.interval&&t.pausedOnTouchDrag&&(t.startAutoPlay(),t.pausedOnTouchDrag=!1)})),this.core.LGel.on(e+\".autoplay\",(function(){t.showProgressBar(),!t.fromAuto&&t.interval?(t.stopAutoPlay(),t.pausedOnSlideChange=!0):t.pausedOnSlideChange=!1,t.fromAuto=!1})),this.core.LGel.on(s+\".autoplay\",(function(){t.pausedOnSlideChange&&!t.interval&&t.settings.forceSlideShowAutoplay&&(t.startAutoPlay(),t.pausedOnSlideChange=!1)})),this.showProgressBar())},p.prototype.showProgressBar=function(){var t=this;if(this.settings.progressBar&&this.fromAuto){var o=this.core.outer.find(\".lg-progress-bar\"),e=this.core.outer.find(\".lg-progress\");this.interval&&(e.removeAttr(\"style\"),o.removeClass(\"lg-start\"),setTimeout((function(){e.css(\"transition\",\"width \"+(t.core.settings.speed+t.settings.slideShowInterval)+\"ms ease 0s\"),o.addClass(\"lg-start\")}),20))}},p.prototype.controls=function(){var t=this,o='<button aria-label=\"'+this.settings.autoplayPluginStrings.toggleAutoplay+'\" type=\"button\" class=\"lg-autoplay-button lg-icon\"></button>';this.core.outer.find(this.settings.appendAutoplayControlsTo).append(o),this.core.outer.find(\".lg-autoplay-button\").first().on(\"click.lg.autoplay\",(function(){t.core.outer.hasClass(\"lg-show-autoplay\")?t.stopAutoPlay():t.interval||t.startAutoPlay()}))},p.prototype.startAutoPlay=function(){var t=this;this.core.outer.find(\".lg-progress\").css(\"transition\",\"width \"+(this.core.settings.speed+this.settings.slideShowInterval)+\"ms ease 0s\"),this.core.outer.addClass(\"lg-show-autoplay\"),this.core.outer.find(\".lg-progress-bar\").addClass(\"lg-start\"),this.core.LGel.trigger(l,{index:this.core.index}),this.interval=setInterval((function(){t.core.index+1<t.core.galleryItems.length?t.core.index++:t.core.index=0,t.core.LGel.trigger(a,{index:t.core.index}),t.fromAuto=!0,t.core.slide(t.core.index,!1,!1,\"next\")}),this.core.settings.speed+this.settings.slideShowInterval)},p.prototype.stopAutoPlay=function(){this.interval&&(this.core.LGel.trigger(n,{index:this.core.index}),this.core.outer.find(\".lg-progress\").removeAttr(\"style\"),this.core.outer.removeClass(\"lg-show-autoplay\"),this.core.outer.find(\".lg-progress-bar\").removeClass(\"lg-start\")),clearInterval(this.interval),this.interval=!1},p.prototype.closeGallery=function(){this.stopAutoPlay()},p.prototype.destroy=function(){this.settings.autoplay&&this.core.outer.find(\".lg-progress-bar\").remove(),this.core.LGel.off(\".lg.autoplay\"),this.core.LGel.off(\".autoplay\")},p}()}));\n","/**\n * lightgallery | 2.7.1 | January 11th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).lgThumbnail=e()}(this,(function(){\"use strict\";var t=function(){return(t=Object.assign||function(t){for(var e,i=1,s=arguments.length;i<s;i++)for(var h in e=arguments[i])Object.prototype.hasOwnProperty.call(e,h)&&(t[h]=e[h]);return t}).apply(this,arguments)},e={thumbnail:!0,animateThumb:!0,currentPagerPosition:\"middle\",alignThumbnails:\"middle\",thumbWidth:100,thumbHeight:\"80px\",thumbMargin:5,appendThumbnailsTo:\".lg-components\",toggleThumb:!1,enableThumbDrag:!0,enableThumbSwipe:!0,thumbnailSwipeThreshold:10,loadYouTubeThumbnail:!0,youTubeThumbSize:1,thumbnailPluginStrings:{toggleThumbnails:\"Toggle thumbnails\"}},i=\"lgContainerResize\",s=\"lgUpdateSlides\",h=\"lgBeforeOpen\",n=\"lgBeforeSlide\";return function(){function o(t,e){return this.thumbOuterWidth=0,this.thumbTotalWidth=0,this.translateX=0,this.thumbClickable=!1,this.core=t,this.$LG=e,this}return o.prototype.init=function(){this.settings=t(t({},e),this.core.settings),this.thumbOuterWidth=0,this.thumbTotalWidth=this.core.galleryItems.length*(this.settings.thumbWidth+this.settings.thumbMargin),this.translateX=0,this.setAnimateThumbStyles(),this.core.settings.allowMediaOverlap||(this.settings.toggleThumb=!1),this.settings.thumbnail&&(this.build(),this.settings.animateThumb?(this.settings.enableThumbDrag&&this.enableThumbDrag(),this.settings.enableThumbSwipe&&this.enableThumbSwipe(),this.thumbClickable=!1):this.thumbClickable=!0,this.toggleThumbBar(),this.thumbKeyPress())},o.prototype.build=function(){var t=this;this.setThumbMarkup(),this.manageActiveClassOnSlideChange(),this.$lgThumb.first().on(\"click.lg touchend.lg\",(function(e){var i=t.$LG(e.target);i.hasAttribute(\"data-lg-item-id\")&&setTimeout((function(){if(t.thumbClickable&&!t.core.lgBusy){var e=parseInt(i.attr(\"data-lg-item-id\"));t.core.slide(e,!1,!0,!1)}}),50)})),this.core.LGel.on(n+\".thumb\",(function(e){var i=e.detail.index;t.animateThumb(i)})),this.core.LGel.on(h+\".thumb\",(function(){t.thumbOuterWidth=t.core.outer.get().offsetWidth})),this.core.LGel.on(s+\".thumb\",(function(){t.rebuildThumbnails()})),this.core.LGel.on(i+\".thumb\",(function(){t.core.lgOpened&&setTimeout((function(){t.thumbOuterWidth=t.core.outer.get().offsetWidth,t.animateThumb(t.core.index),t.thumbOuterWidth=t.core.outer.get().offsetWidth}),50)}))},o.prototype.setThumbMarkup=function(){var t=\"lg-thumb-outer \";this.settings.alignThumbnails&&(t+=\"lg-thumb-align-\"+this.settings.alignThumbnails);var e='<div class=\"'+t+'\">\\n        <div class=\"lg-thumb lg-group\">\\n        </div>\\n        </div>';this.core.outer.addClass(\"lg-has-thumb\"),\".lg-components\"===this.settings.appendThumbnailsTo?this.core.$lgComponents.append(e):this.core.outer.append(e),this.$thumbOuter=this.core.outer.find(\".lg-thumb-outer\").first(),this.$lgThumb=this.core.outer.find(\".lg-thumb\").first(),this.settings.animateThumb&&this.core.outer.find(\".lg-thumb\").css(\"transition-duration\",this.core.settings.speed+\"ms\").css(\"width\",this.thumbTotalWidth+\"px\").css(\"position\",\"relative\"),this.setThumbItemHtml(this.core.galleryItems)},o.prototype.enableThumbDrag=function(){var t=this,e={cords:{startX:0,endX:0},isMoved:!1,newTranslateX:0,startTime:new Date,endTime:new Date,touchMoveTime:0},i=!1;this.$thumbOuter.addClass(\"lg-grab\"),this.core.outer.find(\".lg-thumb\").first().on(\"mousedown.lg.thumb\",(function(s){t.thumbTotalWidth>t.thumbOuterWidth&&(s.preventDefault(),e.cords.startX=s.pageX,e.startTime=new Date,t.thumbClickable=!1,i=!0,t.core.outer.get().scrollLeft+=1,t.core.outer.get().scrollLeft-=1,t.$thumbOuter.removeClass(\"lg-grab\").addClass(\"lg-grabbing\"))})),this.$LG(window).on(\"mousemove.lg.thumb.global\"+this.core.lgId,(function(s){t.core.lgOpened&&i&&(e.cords.endX=s.pageX,e=t.onThumbTouchMove(e))})),this.$LG(window).on(\"mouseup.lg.thumb.global\"+this.core.lgId,(function(){t.core.lgOpened&&(e.isMoved?e=t.onThumbTouchEnd(e):t.thumbClickable=!0,i&&(i=!1,t.$thumbOuter.removeClass(\"lg-grabbing\").addClass(\"lg-grab\")))}))},o.prototype.enableThumbSwipe=function(){var t=this,e={cords:{startX:0,endX:0},isMoved:!1,newTranslateX:0,startTime:new Date,endTime:new Date,touchMoveTime:0};this.$lgThumb.on(\"touchstart.lg\",(function(i){t.thumbTotalWidth>t.thumbOuterWidth&&(i.preventDefault(),e.cords.startX=i.targetTouches[0].pageX,t.thumbClickable=!1,e.startTime=new Date)})),this.$lgThumb.on(\"touchmove.lg\",(function(i){t.thumbTotalWidth>t.thumbOuterWidth&&(i.preventDefault(),e.cords.endX=i.targetTouches[0].pageX,e=t.onThumbTouchMove(e))})),this.$lgThumb.on(\"touchend.lg\",(function(){e.isMoved?e=t.onThumbTouchEnd(e):t.thumbClickable=!0}))},o.prototype.rebuildThumbnails=function(){var t=this;this.$thumbOuter.addClass(\"lg-rebuilding-thumbnails\"),setTimeout((function(){t.thumbTotalWidth=t.core.galleryItems.length*(t.settings.thumbWidth+t.settings.thumbMargin),t.$lgThumb.css(\"width\",t.thumbTotalWidth+\"px\"),t.$lgThumb.empty(),t.setThumbItemHtml(t.core.galleryItems),t.animateThumb(t.core.index)}),50),setTimeout((function(){t.$thumbOuter.removeClass(\"lg-rebuilding-thumbnails\")}),200)},o.prototype.setTranslate=function(t){this.$lgThumb.css(\"transform\",\"translate3d(-\"+t+\"px, 0px, 0px)\")},o.prototype.getPossibleTransformX=function(t){return t>this.thumbTotalWidth-this.thumbOuterWidth&&(t=this.thumbTotalWidth-this.thumbOuterWidth),t<0&&(t=0),t},o.prototype.animateThumb=function(t){if(this.$lgThumb.css(\"transition-duration\",this.core.settings.speed+\"ms\"),this.settings.animateThumb){var e=0;switch(this.settings.currentPagerPosition){case\"left\":e=0;break;case\"middle\":e=this.thumbOuterWidth/2-this.settings.thumbWidth/2;break;case\"right\":e=this.thumbOuterWidth-this.settings.thumbWidth}this.translateX=(this.settings.thumbWidth+this.settings.thumbMargin)*t-1-e,this.translateX>this.thumbTotalWidth-this.thumbOuterWidth&&(this.translateX=this.thumbTotalWidth-this.thumbOuterWidth),this.translateX<0&&(this.translateX=0),this.setTranslate(this.translateX)}},o.prototype.onThumbTouchMove=function(t){return t.newTranslateX=this.translateX,t.isMoved=!0,t.touchMoveTime=(new Date).valueOf(),t.newTranslateX-=t.cords.endX-t.cords.startX,t.newTranslateX=this.getPossibleTransformX(t.newTranslateX),this.setTranslate(t.newTranslateX),this.$thumbOuter.addClass(\"lg-dragging\"),t},o.prototype.onThumbTouchEnd=function(t){t.isMoved=!1,t.endTime=new Date,this.$thumbOuter.removeClass(\"lg-dragging\");var e=t.endTime.valueOf()-t.startTime.valueOf(),i=t.cords.endX-t.cords.startX,s=Math.abs(i)/e;return s>.15&&t.endTime.valueOf()-t.touchMoveTime<30?((s+=1)>2&&(s+=1),s+=s*(Math.abs(i)/this.thumbOuterWidth),this.$lgThumb.css(\"transition-duration\",Math.min(s-1,2)+\"settings\"),i*=s,this.translateX=this.getPossibleTransformX(this.translateX-i),this.setTranslate(this.translateX)):this.translateX=t.newTranslateX,Math.abs(t.cords.endX-t.cords.startX)<this.settings.thumbnailSwipeThreshold&&(this.thumbClickable=!0),t},o.prototype.getThumbHtml=function(t,e){var i,s=this.core.galleryItems[e].__slideVideoInfo||{};return i=s.youtube&&this.settings.loadYouTubeThumbnail?\"//img.youtube.com/vi/\"+s.youtube[1]+\"/\"+this.settings.youTubeThumbSize+\".jpg\":t,'<div data-lg-item-id=\"'+e+'\" class=\"lg-thumb-item '+(e===this.core.index?\" active\":\"\")+'\" \\n        style=\"width:'+this.settings.thumbWidth+\"px; height: \"+this.settings.thumbHeight+\";\\n            margin-right: \"+this.settings.thumbMargin+'px;\">\\n            <img data-lg-item-id=\"'+e+'\" src=\"'+i+'\" />\\n        </div>'},o.prototype.getThumbItemHtml=function(t){for(var e=\"\",i=0;i<t.length;i++)e+=this.getThumbHtml(t[i].thumb,i);return e},o.prototype.setThumbItemHtml=function(t){var e=this.getThumbItemHtml(t);this.$lgThumb.html(e)},o.prototype.setAnimateThumbStyles=function(){this.settings.animateThumb&&this.core.outer.addClass(\"lg-animate-thumb\")},o.prototype.manageActiveClassOnSlideChange=function(){var t=this;this.core.LGel.on(n+\".thumb\",(function(e){var i=t.core.outer.find(\".lg-thumb-item\"),s=e.detail.index;i.removeClass(\"active\"),i.eq(s).addClass(\"active\")}))},o.prototype.toggleThumbBar=function(){var t=this;this.settings.toggleThumb&&(this.core.outer.addClass(\"lg-can-toggle\"),this.core.$toolbar.append('<button type=\"button\" aria-label=\"'+this.settings.thumbnailPluginStrings.toggleThumbnails+'\" class=\"lg-toggle-thumb lg-icon\"></button>'),this.core.outer.find(\".lg-toggle-thumb\").first().on(\"click.lg\",(function(){t.core.outer.toggleClass(\"lg-components-open\")})))},o.prototype.thumbKeyPress=function(){var t=this;this.$LG(window).on(\"keydown.lg.thumb.global\"+this.core.lgId,(function(e){t.core.lgOpened&&t.settings.toggleThumb&&(38===e.keyCode?(e.preventDefault(),t.core.outer.addClass(\"lg-components-open\")):40===e.keyCode&&(e.preventDefault(),t.core.outer.removeClass(\"lg-components-open\")))}))},o.prototype.destroy=function(){this.settings.thumbnail&&(this.$LG(window).off(\".lg.thumb.global\"+this.core.lgId),this.core.LGel.off(\".lg.thumb\"),this.core.LGel.off(\".thumb\"),this.$thumbOuter.remove(),this.core.outer.removeClass(\"lg-has-thumb\"))},o}()}));\n","[\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-29-47.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-29-47.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/17:22\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-06.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-06.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/17:13\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-12.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-12.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/17:29\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-16.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-16.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/17:46\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-20.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-20.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/03/01/17:25\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-24.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-24.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/16:28\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-39.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-39.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/17:20\"\r\n  },\r\n  {\r\n    \"src\": \"images/brabanson/photo_2023-02-08_17-30-42.jpg\",\r\n    \"thumb\": \"images/brabanson/photo_2023-02-08_17-30-42.jpg\",\r\n    \"header\": \"\",\r\n    \"description\": \"\",\r\n    \"date\": \"2023/02/08/17:31\"\r\n  }\r\n]\r\n","import lightGallery from 'lightgallery';\r\nimport Autoplay from '../plugins/autoplay/lg-autoplay.min';\r\nimport Thumbnail from '../plugins/thumbnail/lg-thumbnail.min';\r\nimport DynemicGallaryEl from './source/DynamicMainGallaryEl.json';\r\nconst lgContainer = document.getElementById('inline-gallery-container');\r\nconst inlineGallery = lightGallery(lgContainer, {\r\n  container: lgContainer,\r\n  dynamic: true,\r\n\r\n  hash: false,\r\n\r\n  closeOnTap: true,\r\n\r\n  escKey: true,\r\n\r\n  controls: true,\r\n\r\n  closable: false,\r\n\r\n  showMaximizeIcon: true,\r\n\r\n  appendSubHtmlTo: '.lg-item',\r\n\r\n  slideShowAutoplay: true,\r\n\r\n  slideDelay: 0,\r\n  plugins: [Autoplay, Thumbnail],\r\n  controls: true,\r\n  dynamicEl: [...CreateDynemicEl()],\r\n});\r\n\r\nsetTimeout(() => {\r\n  inlineGallery.openGallery();\r\n}, 300);\r\nfunction SortElForDate() {\r\n  const arr = DynemicGallaryEl;\r\n  return arr.sort((a, b) => {\r\n    return new Date(b.date) - new Date(a.date);\r\n  });\r\n}\r\n\r\nfunction CreateDynemicEl() {\r\n  return SortElForDate().map(el => {\r\n    let arr = el;\r\n\r\n    arr.subHtml = `<div class=\"lightGallery-captions\">\r\n                <h4>${arr.header}</h4>\r\n                <p> ${arr.date}</p>\r\n            </div>`;\r\n    arr.src = `https://raw.githubusercontent.com/vaaleerkiin/Dog__Blog/main/src/${arr.src}`;\r\n    arr.thumb = `https://raw.githubusercontent.com/vaaleerkiin/Dog__Blog/main/src/${arr.thumb}`;\r\n    delete arr.header;\r\n    delete arr.description;\r\n    delete arr.date;\r\n\r\n    return arr;\r\n  });\r\n}\r\nconsole.log('yep');\r\n","import { LightGallerySettings } from './lg-settings';\nimport { LightGallery } from './lightgallery';\n\nfunction lightGallery(\n    el: HTMLElement,\n    options?: LightGallerySettings,\n): LightGallery {\n    return new LightGallery(el, options);\n}\nexport default lightGallery;\n","const LangArr = {\r\n  lng__logo: { ua: 'Щоденник Пті брабансона', en: `Brabanson's Dog Diary` },\r\n  lng__aboutMe__nav: { ua: 'Про мене', en: 'About Me' },\r\n  lng__news__nav: { ua: 'Новини', en: 'News' },\r\n  lng__contact__nav: { ua: 'Контаки', en: 'Contacts' },\r\n  lng__aboutMe__menu: { ua: 'Про мене', en: 'About Me' },\r\n  lng__news__menu: { ua: 'Новини', en: 'News' },\r\n  lng__contact__menu: { ua: 'Контаки', en: 'Contacts' },\r\n  lng__heroTitle: {\r\n    ua: 'Пті брабансон: блог собаки-компаньйона',\r\n    en: 'Brabanson: Companion Dog Blog',\r\n  },\r\n  lng__heroText: {\r\n    ua: 'Вітаємо на блозі нашої улюбленої собаки-компаньйона! Ми раді поділитися з вами нашими пригодами, враженнями та щоденним життям у сприятливому суспільстві з нашою веселою і доброю собачкою. Слідкуйте за нами та дізнавайтеся більше про нашу дружню команду!',\r\n    en: 'Welcome to the blog of our beloved companion dog! We are happy to share with you our adventures, impressions, and daily life in a friendly society with our cheerful and good dog. Follow us and learn more about our friendly team!',\r\n  },\r\n  lng__inform__title: { ua: 'Про мене', en: 'About Me' },\r\n};\r\n\r\nif (!localStorage.getItem('lang')) {\r\n  localStorage.setItem('lang', 'en');\r\n}\r\n\r\nconst refs = {\r\n  navBtnEn: document.querySelector('#nav__en'),\r\n  navBtnUa: document.querySelector('#nav__ua'),\r\n  menuBtnEn: document.querySelector('#menu__en'),\r\n  menuBtnUa: document.querySelector('#menu__ua'),\r\n};\r\n\r\nrefs.navBtnEn.addEventListener('click', () => {\r\n  localStorage.setItem('lang', 'en');\r\n  ChangeLang();\r\n});\r\nrefs.navBtnUa.addEventListener('click', () => {\r\n  localStorage.setItem('lang', 'ua');\r\n  ChangeLang();\r\n});\r\nrefs.menuBtnEn.addEventListener('click', () => {\r\n  localStorage.setItem('lang', 'en');\r\n  ChangeLang();\r\n});\r\nrefs.menuBtnUa.addEventListener('click', () => {\r\n  localStorage.setItem('lang', 'ua');\r\n  ChangeLang();\r\n});\r\n\r\nfunction ChangeLang() {\r\n  let lang = localStorage.getItem('lang');\r\n  for (const key in LangArr) {\r\n    document.querySelector(`.${key}`).innerHTML = LangArr[key][lang];\r\n  }\r\n}\r\nChangeLang();\r\n","const refs = {\r\n  openMenuBtn: document.querySelector('[data-menu-open]'),\r\n  MenuBtnaboutMe: document.querySelector('[data-menu-aboutMe]'),\r\n  MenuBtnSoc: document.querySelector('[data-menu-soc]'),\r\n  MenuBtnContact: document.querySelector('[data-menu-contact]'),\r\n  menu: document.querySelector('[data-menu]'),\r\n  menuBtnEn: document.querySelector('#menu__en'),\r\n  menuBtnUa: document.querySelector('#menu__ua'),\r\n};\r\n\r\nrefs.openMenuBtn.addEventListener('click', toggleModal);\r\nrefs.MenuBtnaboutMe.addEventListener('click', toggleModal);\r\nrefs.MenuBtnSoc.addEventListener('click', toggleModal);\r\nrefs.MenuBtnContact.addEventListener('click', toggleModal);\r\nrefs.menuBtnEn.addEventListener('click', toggleModal);\r\nrefs.menuBtnUa.addEventListener('click', toggleModal);\r\n\r\nfunction toggleModal() {\r\n  document.body.classList.toggle('menu-open');\r\n  refs.menu.classList.toggle('is-hidden-menu');\r\n}\r\n"],"names":["$39ec6716ddc9161a$var$lGEvents","$39ec6716ddc9161a$var$lightGalleryCoreSettings","mode","easing","speed","licenseKey","height","width","addClass","startClass","backdropDuration","container","startAnimationDuration","zoomFromOrigin","hideBarsDelay","showBarsAfter","slideDelay","supportLegacyBrowser","allowMediaOverlap","videoMaxSize","loadYouTubePoster","defaultCaptionHeight","ariaLabelledby","ariaDescribedby","resetScrollPosition","hideScrollbar","closable","swipeToClose","closeOnTap","showCloseIcon","showMaximizeIcon","loop","escKey","keyPress","trapFocus","controls","slideEndAnimation","hideControlOnEnd","mousewheel","getCaptionFromTitleOrAlt","appendSubHtmlTo","subHtmlSelectorRelative","preload","numberOfSlideItemsInDom","selector","selectWithin","nextHtml","prevHtml","index","iframeWidth","iframeHeight","iframeMaxWidth","iframeMaxHeight","download","counter","appendCounterTo","swipeThreshold","enableSwipe","enableDrag","dynamic","dynamicEl","extraProps","exThumbImage","isMobile","undefined","mobileSettings","plugins","strings","closeGallery","toggleMaximize","previousSlide","nextSlide","playVideo","$39ec6716ddc9161a$var$lgQuery","lgQuery","this","cssVenderPrefixes","_getSelector","firstElement","_getFirstEl","generateUUID","replace","c","r","Math","random","toString","prototype","context","document","substring","querySelector","querySelectorAll","_each","func","length","forEach","call","_setCssVendorPrefix","el","cssProperty","value","property","s","group1","toUpperCase","indexOf","style","charAt","toLowerCase","slice","isEventMatched","event","eventName","eventNamespace","split","filter","e","every","attr","getAttribute","setAttribute","find","$39ec6716ddc9161a$var$$LG","first","eq","parent","parentElement","get","removeAttr","attributes","attrs","removeAttribute","wrap","className","wrapper","createElement","parentNode","insertBefore","removeChild","appendChild","classNames","classList","add","removeClass","remove","hasClass","contains","hasAttribute","attribute","toggleClass","css","_this","on","events","listener","Array","isArray","eventListeners","push","addEventListener","once","off","Object","keys","removeEventListener","trigger","detail","customEvent","CustomEvent","dispatchEvent","load","url","fetch","then","res","text","html","innerHTML","append","insertAdjacentHTML","prepend","empty","scrollTop","body","documentElement","window","pageYOffset","scrollLeft","pageXOffset","offset","left","top","rect","getBoundingClientRect","bodyMarginLeft","marginLeft","parseFloat","currentStyle","getComputedStyle","clientWidth","paddingLeft","paddingRight","clientHeight","paddingTop","paddingBottom","params","bubbles","cancelable","evt","createEvent","initCustomEvent","Element","matches","msMatchesSelector","webkitMatchesSelector","$39ec6716ddc9161a$var$defaultDynamicOptions","$39ec6716ddc9161a$var$convertToData","g","$39ec6716ddc9161a$var$utils","spacing","defaultLgSize","lgSize","isResponsiveSizes","wWidth","innerWidth","i","size_1","parseInt","size","cWidth","cHeight","maxWidth","min","maxHeight","ratio","bottom","imageSize","LGel","containerRect","wHeight","elWidth","elHeight","elStyle","x","borderLeft","y","borderTop","src","iframeTitle","altAttr","srcset","sizes","sources","imgMarkup","sourceTag","JSON","parse","map","source","key","srcItms","rsWidth","rsSrc","_src","splice","j","img","complete","naturalWidth","_poster","dummyImg","videoContStyle","playVideoString","_isVideo","youtube","vimeo","elements","element","display","visibility","items","dynamicElements","availableDynamicOptions","$39ec6716ddc9161a$var$__spreadArrays","item","specified","dynamicAttr","name","label","currentItem","alt","title","thumb","subHtml","test","navigator","userAgent","isHTML5VIdeo","html5","console","error","match","wistia","$39ec6716ddc9161a$var$lgId","$39ec6716ddc9161a$var$LightGallery","LightGallery","options","lgOpened","lGalleryOn","lgBusy","currentItemsInDom","prevScrollTop","bodyPaddingRight","isDummyImageRemoved","dragOrSwipeEnabled","mediaContainerPosition","lgId","generateSettings","buildModules","settings","galleryItems","getItems","normalizeSettings","init","validateLicense","$39ec6716ddc9161a$var$__assign","addSlideVideoInfo","buildStructure","instance","setTimeout","triggerPosterClick","arrow","openGalleryOnItemClick","_loop_1","this_1","$element","uuid","preventDefault","currentItemIndex","openGallery","plugin","warn","getSlideItem","getSlideItemId","getIdName","id","getElementById","manageSingleSlideClassName","outer","$container","subHtmlCont","addClasses","containerClassName","closeIcon","maximizeIcon","template","$lgComponents","$backdrop","$inner","$content","$toolbar","outerClassNames","refreshOnResize","hideBars","manageCloseGallery","initModules","__slideVideoInfo","getMediaContainerPosition","_a","top_1","currentImageSize","resizeVideoSlide","imgStyle","getDummyImgStyles","lgVideoStyle","getVideoContStyle","updateSlides","currentSrc","updateControls","_index","some","galleryItem","itemIndex","organizeSlideItems","loadContent","updateCurrentCounter","children","shouldHideScrollbar","bodyRect","scrollbarWidth","resetScrollBar","itemsToBeInsertedToDom","getItemsToBeInsertedToDom","addHtml","transform","setMediaContainerPosition","timeout","currentSlide_1","slide","captionHeight","thumbContainer","clearTimeout","hideBarTimeout","initPictureFill","$img","picturefill","counterHtml","subHtmlUrl","fL","currentSlide","getDummyImageContent","$currentSlide","$currentItem","_dummyImgSrc","dummyImgContent","setImgMarkup","currentGalleryItem","isFirstSlideWithZoomAnimation","onSlideObjectLoad","$slide","isHTML5VideoWithoutPoster","onLoad","onError","mediaObject","onLgObjectLoad","delay","isFirstSlide","triggerSlideItemLoad","_speed","getSlideType","poster","video","rec","_html5Video","responsive","srcDyItms","videoInfo","iframe","top_2","videoSize","markup","html5Video","hasPoster","loadContentOnFirstSlideLoad","prevIndex","numberOfItems","possibleNumberOfItems","max","prevIndexItem","_element","idx","numberOfExistingItems","getPreviousSlideIndex","currentItemId","setDownloadValue","downloadUrl","$download","makeSlideAnimation","direction","currentSlideItem","previousSlideItem","fromTouch","fromThumb","numberOfGalleryItems","previousSlideItem_1","top_3","arrowDisable","touchPrev","touchNext","updateCounterTotal","touchMove","startCoords","endCoords","distanceX","pageX","distanceY","pageY","allowSwipe","swipeDirection","abs","setTranslate","offsetWidth","gutter","opacity","innerHeight","scale","touchEnd","distance","triggerClick","distanceAbs","goToNextSlide","goToPrevSlide","target","isPosterElement","isMoved","isSwiping","$item","touches","touchAction","manageSwipeClass","isDraging","_touchNext","_touchPrev","_loop","keyCode","$prev","$next","$el","xValue","yValue","scaleX","scaleY","lastCall","deltaY","now","Date","getTime","isSlideElement","playButton","invalidateItems","focus","preventScroll","focusableEls","firstFocusableEl","lastFocusableEl","shiftKey","activeElement","mousedown","force","top_4","_b","destroyModules","removeTimeout","blur","module","err","destroy","refresh","destroyGallery","closeTimeout","bind","t","o","a","l","n","u","assign","arguments","hasOwnProperty","apply","autoplay","slideShowAutoplay","slideShowInterval","progressBar","forceSlideShowAutoplay","autoplayControls","appendAutoplayControlsTo","autoplayPluginStrings","toggleAutoplay","$a431d9a043622abe$exports","p","core","interval","fromAuto","pausedOnTouchDrag","pausedOnSlideChange","startAutoPlay","stopAutoPlay","showProgressBar","setInterval","clearInterval","$7b3ea9b1eee17663$exports","h","thumbnail","animateThumb","currentPagerPosition","alignThumbnails","thumbWidth","thumbHeight","thumbMargin","appendThumbnailsTo","toggleThumb","enableThumbDrag","enableThumbSwipe","thumbnailSwipeThreshold","loadYouTubeThumbnail","youTubeThumbSize","thumbnailPluginStrings","toggleThumbnails","thumbOuterWidth","thumbTotalWidth","translateX","thumbClickable","$LG","setAnimateThumbStyles","build","toggleThumbBar","thumbKeyPress","setThumbMarkup","manageActiveClassOnSlideChange","$lgThumb","rebuildThumbnails","$thumbOuter","setThumbItemHtml","cords","startX","endX","newTranslateX","startTime","endTime","touchMoveTime","onThumbTouchMove","onThumbTouchEnd","targetTouches","getPossibleTransformX","valueOf","getThumbHtml","getThumbItemHtml","$c9fd14b9358a5306$exports","$db1d012c0cc07074$var$lgContainer","$db1d012c0cc07074$var$inlineGallery","hash","$parcel$interopDefault","sort","b","date","arr","header","description","log","$ea1461f67c62ff81$var$LangArr","lng__logo","ua","en","lng__aboutMe__nav","lng__news__nav","lng__contact__nav","lng__aboutMe__menu","lng__news__menu","lng__contact__menu","lng__heroTitle","lng__heroText","lng__inform__title","localStorage","getItem","setItem","$ea1461f67c62ff81$var$refs","navBtnEn","navBtnUa","menuBtnEn","menuBtnUa","$ea1461f67c62ff81$var$ChangeLang","lang","$6442e51d8b52aaf7$var$refs","openMenuBtn","MenuBtnaboutMe","MenuBtnSoc","MenuBtnContact","menu","$6442e51d8b52aaf7$var$toggleModal","toggle"],"version":3,"file":"index.6a6d6232.js.map"}